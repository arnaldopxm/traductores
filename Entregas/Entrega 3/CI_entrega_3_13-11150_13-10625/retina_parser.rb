#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require_relative "retina.rb"
require_relative "retina_ast.rb"

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        "linea: #{@token.lin},columna: #{@token.col}: token inesperado: '#{@token.token}'"
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina.y/module_eval...', 'retina.y', 250)
begin
  attr_accessor :errors

  def initialize
    @errors = []
  end

  def on_error(id, token, stack)
      @errors << SyntacticError.new(token)
  end

  def next_token
      if !@tokens.empty?
        token = @tokens[0]
        @tokens = @tokens[1..@tokens.length]
        return [token.class,token]
      else
        return [false,false]
      end
  end

  def parse(tokens)
      @yydebug = true
      @tokens = tokens
      ast = do_parse
      return ast
  end
end
...end retina.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    15,    16,   103,   169,    19,    15,    16,    88,    87,    19,
   145,     5,   163,     5,    13,   153,    92,    97,    14,    13,
    18,   152,     2,    14,     2,    18,   156,    32,    33,    34,
    36,   170,   144,    37,   162,    39,    88,    87,     8,    31,
    38,    88,    87,    88,    87,    21,    22,    23,    24,    25,
    26,    27,    28,    29,    15,    16,     8,    35,    19,   128,
   143,     8,   142,    55,   140,    56,    88,    87,    13,    88,
    87,   127,    14,   147,    18,   154,    56,    99,     8,   168,
    98,    32,    33,    34,    36,   171,   133,    37,   173,    39,
     8,    55,   176,    31,    38,   177,    74,     8,   180,    21,
    22,    23,    24,    25,    26,    27,    28,    29,   181,    52,
     8,    35,    70,    71,   183,    72,    73,    68,    69,    66,
    67,    51,    50,   187,   148,    10,   190,   191,     8,     7,
    60,    62,    61,    65,    63,    64,   194,    15,    16,   nil,
   nil,    19,    70,    71,   192,    72,    73,    68,    69,    66,
    67,    13,   108,   nil,   nil,    14,   nil,    18,   nil,   nil,
    60,    62,    61,    65,    63,    64,   nil,    15,    16,    59,
   nil,    19,   nil,   nil,   nil,   nil,   138,   nil,   nil,   nil,
   nil,    13,   nil,   nil,   nil,    14,   nil,    18,   nil,   nil,
   nil,   nil,   nil,     8,    32,    33,    34,    36,   nil,    59,
    37,   nil,    39,   nil,   nil,   nil,    31,    38,   nil,   nil,
   nil,   nil,    21,    22,    23,    24,    25,    26,    27,    28,
    29,    15,    16,     8,    35,    19,    15,    16,   nil,   nil,
    19,   nil,   nil,   nil,   nil,    13,   nil,   nil,   nil,    14,
    13,    18,   nil,   nil,    14,   nil,    18,   nil,    32,    33,
    34,    36,   nil,    49,    37,   nil,    39,   nil,   nil,   nil,
    31,    38,   nil,   nil,   nil,   nil,    21,    22,    23,    24,
    25,    26,    27,    28,    29,    15,    16,     8,    35,    19,
   nil,   nil,     8,   nil,   nil,   nil,   nil,   nil,   nil,    13,
   nil,   nil,   nil,    14,   nil,    18,   nil,   nil,   nil,   nil,
   nil,   nil,    32,    33,    34,    36,   nil,   nil,    37,   nil,
    39,   nil,   nil,   nil,    31,    38,   nil,   nil,   nil,   nil,
    21,    22,    23,    24,    25,    26,    27,    28,    29,   nil,
   nil,     8,    35,    70,    71,   nil,    72,    73,    68,    69,
    66,    67,   nil,    15,    16,   nil,   nil,    19,   nil,   nil,
   nil,    60,    62,    61,    65,    63,    64,    13,    15,    16,
   nil,    14,    19,    18,   nil,   184,   nil,   nil,   nil,   nil,
   nil,   nil,    13,   nil,   185,   nil,    14,   nil,    18,   nil,
   nil,   nil,   nil,   nil,   nil,    32,    33,    34,    36,   nil,
    59,    37,   nil,    39,   nil,   nil,   nil,    31,    38,     8,
   nil,   nil,   nil,    21,    22,    23,    24,    25,    26,    27,
    28,    29,   nil,   nil,     8,    35,    70,    71,   nil,    72,
    73,    68,    69,    66,    67,    70,    71,   nil,    72,    73,
    68,    69,    66,    67,    60,    62,    61,    65,    63,    64,
   nil,   nil,   nil,    60,    62,    61,    65,    63,    64,   nil,
   nil,   nil,   nil,   nil,   nil,   137,   nil,   136,    70,    71,
   nil,    72,    73,    68,    69,    66,    67,   nil,   nil,   nil,
   nil,    15,    16,    59,   nil,    19,    60,    62,    61,    65,
    63,    64,    59,   nil,   nil,    13,   nil,   135,   nil,    14,
   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,    32,    33,
    34,    36,   nil,   nil,    37,   nil,    39,   nil,   nil,   nil,
    31,    38,   nil,   nil,   nil,    59,    21,    22,    23,    24,
    25,    26,    27,    28,    29,   nil,   nil,     8,    35,    70,
    71,   nil,    72,    73,    68,    69,    66,    67,   nil,   nil,
   nil,   nil,    15,    16,   nil,   nil,    19,    60,    62,    61,
    65,    63,    64,   nil,   nil,   nil,    13,   nil,   nil,   nil,
    14,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,    32,
    33,    34,    36,   nil,   nil,    37,   nil,    39,   nil,   nil,
   nil,    31,    38,   nil,   nil,   nil,    59,    21,    22,    23,
    24,    25,    26,    27,    28,    29,    15,    16,     8,    35,
    19,    15,    16,   nil,   nil,    19,   nil,   nil,   nil,   nil,
    13,   nil,   nil,   nil,    14,    13,    18,   nil,   nil,    14,
   nil,    18,   nil,    32,    33,    34,    36,   nil,   nil,    37,
   nil,    39,   nil,   nil,   nil,    31,    38,   nil,   nil,   nil,
   nil,    21,    22,    23,    24,    25,    26,    27,    28,    29,
    15,    16,     8,    35,    19,    15,    16,     8,   nil,    19,
   nil,   nil,   nil,   nil,    13,   nil,   nil,   nil,    14,    13,
    18,   nil,   nil,    14,   nil,    18,   nil,    32,    33,    34,
    36,   nil,   nil,    37,   nil,    39,   nil,   nil,   nil,    31,
    38,   nil,   nil,   nil,   nil,    21,    22,    23,    24,    25,
    26,    27,    28,    29,    15,    16,     8,    35,    19,    15,
    16,     8,   nil,    19,   nil,   nil,   nil,   nil,    13,   nil,
   nil,   nil,    14,    13,    18,   nil,   nil,    14,   nil,    18,
   nil,    32,    33,    34,    36,   nil,   nil,    37,   nil,    39,
   nil,   nil,   nil,    31,    38,   nil,   nil,   nil,   nil,    21,
    22,    23,    24,    25,    26,    27,    28,    29,    15,    16,
     8,    35,    19,   nil,   nil,     8,   nil,   nil,   nil,   nil,
   nil,   nil,    13,   nil,   nil,   nil,    14,   nil,    18,   nil,
   nil,   nil,   nil,   nil,   nil,    32,    33,    34,    36,   nil,
   nil,    37,   nil,    39,   nil,   nil,   nil,    31,    38,   nil,
   nil,   nil,   nil,    21,    22,    23,    24,    25,    26,    27,
    28,    29,   nil,   nil,     8,    35,    70,    71,   nil,    72,
    73,    68,    69,    66,    67,   nil,   nil,   nil,   nil,    15,
    16,   146,   nil,    19,    60,    62,    61,    65,    63,    64,
   nil,   nil,   nil,    13,   nil,   nil,   nil,    14,   nil,    18,
   nil,   nil,   nil,   nil,   nil,   nil,    32,    33,    34,    36,
   nil,   nil,    37,   nil,    39,   nil,   nil,   nil,    31,    38,
   nil,   nil,   nil,    59,    21,    22,    23,    24,    25,    26,
    27,    28,    29,   nil,   nil,     8,    35,    70,    71,   nil,
    72,    73,    68,    69,    66,    67,    70,    71,   nil,    72,
    73,    68,    69,    66,    67,    60,    62,    61,    65,    63,
    64,   nil,   nil,   nil,    60,    62,    61,    65,    63,    64,
    70,    71,   nil,    72,    73,    68,    69,    66,    67,   nil,
   nil,   nil,   nil,   104,   nil,   nil,   nil,   nil,    60,    62,
    61,    65,    63,    64,    59,   nil,   nil,   nil,   nil,   nil,
   nil,    70,    71,    59,    72,    73,    68,    69,    66,    67,
    70,    71,   nil,    72,    73,    68,    69,    66,    67,    60,
    62,    61,    65,    63,    64,   nil,   nil,    59,    60,    62,
    61,    65,    63,    64,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   172,    70,    71,   nil,    72,    73,    68,    69,    66,
    67,   nil,   nil,   nil,   nil,    15,    16,   nil,    59,    19,
    60,    62,    61,    65,    63,    64,   -65,    59,   nil,    13,
   nil,   nil,   nil,    14,   nil,    18,   nil,   nil,   nil,   nil,
   nil,   nil,    32,    33,    34,    36,   nil,   nil,    37,   nil,
    39,   nil,   nil,   nil,    31,    38,   nil,   nil,   nil,    59,
    21,    22,    23,    24,    25,    26,    27,    28,    29,    15,
    16,     8,    35,    19,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    15,    16,    13,   nil,    19,   nil,    14,   nil,    18,
    15,    16,   nil,   nil,    19,    13,   nil,   nil,   nil,    14,
   nil,    18,   nil,   nil,    13,   nil,   nil,   nil,    14,   nil,
    18,   nil,   nil,   nil,    21,    22,    23,    24,    25,    26,
    27,    28,    29,   nil,   nil,     8,    21,    22,    23,    24,
    25,    26,    27,    28,    29,    15,    16,     8,   nil,    19,
    15,    16,   nil,   nil,    19,   nil,     8,    15,    16,    13,
   nil,    19,   nil,    14,    13,    18,   nil,   nil,    14,   nil,
    18,    13,    15,    16,   nil,    14,    19,    18,   nil,    15,
    16,   nil,   nil,    19,    15,    16,    13,   nil,    19,   nil,
    14,   nil,    18,    13,   nil,   nil,   nil,    14,    13,    18,
   nil,     8,    14,   nil,    18,   nil,     8,    15,    16,   nil,
   nil,    19,   nil,     8,   nil,   nil,    15,    16,   nil,   nil,
    19,    13,   nil,   nil,   nil,    14,   nil,    18,     8,   nil,
    13,   nil,   nil,   nil,    14,     8,    18,    15,    16,   nil,
     8,    19,    15,    16,   nil,   nil,    19,   nil,   nil,   nil,
   nil,    13,   125,   nil,   nil,    14,    13,    18,   nil,   nil,
    14,   nil,    18,     8,    15,    16,   nil,   nil,    19,   nil,
   nil,   nil,     8,   nil,   nil,   nil,    15,    16,    13,   nil,
    19,   nil,    14,   nil,    18,    15,    16,   nil,   nil,    19,
    13,   nil,   nil,     8,    14,    80,    18,   nil,     8,    13,
   nil,   nil,   nil,    14,   nil,    18,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     8,    21,    22,    23,    24,    25,    26,    27,    28,    29,
    15,    16,     8,   nil,    19,   nil,   nil,   nil,   nil,   nil,
   nil,     8,    15,    16,    13,   nil,    19,   nil,    14,   nil,
    18,   nil,   nil,   nil,    15,    16,    13,   nil,    19,   nil,
    14,    80,    18,    15,    16,   nil,   nil,    19,    13,   nil,
   nil,   nil,    14,    80,    18,   nil,   nil,    13,   nil,   nil,
   nil,    14,   nil,    18,   nil,   nil,     8,    21,    22,    23,
    24,    25,    26,    27,    28,    29,   nil,   nil,     8,    21,
    22,    23,    24,    25,    26,    27,    28,    29,    15,    16,
     8,   nil,    19,    15,    16,   nil,   nil,    19,   nil,     8,
    15,    16,    13,   nil,    19,   nil,    14,    13,    18,   nil,
   nil,    14,   nil,    18,    13,   nil,   nil,   nil,    14,   nil,
    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,    16,
   nil,   nil,    19,    21,    22,    23,    24,    25,    26,    27,
    28,    29,    13,   nil,     8,   nil,    14,   nil,    18,     8,
    15,    16,   nil,   nil,    19,   nil,     8,    15,    16,   nil,
   nil,    19,    15,    16,    13,   nil,    19,   nil,    14,   nil,
    18,    13,   nil,   nil,   nil,    14,    13,    18,   nil,   nil,
    14,   nil,    18,   nil,     8,   nil,   nil,   nil,    70,   nil,
   nil,    72,    73,    68,    69,    66,    67,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     8,    62,    61,    65,
    63,    64,   nil,     8,   nil,   nil,    70,   nil,     8,    72,
    73,    68,    69,    66,    67,    70,   nil,   nil,    72,    73,
    68,    69,    66,    67,   nil,    62,    61,    65,    63,    64,
   nil,   nil,   nil,   nil,    62,    61,    65,    63,    64 ]

racc_action_check = [
   144,   144,    51,   157,   144,    59,    59,   145,   145,    59,
   103,     0,   143,     4,   144,   130,    35,    47,   144,    59,
   144,   130,     0,    59,     4,    59,   134,   144,   144,   144,
   144,   157,   103,   144,   143,   144,    35,    35,    89,   144,
   144,    51,    51,   163,   163,   144,   144,   144,   144,   144,
   144,   144,   144,   144,   192,   192,   144,   144,   192,    84,
   102,    59,   102,    17,    98,    17,   142,   142,   192,    90,
    90,    78,   192,   109,   192,   131,    75,    49,   152,   155,
    48,   192,   192,   192,   192,   158,    91,   192,   160,   192,
    32,   129,   164,   192,   192,   165,    30,   100,   174,   192,
   192,   192,   192,   192,   192,   192,   192,   192,   175,    11,
   192,   192,   189,   189,   178,   189,   189,   189,   189,   189,
   189,     9,     7,   182,   126,     3,   186,   188,     2,     1,
   189,   189,   189,   189,   189,   189,   193,    56,    56,   nil,
   nil,    56,    96,    96,   189,    96,    96,    96,    96,    96,
    96,    56,    56,   nil,   nil,    56,   nil,    56,   nil,   nil,
    96,    96,    96,    96,    96,    96,   nil,   184,   184,   189,
   nil,   184,   nil,   nil,   nil,   nil,    96,   nil,   nil,   nil,
   nil,   184,   nil,   nil,   nil,   184,   nil,   184,   nil,   nil,
   nil,   nil,   nil,    56,   184,   184,   184,   184,   nil,    96,
   184,   nil,   184,   nil,   nil,   nil,   184,   184,   nil,   nil,
   nil,   nil,   184,   184,   184,   184,   184,   184,   184,   184,
   184,     5,     5,   184,   184,     5,    60,    60,   nil,   nil,
    60,   nil,   nil,   nil,   nil,     5,   nil,   nil,   nil,     5,
    60,     5,   nil,   nil,    60,   nil,    60,   nil,     5,     5,
     5,     5,   nil,     5,     5,   nil,     5,   nil,   nil,   nil,
     5,     5,   nil,   nil,   nil,   nil,     5,     5,     5,     5,
     5,     5,     5,     5,     5,   181,   181,     5,     5,   181,
   nil,   nil,    60,   nil,   nil,   nil,   nil,   nil,   nil,   181,
   nil,   nil,   nil,   181,   nil,   181,   nil,   nil,   nil,   nil,
   nil,   nil,   181,   181,   181,   181,   nil,   nil,   181,   nil,
   181,   nil,   nil,   nil,   181,   181,   nil,   nil,   nil,   nil,
   181,   181,   181,   181,   181,   181,   181,   181,   181,   nil,
   nil,   181,   181,   179,   179,   nil,   179,   179,   179,   179,
   179,   179,   nil,    61,    61,   nil,   nil,    61,   nil,   nil,
   nil,   179,   179,   179,   179,   179,   179,    61,   177,   177,
   nil,    61,   177,    61,   nil,   179,   nil,   nil,   nil,   nil,
   nil,   nil,   177,   nil,   179,   nil,   177,   nil,   177,   nil,
   nil,   nil,   nil,   nil,   nil,   177,   177,   177,   177,   nil,
   179,   177,   nil,   177,   nil,   nil,   nil,   177,   177,    61,
   nil,   nil,   nil,   177,   177,   177,   177,   177,   177,   177,
   177,   177,   nil,   nil,   177,   177,    95,    95,   nil,    95,
    95,    95,    95,    95,    95,    94,    94,   nil,    94,    94,
    94,    94,    94,    94,    95,    95,    95,    95,    95,    95,
   nil,   nil,   nil,    94,    94,    94,    94,    94,    94,   nil,
   nil,   nil,   nil,   nil,   nil,    95,   nil,    94,    93,    93,
   nil,    93,    93,    93,    93,    93,    93,   nil,   nil,   nil,
   nil,    92,    92,    95,   nil,    92,    93,    93,    93,    93,
    93,    93,    94,   nil,   nil,    92,   nil,    93,   nil,    92,
   nil,    92,   nil,   nil,   nil,   nil,   nil,   nil,    92,    92,
    92,    92,   nil,   nil,    92,   nil,    92,   nil,   nil,   nil,
    92,    92,   nil,   nil,   nil,    93,    92,    92,    92,    92,
    92,    92,    92,    92,    92,   nil,   nil,    92,    92,    20,
    20,   nil,    20,    20,    20,    20,    20,    20,   nil,   nil,
   nil,   nil,   170,   170,   nil,   nil,   170,    20,    20,    20,
    20,    20,    20,   nil,   nil,   nil,   170,   nil,   nil,   nil,
   170,   nil,   170,   nil,   nil,   nil,   nil,   nil,   nil,   170,
   170,   170,   170,   nil,   nil,   170,   nil,   170,   nil,   nil,
   nil,   170,   170,   nil,   nil,   nil,    20,   170,   170,   170,
   170,   170,   170,   170,   170,   170,   135,   135,   170,   170,
   135,    62,    62,   nil,   nil,    62,   nil,   nil,   nil,   nil,
   135,   nil,   nil,   nil,   135,    62,   135,   nil,   nil,    62,
   nil,    62,   nil,   135,   135,   135,   135,   nil,   nil,   135,
   nil,   135,   nil,   nil,   nil,   135,   135,   nil,   nil,   nil,
   nil,   135,   135,   135,   135,   135,   135,   135,   135,   135,
   162,   162,   135,   135,   162,    63,    63,    62,   nil,    63,
   nil,   nil,   nil,   nil,   162,   nil,   nil,   nil,   162,    63,
   162,   nil,   nil,    63,   nil,    63,   nil,   162,   162,   162,
   162,   nil,   nil,   162,   nil,   162,   nil,   nil,   nil,   162,
   162,   nil,   nil,   nil,   nil,   162,   162,   162,   162,   162,
   162,   162,   162,   162,   136,   136,   162,   162,   136,    64,
    64,    63,   nil,    64,   nil,   nil,   nil,   nil,   136,   nil,
   nil,   nil,   136,    64,   136,   nil,   nil,    64,   nil,    64,
   nil,   136,   136,   136,   136,   nil,   nil,   136,   nil,   136,
   nil,   nil,   nil,   136,   136,   nil,   nil,   nil,   nil,   136,
   136,   136,   136,   136,   136,   136,   136,   136,   133,   133,
   136,   136,   133,   nil,   nil,    64,   nil,   nil,   nil,   nil,
   nil,   nil,   133,   nil,   nil,   nil,   133,   nil,   133,   nil,
   nil,   nil,   nil,   nil,   nil,   133,   133,   133,   133,   nil,
   nil,   133,   nil,   133,   nil,   nil,   nil,   133,   133,   nil,
   nil,   nil,   nil,   133,   133,   133,   133,   133,   133,   133,
   133,   133,   nil,   nil,   133,   133,   107,   107,   nil,   107,
   107,   107,   107,   107,   107,   nil,   nil,   nil,   nil,   138,
   138,   107,   nil,   138,   107,   107,   107,   107,   107,   107,
   nil,   nil,   nil,   138,   nil,   nil,   nil,   138,   nil,   138,
   nil,   nil,   nil,   nil,   nil,   nil,   138,   138,   138,   138,
   nil,   nil,   138,   nil,   138,   nil,   nil,   nil,   138,   138,
   nil,   nil,   nil,   107,   138,   138,   138,   138,   138,   138,
   138,   138,   138,   nil,   nil,   138,   138,    81,    81,   nil,
    81,    81,    81,    81,    81,    81,    76,    76,   nil,    76,
    76,    76,    76,    76,    76,    81,    81,    81,    81,    81,
    81,   nil,   nil,   nil,    76,    76,    76,    76,    76,    76,
    53,    53,   nil,    53,    53,    53,    53,    53,    53,   nil,
   nil,   nil,   nil,    53,   nil,   nil,   nil,   nil,    53,    53,
    53,    53,    53,    53,    81,   nil,   nil,   nil,   nil,   nil,
   nil,   159,   159,    76,   159,   159,   159,   159,   159,   159,
   105,   105,   nil,   105,   105,   105,   105,   105,   105,   159,
   159,   159,   159,   159,   159,   nil,   nil,    53,   105,   105,
   105,   105,   105,   105,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   159,   149,   149,   nil,   149,   149,   149,   149,   149,
   149,   nil,   nil,   nil,   nil,    97,    97,   nil,   159,    97,
   149,   149,   149,   149,   149,   149,    97,   105,   nil,    97,
   nil,   nil,   nil,    97,   nil,    97,   nil,   nil,   nil,   nil,
   nil,   nil,    97,    97,    97,    97,   nil,   nil,    97,   nil,
    97,   nil,   nil,   nil,    97,    97,   nil,   nil,   nil,   149,
    97,    97,    97,    97,    97,    97,    97,    97,    97,   127,
   127,    97,    97,   127,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    55,    55,   127,   nil,    55,   nil,   127,   nil,   127,
    65,    65,   nil,   nil,    65,    55,   nil,   nil,   nil,    55,
   nil,    55,   nil,   nil,    65,   nil,   nil,   nil,    65,   nil,
    65,   nil,   nil,   nil,   127,   127,   127,   127,   127,   127,
   127,   127,   127,   nil,   nil,   127,    55,    55,    55,    55,
    55,    55,    55,    55,    55,    66,    66,    55,   nil,    66,
    67,    67,   nil,   nil,    67,   nil,    65,    68,    68,    66,
   nil,    68,   nil,    66,    67,    66,   nil,   nil,    67,   nil,
    67,    68,    69,    69,   nil,    68,    69,    68,   nil,    70,
    70,   nil,   nil,    70,    71,    71,    69,   nil,    71,   nil,
    69,   nil,    69,    70,   nil,   nil,   nil,    70,    71,    70,
   nil,    66,    71,   nil,    71,   nil,    67,    72,    72,   nil,
   nil,    72,   nil,    68,   nil,   nil,    39,    39,   nil,   nil,
    39,    72,   nil,   nil,   nil,    72,   nil,    72,    69,   nil,
    39,   nil,   nil,   nil,    39,    70,    39,    74,    74,   nil,
    71,    74,   146,   146,   nil,   nil,   146,   nil,   nil,   nil,
   nil,    74,    74,   nil,   nil,    74,   146,    74,   nil,   nil,
   146,   nil,   146,    72,    38,    38,   nil,   nil,    38,   nil,
   nil,   nil,    39,   nil,   nil,   nil,   128,   128,    38,   nil,
   128,   nil,    38,   nil,    38,    37,    37,   nil,   nil,    37,
   128,   nil,   nil,    74,   128,   128,   128,   nil,   146,    37,
   nil,   nil,   nil,    37,   nil,    37,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    38,   128,   128,   128,   128,   128,   128,   128,   128,   128,
    36,    36,   128,   nil,    36,   nil,   nil,   nil,   nil,   nil,
   nil,    37,    34,    34,    36,   nil,    34,   nil,    36,   nil,
    36,   nil,   nil,   nil,    33,    33,    34,   nil,    33,   nil,
    34,    34,    34,    19,    19,   nil,   nil,    19,    33,   nil,
   nil,   nil,    33,    33,    33,   nil,   nil,    19,   nil,   nil,
   nil,    19,   nil,    19,   nil,   nil,    36,    34,    34,    34,
    34,    34,    34,    34,    34,    34,   nil,   nil,    34,    33,
    33,    33,    33,    33,    33,    33,    33,    33,    31,    31,
    33,   nil,    31,    18,    18,   nil,   nil,    18,   nil,    19,
   172,   172,    31,   nil,   172,   nil,    31,    18,    31,   nil,
   nil,    18,   nil,    18,   172,   nil,   nil,   nil,   172,   nil,
   172,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    13,    13,
   nil,   nil,    13,    31,    31,    31,    31,    31,    31,    31,
    31,    31,    13,   nil,    31,   nil,    13,   nil,    13,    18,
   185,   185,   nil,   nil,   185,   nil,   172,    73,    73,   nil,
   nil,    73,   137,   137,   185,   nil,   137,   nil,   185,   nil,
   185,    73,   nil,   nil,   nil,    73,   137,    73,   nil,   nil,
   137,   nil,   137,   nil,    13,   nil,   nil,   nil,   111,   nil,
   nil,   111,   111,   111,   111,   111,   111,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   185,   111,   111,   111,
   111,   111,   nil,    73,   nil,   nil,   122,   nil,   137,   122,
   122,   122,   122,   122,   122,   110,   nil,   nil,   110,   110,
   110,   110,   110,   110,   nil,   122,   122,   122,   122,   122,
   nil,   nil,   nil,   nil,   110,   110,   110,   110,   110 ]

racc_action_pointer = [
   -17,   129,    70,   112,   -15,   219,   nil,   122,   nil,   105,
   nil,    96,   nil,  1426,   nil,   nil,   nil,    49,  1391,  1341,
   525,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    80,  1386,    32,  1332,  1320,   -20,  1308,  1263,  1242,  1194,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,    46,    64,
   nil,   -15,   nil,   916,   nil,  1069,   135,   nil,   nil,     3,
   224,   341,   599,   653,   707,  1078,  1123,  1128,  1135,  1150,
  1157,  1162,  1185,  1455,  1215,    60,   892,   nil,    52,   nil,
   nil,   883,   nil,   nil,    40,   nil,   nil,   nil,   nil,   -20,
    13,    50,   469,   454,   421,   412,   138,  1003,    51,   nil,
    39,   nil,    43,    -8,   nil,   956,   nil,   812,   nil,    56,
  1521,  1484,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,  1512,   nil,   nil,   nil,   107,  1057,  1254,    77,
     2,    62,   nil,   756,    -8,   594,   702,  1460,   827,   nil,
   nil,   nil,    10,    -6,    -2,   -49,  1220,   nil,   nil,   988,
   nil,   nil,    20,   nil,   nil,    45,   nil,   -31,    51,   947,
    54,   nil,   648,   -13,    58,    55,   nil,   nil,   nil,   nil,
   540,   nil,  1398,   nil,    64,    68,   nil,   356,    80,   329,
   nil,   273,    89,   nil,   165,  1448,    92,   nil,    93,   108,
   nil,   nil,    52,   102,   nil ]

racc_action_default = [
   -95,   -95,   -95,   -95,   -95,   -65,   -94,   -95,    -1,   -95,
   -89,   -95,   -93,   -95,    -8,    -9,   -10,   -11,   -95,   -95,
   -74,   -35,   -36,   -37,   -38,   -39,   -40,   -41,   -42,   -43,
   -95,   -95,   -95,   -95,   -95,   -95,   -95,   -95,   -95,   -95,
   -72,   -73,   -75,   -76,   -77,   -78,   -79,   -95,   -95,   -95,
   195,   -95,   -90,   -95,   -11,   -95,   -95,   -12,   -13,   -95,
   -95,   -95,   -95,   -95,   -95,   -95,   -95,   -95,   -95,   -95,
   -95,   -95,   -95,   -95,   -95,   -11,   -50,   -51,   -54,   -55,
    -6,   -57,   -56,   -58,   -59,   -61,   -62,    -4,    -5,   -95,
   -31,   -95,   -65,   -95,   -95,   -95,   -95,   -80,   -95,   -92,
   -95,   -83,   -95,   -95,    -7,   -33,   -34,   -44,   -46,   -95,
   -14,   -15,   -16,   -17,   -18,   -19,   -20,   -21,   -22,   -23,
   -24,   -25,   -26,   -27,   -28,   -48,   -95,   -95,   -95,    -2,
   -95,   -95,   -32,   -65,   -95,   -65,   -65,   -95,   -65,   -81,
   -91,   -82,   -95,   -95,   -65,   -95,   -95,   -47,   -49,   -52,
   -53,   -60,   -95,   -29,   -30,   -95,   -64,   -95,   -95,   -95,
   -95,   -84,   -65,   -95,   -95,   -95,   -45,    -3,   -63,   -66,
   -65,   -68,   -95,   -71,   -95,   -95,   -86,   -65,   -95,   -95,
   -85,   -65,   -95,   -67,   -65,   -95,   -95,   -88,   -95,   -95,
   -87,   -69,   -65,   -95,   -70 ]

racc_goto_table = [
     9,   101,   100,    17,    85,    86,     3,     6,    78,   131,
    11,    12,   102,    48,   130,    53,   109,     4,     1,   nil,
    57,    58,    77,    91,    83,    83,   nil,   nil,   nil,    75,
    79,    75,    75,    76,   126,    81,    81,   nil,    93,    94,
    95,    96,   nil,   nil,   nil,   nil,   106,   nil,   nil,   nil,
   nil,   nil,   nil,    75,   nil,   nil,   nil,   105,   107,   nil,
   nil,   110,   111,   112,   113,   114,   115,   116,   117,   118,
   119,   120,   121,   122,   123,   124,   107,   nil,   132,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   129,   nil,   nil,
    17,   nil,   161,   100,   nil,    17,   165,   nil,   141,   151,
   134,   nil,   nil,   nil,   nil,   139,   166,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   175,   nil,   nil,   nil,   150,    83,
   nil,   nil,   nil,   nil,   nil,    75,    75,   nil,   nil,   149,
    81,    17,   nil,    17,    17,   nil,    17,   nil,   nil,   159,
   nil,   155,    17,   157,   158,   nil,   160,   nil,   107,   nil,
   167,   nil,   164,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    17,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    17,   nil,
   174,   nil,   nil,   nil,   179,    17,   nil,   nil,   178,    17,
   nil,   nil,    17,   nil,   nil,   182,   nil,   189,   nil,   186,
    17,   nil,   188,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   193 ]

racc_goto_check = [
     2,    23,     4,     2,    17,    17,    25,    27,    13,     8,
    25,    27,    24,    20,     3,     6,    12,    26,     1,   nil,
     6,     6,    10,     9,    10,    10,   nil,   nil,   nil,     2,
     2,     2,     2,     6,    12,     6,     6,   nil,     6,     6,
     6,     6,   nil,   nil,   nil,   nil,    10,   nil,   nil,   nil,
   nil,   nil,   nil,     2,   nil,   nil,   nil,     6,     6,   nil,
   nil,     6,     6,     6,     6,     6,     6,     6,     6,     6,
     6,     6,     6,     6,     6,     6,     6,   nil,     9,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,
     2,   nil,    23,     4,   nil,     2,     4,   nil,     2,    17,
    20,   nil,   nil,   nil,   nil,    20,    12,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,    10,    10,
   nil,   nil,   nil,   nil,   nil,     2,     2,   nil,   nil,     6,
     6,     2,   nil,     2,     2,   nil,     2,   nil,   nil,     6,
   nil,    20,     2,    20,    20,   nil,    20,   nil,     6,   nil,
     2,   nil,    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,
    20,   nil,   nil,   nil,     6,     2,   nil,   nil,    20,     2,
   nil,   nil,     2,   nil,   nil,    20,   nil,     6,   nil,    20,
     2,   nil,    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    20 ]

racc_goto_pointer = [
   nil,    18,    -2,   -75,   -49,   nil,     2,   nil,   -80,   -12,
    -9,   nil,   -40,   -23,   nil,   nil,   nil,   -29,   nil,   nil,
     8,   nil,   nil,   -50,   -39,     6,    17,     7 ]

racc_goto_default = [
   nil,   nil,    54,   nil,    89,    82,    20,    90,    41,   nil,
    40,    30,   nil,   nil,    46,    44,    84,   nil,    45,    42,
   nil,    43,    47,   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 65, :_reduce_1,
  1, 66, :_reduce_2,
  3, 66, :_reduce_3,
  1, 67, :_reduce_4,
  1, 67, :_reduce_5,
  1, 68, :_reduce_6,
  3, 69, :_reduce_7,
  1, 69, :_reduce_8,
  1, 69, :_reduce_9,
  1, 69, :_reduce_10,
  1, 69, :_reduce_11,
  2, 69, :_reduce_12,
  2, 69, :_reduce_13,
  3, 69, :_reduce_14,
  3, 69, :_reduce_15,
  3, 69, :_reduce_16,
  3, 69, :_reduce_17,
  3, 69, :_reduce_18,
  3, 69, :_reduce_19,
  3, 69, :_reduce_20,
  3, 69, :_reduce_21,
  3, 69, :_reduce_22,
  3, 69, :_reduce_23,
  3, 69, :_reduce_24,
  3, 69, :_reduce_25,
  3, 69, :_reduce_26,
  3, 69, :_reduce_27,
  3, 69, :_reduce_28,
  3, 70, :_reduce_29,
  3, 70, :_reduce_30,
  1, 72, :_reduce_31,
  2, 72, :_reduce_32,
  3, 71, :_reduce_33,
  3, 71, :_reduce_34,
  1, 74, :_reduce_35,
  1, 74, :_reduce_36,
  1, 74, :_reduce_37,
  1, 74, :_reduce_38,
  1, 74, :_reduce_39,
  1, 74, :_reduce_40,
  1, 74, :_reduce_41,
  1, 74, :_reduce_42,
  1, 74, :_reduce_43,
  1, 75, :_reduce_none,
  3, 75, :_reduce_45,
  3, 73, :_reduce_46,
  4, 73, :_reduce_47,
  3, 73, :_reduce_48,
  4, 73, :_reduce_49,
  1, 76, :_reduce_50,
  1, 76, :_reduce_51,
  3, 76, :_reduce_52,
  3, 76, :_reduce_53,
  2, 77, :_reduce_54,
  2, 78, :_reduce_55,
  1, 79, :_reduce_56,
  1, 79, :_reduce_57,
  1, 79, :_reduce_58,
  1, 80, :_reduce_59,
  3, 80, :_reduce_60,
  2, 81, :_reduce_61,
  2, 81, :_reduce_62,
  5, 82, :_reduce_63,
  4, 82, :_reduce_64,
  0, 84, :_reduce_none,
  5, 84, :_reduce_66,
  7, 84, :_reduce_67,
  5, 84, :_reduce_68,
  9, 84, :_reduce_69,
  11, 84, :_reduce_70,
  5, 84, :_reduce_71,
  1, 85, :_reduce_72,
  1, 85, :_reduce_73,
  1, 85, :_reduce_74,
  1, 85, :_reduce_75,
  1, 85, :_reduce_76,
  1, 85, :_reduce_77,
  1, 85, :_reduce_78,
  1, 85, :_reduce_79,
  2, 83, :_reduce_80,
  3, 83, :_reduce_81,
  2, 86, :_reduce_82,
  1, 87, :_reduce_83,
  3, 87, :_reduce_84,
  8, 88, :_reduce_85,
  7, 88, :_reduce_86,
  10, 88, :_reduce_87,
  9, 88, :_reduce_88,
  2, 89, :_reduce_89,
  3, 89, :_reduce_90,
  4, 90, :_reduce_91,
  3, 90, :_reduce_92,
  2, 64, :_reduce_93,
  1, 64, :_reduce_94 ]

racc_reduce_n = 95

racc_shift_n = 195

racc_token_table = {
  false => 0,
  :error => 1,
  True => 2,
  False => 3,
  And => 4,
  Or => 5,
  Not => 6,
  Igual => 7,
  Distinto => 8,
  MayorIgual => 9,
  MenorIgual => 10,
  Mayor => 11,
  Menor => 12,
  Separador => 13,
  Asignacion => 14,
  BackSlash => 15,
  ParentesisA => 16,
  ParentesisC => 17,
  Flecha => 18,
  Coma => 19,
  Numero => 20,
  Strings => 21,
  Menos => 22,
  Por => 23,
  Entre => 24,
  Porcentaje => 25,
  Mod => 26,
  Div => 27,
  Program => 28,
  Read => 29,
  Write => 30,
  Writeln => 31,
  If => 32,
  Then => 33,
  End => 34,
  While => 35,
  Do => 36,
  Repeat => 37,
  Times => 38,
  Func => 39,
  Begin => 40,
  Return => 41,
  For => 42,
  From => 43,
  To => 44,
  By => 45,
  Is => 46,
  Home => 47,
  OpenEye => 48,
  CloseEye => 49,
  Forward => 50,
  Backward => 51,
  RotateL => 52,
  RotateR => 53,
  SetPosition => 54,
  Arc => 55,
  Boolean => 56,
  Number => 57,
  Variables => 58,
  With => 59,
  :UMENOS => 60,
  Mas => 61,
  Else => 62 }

racc_nt_base = 63

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"true\"",
  "\"false\"",
  "\"and\"",
  "\"or\"",
  "\"not\"",
  "\"==\"",
  "\"\\\\=\"",
  "\">=\"",
  "\"<=\"",
  "\">\"",
  "\"<\"",
  "\";\"",
  "\"=\"",
  "\"\\\\\"",
  "\"(\"",
  "\")\"",
  "\"->\"",
  "\",\"",
  "\"numero\"",
  "\"string\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"mod\"",
  "\"div\"",
  "\"program\"",
  "\"read\"",
  "\"write\"",
  "\"writeln\"",
  "\"if\"",
  "\"then\"",
  "\"end\"",
  "\"while\"",
  "\"do\"",
  "\"repeat\"",
  "\"times\"",
  "\"func\"",
  "\"begin\"",
  "\"return\"",
  "\"for\"",
  "\"from\"",
  "\"to\"",
  "\"by\"",
  "\"is\"",
  "\"home\"",
  "\"openeye\"",
  "\"closeeye\"",
  "\"forward\"",
  "\"backward\"",
  "\"rotatel\"",
  "\"rotater\"",
  "\"setposition\"",
  "\"arc\"",
  "\"boolean\"",
  "\"number\"",
  "\"variable\"",
  "\"with\"",
  "UMENOS",
  "\"+\"",
  "\"else\"",
  "$start",
  "Retina",
  "Variable",
  "Variables",
  "TipoDeDato",
  "String",
  "Operaciones",
  "Declaracion",
  "Asignacion",
  "Declaraciones",
  "LLamadaFunciones",
  "PalabrasReserv",
  "Args",
  "ReturnElems",
  "Return",
  "Entrada",
  "ElemSalida",
  "BloqSalida",
  "Salida",
  "Bloque",
  "Instrucciones",
  "Control",
  "Instruccion",
  "Arg",
  "Argumento",
  "DeclaracionFuncion",
  "DeclaracionFunciones",
  "Program" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina.y', 86)
  def _reduce_1(val, _values, result)
    result = Variables_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 89)
  def _reduce_2(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 90)
  def _reduce_3(val, _values, result)
    result = EnSerie.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 93)
  def _reduce_4(val, _values, result)
    result = Number_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 94)
  def _reduce_5(val, _values, result)
    result = Boolean_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 97)
  def _reduce_6(val, _values, result)
    result = String_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 100)
  def _reduce_7(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 101)
  def _reduce_8(val, _values, result)
    result = Numero_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 102)
  def _reduce_9(val, _values, result)
    result = True_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 103)
  def _reduce_10(val, _values, result)
    result = False_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 104)
  def _reduce_11(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 105)
  def _reduce_12(val, _values, result)
    result = UnaryMenos.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 106)
  def _reduce_13(val, _values, result)
    result = UnaryNot.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 107)
  def _reduce_14(val, _values, result)
    result = OpSuma.new(val[0],val[2],'Suma:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 108)
  def _reduce_15(val, _values, result)
    result = OpResta.new(val[0],val[2],'Resta:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 109)
  def _reduce_16(val, _values, result)
    result = OpDivision.new(val[0],val[2],'Division:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 110)
  def _reduce_17(val, _values, result)
    result = OpMultiplication.new(val[0],val[2],'Multiplicacion:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 111)
  def _reduce_18(val, _values, result)
    result = OpMod.new(val[0],val[2],'Modulo:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 112)
  def _reduce_19(val, _values, result)
    result = OpDiv.new(val[0],val[2],'Division:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 113)
  def _reduce_20(val, _values, result)
    result = OpModulo.new(val[0],val[2],'Modulo:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 114)
  def _reduce_21(val, _values, result)
    result = OpMayor.new(val[0],val[2],'Mayor Estricto:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 115)
  def _reduce_22(val, _values, result)
    result = OpMenor.new(val[0],val[2],'Menor Estricto:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 116)
  def _reduce_23(val, _values, result)
    result = OpMayorIgual.new(val[0],val[2],'Mayor Igual:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 117)
  def _reduce_24(val, _values, result)
    result = OpMenorIgual.new(val[0],val[2],'Menor Igual')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 118)
  def _reduce_25(val, _values, result)
    result = OpAnd.new(val[0],val[2],'And:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 119)
  def _reduce_26(val, _values, result)
    result = OpOr.new(val[0],val[2],'Or:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 120)
  def _reduce_27(val, _values, result)
    result = OpIgual.new(val[0],val[2],'Equivalente:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 121)
  def _reduce_28(val, _values, result)
    result = OpDistinto.new(val[0],val[2],'Distinto:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 124)
  def _reduce_29(val, _values, result)
    result = Declaracion_.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 125)
  def _reduce_30(val, _values, result)
    result = Declaracion_.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 128)
  def _reduce_31(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 129)
  def _reduce_32(val, _values, result)
    result = EnSerie.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 132)
  def _reduce_33(val, _values, result)
    result = OpAsignacion.new(val[0],val[2],'Asignacion:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 133)
  def _reduce_34(val, _values, result)
    result = OpAsignacion.new(val[0],val[2],'Asignacion: ')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 136)
  def _reduce_35(val, _values, result)
    result = Palabra_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 137)
  def _reduce_36(val, _values, result)
    result = Palabra_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 138)
  def _reduce_37(val, _values, result)
    result = Palabra_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 139)
  def _reduce_38(val, _values, result)
    result = Palabra_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 140)
  def _reduce_39(val, _values, result)
    result = Palabra_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 141)
  def _reduce_40(val, _values, result)
    result = Palabra_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 142)
  def _reduce_41(val, _values, result)
    result = Palabra_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 143)
  def _reduce_42(val, _values, result)
    result = Palabra_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 144)
  def _reduce_43(val, _values, result)
    result = Palabra_.new(val[0])
    result
  end
.,.,

# reduce 44 omitted

module_eval(<<'.,.,', 'retina.y', 148)
  def _reduce_45(val, _values, result)
    result = EnSerie.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 151)
  def _reduce_46(val, _values, result)
    result = LlamadaFunciones_.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 152)
  def _reduce_47(val, _values, result)
    result = LlamadaFunciones_.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 153)
  def _reduce_48(val, _values, result)
    result = LlamadaFunciones_.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 154)
  def _reduce_49(val, _values, result)
    result = LlamadaFunciones_.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 157)
  def _reduce_50(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 158)
  def _reduce_51(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 159)
  def _reduce_52(val, _values, result)
    result = EnSerie.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 160)
  def _reduce_53(val, _values, result)
    result = EnSerie.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 163)
  def _reduce_54(val, _values, result)
    result = Return_.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 166)
  def _reduce_55(val, _values, result)
    result = Entrada.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 169)
  def _reduce_56(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 170)
  def _reduce_57(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 171)
  def _reduce_58(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 174)
  def _reduce_59(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 175)
  def _reduce_60(val, _values, result)
    result = EnSerie.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 178)
  def _reduce_61(val, _values, result)
    result = Salida_.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 179)
  def _reduce_62(val, _values, result)
    result = Salida_S.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 182)
  def _reduce_63(val, _values, result)
    result = Bloque.new(val[1],val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 183)
  def _reduce_64(val, _values, result)
    result = Bloque.new(nil,val[2])
    result
  end
.,.,

# reduce 65 omitted

module_eval(<<'.,.,', 'retina.y', 186)
  def _reduce_66(val, _values, result)
    result = Condicional.new(val[1],nil,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 187)
  def _reduce_67(val, _values, result)
    result = Condicional.new(val[1],val[3],val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 188)
  def _reduce_68(val, _values, result)
    result = IteracionIndeterminada.new(val[1],val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 189)
  def _reduce_69(val, _values, result)
    result = IteracionDeterminada.new(val[1],val[3],val[5],nil,val[7])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 190)
  def _reduce_70(val, _values, result)
    result= IteracionDeterminada.new(val[1],val[3],val[5],val[7],val[9])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 191)
  def _reduce_71(val, _values, result)
    result = IteracionDeterminadaRepeat.new(nil,nil,val[1],nil,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 194)
  def _reduce_72(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 195)
  def _reduce_73(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 196)
  def _reduce_74(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 197)
  def _reduce_75(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 198)
  def _reduce_76(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 199)
  def _reduce_77(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 200)
  def _reduce_78(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 201)
  def _reduce_79(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 203)
  def _reduce_80(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 204)
  def _reduce_81(val, _values, result)
    result = EnSerie.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 207)
  def _reduce_82(val, _values, result)
    result = Declaracion_.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 210)
  def _reduce_83(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 211)
  def _reduce_84(val, _values, result)
    result = EnSerie.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 214)
  def _reduce_85(val, _values, result)
    result = Funcion_.new(val[1],val[3],nil,val[6])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 215)
  def _reduce_86(val, _values, result)
    result = Funcion_.new(val[1],nil,nil,val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 216)
  def _reduce_87(val, _values, result)
    result = Funcion_.new(val[1],val[3],val[6],val[8])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 217)
  def _reduce_88(val, _values, result)
    result = Funcion_.new(val[1],nil,val[5],val[7])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 220)
  def _reduce_89(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 221)
  def _reduce_90(val, _values, result)
    result = EnSerie.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 224)
  def _reduce_91(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 225)
  def _reduce_92(val, _values, result)
    result = nil
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 228)
  def _reduce_93(val, _values, result)
    result = Retina_.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 229)
  def _reduce_94(val, _values, result)
    result = Retina_.new(nil,val[0])
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
