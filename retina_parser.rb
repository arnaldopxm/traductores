#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require_relative "retina.rb"
require_relative "retina_ast.rb"

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        "Syntactic error on: #{@token}"
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina.y/module_eval...', 'retina.y', 252)
begin
def on_error(id, token, stack)
    raise SyntacticError::new(token)
end

def next_token
		if !@tokens.empty?
	    token = @tokens[0]
			@tokens = @tokens[1..@tokens.length]
			#puts "#{token.class},#{token}"
			return [token.class,token]
		else
    	return [false,false]
		end
end

def parse(tokens)
    @yydebug = true
    #@lexer = lexer
    @tokens = tokens
		#puts " #{@tokens}..."
    ast = do_parse
		#puts "#{ast} astast"
    return ast
end
end
...end retina.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    16,    17,    16,    17,    18,   163,    18,    62,    64,    63,
    67,    65,    66,     4,    11,   162,    69,     8,    40,     8,
    14,   156,    16,    17,     2,    40,    18,    46,    47,    48,
    42,     8,   181,    43,    39,    45,    69,   161,    58,     8,
    44,     8,    40,    40,    14,    20,    21,    22,    23,    24,
    25,    26,    27,    28,    68,    61,     9,    41,     9,     9,
     8,     9,   155,    62,    64,    63,    67,    65,    66,   182,
    16,    17,    39,     9,    18,    16,    17,    39,     9,    18,
     9,     9,   213,     9,    11,   176,   200,   151,    40,    69,
    14,    62,    64,    63,    67,    65,    66,    46,    47,    48,
    42,   116,     9,    43,    39,    45,   164,   175,   165,   167,
    44,    61,    94,    93,   147,    20,    21,    22,    23,    24,
    25,    26,    27,    28,    16,    17,     9,    41,    18,    16,
    17,     9,   144,    18,    94,    93,    94,    93,    11,    61,
    94,    93,    40,    69,    14,   166,    16,    17,    94,    93,
    18,    46,    47,    48,    42,    94,    93,    43,    39,    45,
    69,    56,    58,   113,    44,   113,    40,   183,    14,    20,
    21,    22,    23,    24,    25,    26,    27,    28,    16,    17,
     9,    41,    18,    16,    17,     9,   157,    18,    89,    88,
   158,    87,    11,   189,   190,    86,    40,    11,    14,    40,
    85,    40,     9,    14,     9,    46,    47,    48,    42,   194,
   195,    43,    39,    45,    84,    83,    58,   159,    44,   201,
    40,    82,    14,    20,    21,    22,    23,    24,    25,    26,
    27,    28,    16,    17,     9,    41,    18,    16,    17,     9,
    81,    18,    39,   160,    52,    50,    11,   211,     4,   212,
    40,    11,    14,     7,   113,    40,   215,    14,     9,    46,
    47,    48,    42,   216,   217,    43,    39,    45,   nil,   nil,
    58,   nil,    44,   nil,    40,   nil,    14,    20,    21,    22,
    23,    24,    25,    26,    27,    28,    16,    17,     9,    41,
    18,    16,    17,     9,   nil,    18,   nil,   nil,   nil,   nil,
    11,   nil,   nil,   nil,    40,    11,    14,   nil,   nil,    40,
   nil,    14,     9,    46,    47,    48,    42,   nil,   nil,    43,
    39,    45,   nil,   nil,    58,   nil,    44,   nil,    40,   nil,
    14,    20,    21,    22,    23,    24,    25,    26,    27,    28,
    16,    17,     9,    41,    18,    16,    17,     9,   nil,    18,
   nil,   nil,   nil,   nil,    11,   nil,   nil,   nil,    40,    11,
    14,   nil,   nil,    40,   nil,    14,     9,    46,    47,    48,
    42,   nil,   nil,    43,    39,    45,   nil,   nil,   nil,   203,
    44,   nil,   nil,   nil,   nil,    20,    21,    22,    23,    24,
    25,    26,    27,    28,    16,    17,     9,    41,    18,    16,
    17,     9,   nil,    18,   nil,    16,    17,   nil,    11,    18,
   nil,   nil,    40,    69,    14,   nil,    16,    17,   nil,    69,
    18,    46,    47,    48,    42,   nil,   nil,    43,    39,    45,
    69,   nil,    58,   nil,    44,   nil,    40,   nil,    14,    20,
    21,    22,    23,    24,    25,    26,    27,    28,    16,    17,
     9,    41,    18,    16,    17,     9,   nil,    18,   nil,   nil,
   nil,     9,    11,   nil,   nil,   nil,    40,    11,    14,   nil,
   nil,    40,     9,    14,     9,    46,    47,    48,    42,   nil,
   184,    43,    39,    45,   nil,   nil,    58,   nil,    44,   nil,
    40,   nil,    14,    20,    21,    22,    23,    24,    25,    26,
    27,    28,    16,    17,     9,    41,    18,    16,    17,     9,
   nil,    18,   nil,   nil,   nil,   nil,    11,   nil,   nil,   nil,
    40,    11,    14,   nil,   nil,    40,   nil,    14,     9,    46,
    47,    48,    42,   nil,   148,    43,    39,    45,   nil,   nil,
   nil,   nil,    44,   nil,   nil,   nil,   nil,    20,    21,    22,
    23,    24,    25,    26,    27,    28,    16,    17,     9,    41,
    18,    16,    17,     9,   nil,    18,   nil,    16,    17,   nil,
    11,    18,   nil,   nil,    40,    69,    14,   nil,    16,    17,
   nil,    69,    18,    46,    47,    48,    42,   nil,    91,    43,
    39,    45,    69,    58,    58,   nil,    44,    40,    40,    14,
    14,    20,    21,    22,    23,    24,    25,    26,    27,    28,
    16,    17,     9,    41,    18,    16,    17,     9,   nil,    18,
   nil,   nil,   nil,     9,    11,   nil,   nil,    58,    40,    69,
    14,    40,   nil,    14,     9,     9,     9,    46,    47,    48,
    42,   nil,   nil,    43,    39,    45,   nil,   nil,   nil,   nil,
    44,   nil,   nil,   nil,   nil,    20,    21,    22,    23,    24,
    25,    26,    27,    28,    16,    17,     9,    41,    18,     9,
   nil,     9,   nil,   nil,   nil,   nil,   nil,   nil,    11,   nil,
   117,   nil,    40,   nil,    14,    62,    64,    63,    67,    65,
    66,    46,    47,    48,    42,   nil,   nil,    43,    39,    45,
   nil,   nil,   nil,   203,    44,   nil,   nil,   nil,   nil,    20,
    21,    22,    23,    24,    25,    26,    27,    28,    16,    17,
     9,    41,    18,    76,    77,   nil,    78,    79,    74,    75,
    72,    73,    11,    61,   113,   nil,    40,   nil,    14,    -2,
    -2,    -2,    -2,    -2,    -2,    46,    47,    48,    42,   nil,
   nil,    43,    39,    45,   nil,    39,   nil,   nil,    44,   nil,
   nil,   nil,   nil,    20,    21,    22,    23,    24,    25,    26,
    27,    28,    16,    17,     9,    41,    18,   -13,   -13,   nil,
   -13,   -13,   -13,   -13,   -13,   -13,    11,    -2,   nil,    57,
    40,   nil,    14,    62,    64,    63,    67,    65,    66,    46,
    47,    48,    42,   nil,   197,    43,    39,    45,   nil,   nil,
   nil,   nil,    44,   nil,   nil,   nil,   nil,    20,    21,    22,
    23,    24,    25,    26,    27,    28,    16,    17,     9,    41,
    18,    76,    77,   nil,    78,    79,    74,    75,    72,    73,
    11,    61,   nil,   nil,    40,   nil,    14,    62,    64,    63,
    67,    65,    66,    46,    47,    48,    42,   nil,   nil,    43,
    39,    45,   nil,   nil,   nil,   nil,    44,   nil,   nil,   nil,
   nil,    20,    21,    22,    23,    24,    25,    26,    27,    28,
    16,    17,     9,    41,    18,   -13,   -13,   nil,   -13,   -13,
   -13,   -13,   -13,   -13,    11,    61,   nil,   nil,    40,   nil,
    14,    62,    64,    63,    67,    65,    66,    46,    47,    48,
    42,   nil,   193,    43,    39,    45,   nil,   nil,   nil,   nil,
    44,   nil,   nil,   nil,   nil,    20,    21,    22,    23,    24,
    25,    26,    27,    28,    16,    17,     9,    41,    18,    76,
    77,   nil,    78,    79,    74,    75,    72,    73,    11,    61,
   nil,   nil,    40,   nil,    14,    62,    64,    63,    67,    65,
    66,    46,    47,    48,    42,   nil,   nil,    43,    39,    45,
   nil,   nil,   nil,   nil,    44,   nil,   nil,   nil,   nil,    20,
    21,    22,    23,    24,    25,    26,    27,    28,    16,    17,
     9,    41,    18,    76,    77,   nil,    78,    79,    74,    75,
    72,    73,    11,    61,   nil,   nil,    40,   nil,    14,    62,
    64,    63,    67,    65,    66,    46,    47,    48,    42,   nil,
   188,    43,    39,    45,   nil,   nil,   nil,   nil,    44,   nil,
   nil,   nil,   nil,    20,    21,    22,    23,    24,    25,    26,
    27,    28,    16,    17,     9,    41,    18,    76,    77,   nil,
    78,    79,    74,    75,    72,    73,    11,    61,   nil,   nil,
    40,   nil,    14,    62,    64,    63,    67,    65,    66,    46,
    47,    48,    42,   nil,   nil,    43,    39,    45,   nil,   nil,
   nil,   nil,    44,   nil,   nil,   nil,   nil,    20,    21,    22,
    23,    24,    25,    26,    27,    28,    16,    17,     9,    41,
    18,    76,    77,   nil,    78,    79,    74,    75,    72,    73,
    11,    61,   nil,   nil,    40,   nil,    14,    62,    64,    63,
    67,    65,    66,    46,    47,    48,    42,   nil,   185,    43,
    39,    45,   nil,   nil,   nil,   nil,    44,   nil,   nil,   nil,
   nil,    20,    21,    22,    23,    24,    25,    26,    27,    28,
    16,    17,     9,    41,    18,   nil,    62,    64,    63,    67,
    65,    66,    16,    17,    11,    61,    18,   nil,    40,   107,
    14,   nil,   nil,   nil,    16,    17,    11,   nil,    18,   nil,
    40,   107,    14,   nil,   nil,   nil,   nil,   nil,    11,   nil,
   nil,   nil,    40,   107,    14,    20,    21,    22,    23,    24,
    25,    26,    27,    28,    61,   nil,     9,    20,    21,    22,
    23,    24,    25,    26,    27,    28,   nil,   nil,     9,    20,
    21,    22,    23,    24,    25,    26,    27,    28,    16,    17,
     9,   nil,    18,   nil,   nil,    16,    17,   nil,   nil,    18,
   nil,   nil,    11,   nil,   nil,   nil,    40,   nil,    14,    11,
   124,   nil,   nil,    40,   nil,    14,    62,    64,    63,    67,
    65,    66,    62,    64,    63,    67,    65,    66,   nil,   nil,
   nil,   nil,   nil,    20,    21,    22,    23,    24,    25,    26,
    27,    28,   nil,   nil,     9,    62,    64,    63,    67,    65,
    66,     9,    76,    77,   nil,    78,    79,    74,    75,    72,
    73,   nil,   nil,   nil,    61,   nil,   nil,   nil,   nil,   nil,
    61,    76,    77,   nil,    78,    79,    74,    75,    72,    73,
   nil,   153,   -13,   -13,   118,   -13,   -13,   -13,   -13,   -13,
   -13,   nil,    56,    61,    57,    76,    77,   nil,    78,    79,
    74,    75,    72,    73,   214,    76,    77,   nil,    78,    79,
    74,    75,    72,    73,    80,    76,    77,   nil,    78,    79,
    74,    75,    72,    73,    76,    77,   nil,    78,    79,    74,
    75,    72,    73,    76,    77,   nil,    78,    79,    74,    75,
    72,    73,    76,    77,   nil,    78,    79,    74,    75,    72,
    73,    76,    77,   nil,    78,    79,    74,    75,    72,    73,
    76,    77,   nil,    78,    79,    74,    75,    72,    73,    76,
    77,   nil,    78,    79,    74,    75,    72,    73 ]

racc_action_check = [
   169,   169,    76,    76,   169,   125,    76,   122,   122,   122,
   122,   122,   122,     0,   169,   116,    76,    44,   169,    46,
   169,   101,    18,    18,     0,   155,    18,   169,   169,   169,
   169,    95,   169,   169,   169,   169,    18,   116,   200,    45,
   169,     8,   200,    45,   200,   169,   169,   169,   169,   169,
   169,   169,   169,   169,    15,   122,   169,   169,    76,    44,
     3,    46,   100,    15,    15,    15,    15,    15,    15,   169,
   153,   153,    97,    95,   153,    42,    42,   192,    18,    42,
   200,    45,   208,     8,   153,   160,   192,    96,   153,    42,
   153,   208,   208,   208,   208,   208,   208,   153,   153,   153,
   153,    52,     3,   153,   153,   153,   126,   160,   126,   146,
   153,    15,   162,   162,    91,   153,   153,   153,   153,   153,
   153,   153,   153,   153,     4,     4,   153,   153,     4,    43,
    43,    42,    81,    43,    41,    41,   176,   176,     4,   208,
    52,    52,     4,    43,     4,   145,    79,    79,   159,   159,
    79,     4,     4,     4,     4,   151,   151,     4,     4,     4,
    79,   149,    14,   135,     4,    51,    14,   170,    14,     4,
     4,     4,     4,     4,     4,     4,     4,     4,   156,   156,
     4,     4,   156,    83,    83,    43,   102,    83,    37,    36,
   110,    35,   156,   178,   180,    34,   156,    83,   156,   183,
    33,    83,    79,    83,    14,   156,   156,   156,   156,   187,
   188,   156,   156,   156,    32,    31,    58,   114,   156,   193,
    58,    30,    58,   156,   156,   156,   156,   156,   156,   156,
   156,   156,    39,    39,   156,   156,    39,    82,    82,    83,
    29,    82,   199,   115,    10,     7,    39,   204,     5,   207,
    39,    82,    39,     1,   127,    82,   210,    82,    58,    39,
    39,    39,    39,   211,   212,    39,    39,    39,   nil,   nil,
    67,   nil,    39,   nil,    67,   nil,    67,    39,    39,    39,
    39,    39,    39,    39,    39,    39,   157,   157,    39,    39,
   157,    11,    11,    82,   nil,    11,   nil,   nil,   nil,   nil,
   157,   nil,   nil,   nil,   157,    11,   157,   nil,   nil,    11,
   nil,    11,    67,   157,   157,   157,   157,   nil,   nil,   157,
   157,   157,   nil,   nil,    62,   nil,   157,   nil,    62,   nil,
    62,   157,   157,   157,   157,   157,   157,   157,   157,   157,
   202,   202,   157,   157,   202,   165,   165,    11,   nil,   165,
   nil,   nil,   nil,   nil,   202,   nil,   nil,   nil,   202,   165,
   202,   nil,   nil,   165,   nil,   165,    62,   202,   202,   202,
   202,   nil,   nil,   202,   202,   202,   nil,   nil,   nil,   202,
   202,   nil,   nil,   nil,   nil,   202,   202,   202,   202,   202,
   202,   202,   202,   202,   161,   161,   202,   202,   161,    72,
    72,   165,   nil,    72,   nil,    78,    78,   nil,   161,    78,
   nil,   nil,   161,    72,   161,   nil,    77,    77,   nil,    78,
    77,   161,   161,   161,   161,   nil,   nil,   161,   161,   161,
    77,   nil,    63,   nil,   161,   nil,    63,   nil,    63,   161,
   161,   161,   161,   161,   161,   161,   161,   161,   171,   171,
   161,   161,   171,   167,   167,    72,   nil,   167,   nil,   nil,
   nil,    78,   171,   nil,   nil,   nil,   171,   167,   171,   nil,
   nil,   167,    77,   167,    63,   171,   171,   171,   171,   nil,
   171,   171,   171,   171,   nil,   nil,    64,   nil,   171,   nil,
    64,   nil,    64,   171,   171,   171,   171,   171,   171,   171,
   171,   171,    92,    92,   171,   171,    92,    56,    56,   167,
   nil,    56,   nil,   nil,   nil,   nil,    92,   nil,   nil,   nil,
    92,    56,    92,   nil,   nil,    56,   nil,    56,    64,    92,
    92,    92,    92,   nil,    92,    92,    92,    92,   nil,   nil,
   nil,   nil,    92,   nil,   nil,   nil,   nil,    92,    92,    92,
    92,    92,    92,    92,    92,    92,    38,    38,    92,    92,
    38,    75,    75,    56,   nil,    75,   nil,    74,    74,   nil,
    38,    74,   nil,   nil,    38,    75,    38,   nil,    73,    73,
   nil,    74,    73,    38,    38,    38,    38,   nil,    38,    38,
    38,    38,    73,    65,    66,   nil,    38,    65,    66,    65,
    66,    38,    38,    38,    38,    38,    38,    38,    38,    38,
    90,    90,    38,    38,    90,    69,    69,    75,   nil,    69,
   nil,   nil,   nil,    74,    90,   nil,   nil,    61,    90,    69,
    90,    61,   nil,    61,    73,    65,    66,    90,    90,    90,
    90,   nil,   nil,    90,    90,    90,   nil,   nil,   nil,   nil,
    90,   nil,   nil,   nil,   nil,    90,    90,    90,    90,    90,
    90,    90,    90,    90,   196,   196,    90,    90,   196,    61,
   nil,    69,   nil,   nil,   nil,   nil,   nil,   nil,   196,   nil,
    53,   nil,   196,   nil,   196,    53,    53,    53,    53,    53,
    53,   196,   196,   196,   196,   nil,   nil,   196,   196,   196,
   nil,   nil,   nil,   196,   196,   nil,   nil,   nil,   nil,   196,
   196,   196,   196,   196,   196,   196,   196,   196,   194,   194,
   196,   196,   194,    99,    99,   nil,    99,    99,    99,    99,
    99,    99,   194,    53,    54,   nil,   194,   nil,   194,    54,
    54,    54,    54,    54,    54,   194,   194,   194,   194,   nil,
   nil,   194,   194,   194,   nil,    99,   nil,   nil,   194,   nil,
   nil,   nil,   nil,   194,   194,   194,   194,   194,   194,   194,
   194,   194,   191,   191,   194,   194,   191,   104,   104,   nil,
   104,   104,   104,   104,   104,   104,   191,    54,   nil,   104,
   191,   nil,   191,   105,   105,   105,   105,   105,   105,   191,
   191,   191,   191,   nil,   191,   191,   191,   191,   nil,   nil,
   nil,   nil,   191,   nil,   nil,   nil,   nil,   191,   191,   191,
   191,   191,   191,   191,   191,   191,   189,   189,   191,   191,
   189,   142,   142,   nil,   142,   142,   142,   142,   142,   142,
   189,   105,   nil,   nil,   189,   nil,   189,   132,   132,   132,
   132,   132,   132,   189,   189,   189,   189,   nil,   nil,   189,
   189,   189,   nil,   nil,   nil,   nil,   189,   nil,   nil,   nil,
   nil,   189,   189,   189,   189,   189,   189,   189,   189,   189,
   186,   186,   189,   189,   186,   119,   119,   nil,   119,   119,
   119,   119,   119,   119,   186,   132,   nil,   nil,   186,   nil,
   186,   134,   134,   134,   134,   134,   134,   186,   186,   186,
   186,   nil,   186,   186,   186,   186,   nil,   nil,   nil,   nil,
   186,   nil,   nil,   nil,   nil,   186,   186,   186,   186,   186,
   186,   186,   186,   186,   182,   182,   186,   186,   182,   141,
   141,   nil,   141,   141,   141,   141,   141,   141,   182,   134,
   nil,   nil,   182,   nil,   182,   206,   206,   206,   206,   206,
   206,   182,   182,   182,   182,   nil,   nil,   182,   182,   182,
   nil,   nil,   nil,   nil,   182,   nil,   nil,   nil,   nil,   182,
   182,   182,   182,   182,   182,   182,   182,   182,   177,   177,
   182,   182,   177,   143,   143,   nil,   143,   143,   143,   143,
   143,   143,   177,   206,   nil,   nil,   177,   nil,   177,   131,
   131,   131,   131,   131,   131,   177,   177,   177,   177,   nil,
   177,   177,   177,   177,   nil,   nil,   nil,   nil,   177,   nil,
   nil,   nil,   nil,   177,   177,   177,   177,   177,   177,   177,
   177,   177,   175,   175,   177,   177,   175,   121,   121,   nil,
   121,   121,   121,   121,   121,   121,   175,   131,   nil,   nil,
   175,   nil,   175,   133,   133,   133,   133,   133,   133,   175,
   175,   175,   175,   nil,   nil,   175,   175,   175,   nil,   nil,
   nil,   nil,   175,   nil,   nil,   nil,   nil,   175,   175,   175,
   175,   175,   175,   175,   175,   175,   172,   172,   175,   175,
   172,   106,   106,   nil,   106,   106,   106,   106,   106,   106,
   172,   133,   nil,   nil,   172,   nil,   172,   130,   130,   130,
   130,   130,   130,   172,   172,   172,   172,   nil,   172,   172,
   172,   172,   nil,   nil,   nil,   nil,   172,   nil,   nil,   nil,
   nil,   172,   172,   172,   172,   172,   172,   172,   172,   172,
   158,   158,   172,   172,   158,   nil,    60,    60,    60,    60,
    60,    60,    47,    47,   158,   130,    47,   nil,   158,   158,
   158,   nil,   nil,   nil,    48,    48,    47,   nil,    48,   nil,
    47,    47,    47,   nil,   nil,   nil,   nil,   nil,    48,   nil,
   nil,   nil,    48,    48,    48,   158,   158,   158,   158,   158,
   158,   158,   158,   158,    60,   nil,   158,    47,    47,    47,
    47,    47,    47,    47,    47,    47,   nil,   nil,    47,    48,
    48,    48,    48,    48,    48,    48,    48,    48,   203,   203,
    48,   nil,   203,   nil,   nil,    57,    57,   nil,   nil,    57,
   nil,   nil,   203,   nil,   nil,   nil,   203,   nil,   203,    57,
    57,   nil,   nil,    57,   nil,    57,   128,   128,   128,   128,
   128,   128,   120,   120,   120,   120,   120,   120,   nil,   nil,
   nil,   nil,   nil,   203,   203,   203,   203,   203,   203,   203,
   203,   203,   nil,   nil,   203,   129,   129,   129,   129,   129,
   129,    57,    98,    98,   nil,    98,    98,    98,    98,    98,
    98,   nil,   nil,   nil,   128,   nil,   nil,   nil,   nil,   nil,
   120,    55,    55,   nil,    55,    55,    55,    55,    55,    55,
   nil,    98,    12,    12,    55,    12,    12,    12,    12,    12,
    12,   nil,    12,   129,    12,   209,   209,   nil,   209,   209,
   209,   209,   209,   209,   209,    19,    19,   nil,    19,    19,
    19,    19,    19,    19,    19,    71,    71,   nil,    71,    71,
    71,    71,    71,    71,   123,   123,   nil,   123,   123,   123,
   123,   123,   123,   140,   140,   nil,   140,   140,   140,   140,
   140,   140,   137,   137,   nil,   137,   137,   137,   137,   137,
   137,   138,   138,   nil,   138,   138,   138,   138,   138,   138,
   139,   139,   nil,   139,   139,   139,   139,   139,   139,   136,
   136,   nil,   136,   136,   136,   136,   136,   136 ]

racc_action_pointer = [
   -15,   253,   nil,    44,   122,   220,   nil,   245,    25,   nil,
   228,   289,  1318,   nil,   146,    41,   nil,   nil,    20,  1341,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   224,
   205,   199,   201,   187,   182,   178,   176,   175,   554,   230,
   nil,    78,    73,   127,     1,    23,     3,  1160,  1172,   nil,
   nil,   148,    84,   663,   717,  1307,   505,  1233,   200,   nil,
  1134,   611,   308,   416,   470,   577,   578,   254,   nil,   613,
   nil,  1351,   397,   576,   565,   559,     0,   414,   403,   144,
   nil,   115,   235,   181,   nil,   nil,   nil,   nil,   nil,   nil,
   608,   101,   500,   nil,   nil,    15,    74,    36,  1288,   719,
    19,   -17,   148,   nil,   773,   771,  1097,   nil,   nil,   nil,
   171,   nil,   nil,   nil,   198,   226,    -3,   nil,   nil,   881,
  1240,  1043,   -15,  1360,   nil,   -12,    89,   237,  1234,  1263,
  1095,   987,   825,  1041,   879,   146,  1405,  1378,  1387,  1396,
  1369,   935,   827,   989,   nil,   128,    90,   nil,   nil,   147,
   nil,    99,   nil,    68,   nil,     5,   176,   284,  1148,    92,
    67,   392,    56,   nil,   nil,   343,   nil,   451,   nil,    -2,
   123,   446,  1094,   nil,   nil,  1040,    80,   986,   153,   nil,
   177,   nil,   932,   179,   nil,   nil,   878,   169,   197,   824,
   nil,   770,    41,   206,   716,   nil,   662,   nil,   nil,   206,
    22,   nil,   338,  1226,   213,   nil,   933,   215,    69,  1331,
   243,   250,   251,   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
   -96,  -100,   -55,  -100,  -100,   -96,   -99,  -100,  -100,   -26,
  -100,  -100,    -2,    -3,  -100,  -100,   -14,   -15,  -100,  -100,
   -35,   -36,   -37,   -38,   -39,   -40,   -41,   -42,   -43,  -100,
  -100,  -100,  -100,  -100,  -100,  -100,  -100,  -100,  -100,  -100,
   -75,  -100,  -100,  -100,  -100,  -100,  -100,  -100,  -100,   -97,
   218,  -100,  -100,  -100,   -13,  -100,  -100,   -50,  -100,    -2,
    -4,  -100,  -100,  -100,  -100,  -100,  -100,  -100,   -58,  -100,
   -13,   -16,  -100,  -100,  -100,  -100,  -100,  -100,  -100,  -100,
   -59,  -100,   -50,   -50,   -56,   -57,   -60,   -61,   -62,   -63,
   -64,  -100,  -100,   -27,   -28,  -100,  -100,  -100,  -100,  -100,
  -100,  -100,  -100,   -85,    -2,   -89,   -88,   -86,   -87,   -90,
   -91,   -93,   -94,   -25,   -65,  -100,  -100,    -1,   -12,    -2,
   -34,   -33,   -52,   -51,   -44,   -53,  -100,    -2,    -5,    -6,
    -7,    -8,    -9,   -10,   -11,   -13,   -17,   -18,   -19,   -20,
   -21,   -22,   -23,   -24,   -45,  -100,  -100,   -95,   -74,   -29,
   -30,   -31,   -76,  -100,   -79,  -100,  -100,  -100,  -100,  -100,
  -100,  -100,  -100,   -48,   -49,   -50,   -46,   -50,   -32,  -100,
  -100,  -100,  -100,   -92,   -66,  -100,  -100,  -100,  -100,   -54,
  -100,   -77,  -100,  -100,   -82,   -83,  -100,  -100,  -100,  -100,
   -47,  -100,  -100,  -100,  -100,   -71,  -100,   -78,   -80,  -100,
  -100,   -70,  -100,  -100,  -100,   -81,   -84,  -100,  -100,  -100,
  -100,  -100,  -100,   -67,   -69,   -68,   -73,   -72 ]

racc_goto_table = [
    10,   101,   109,   109,    97,    51,   111,   112,    54,   115,
   178,    59,   204,     3,   114,    70,   126,     5,   207,   199,
   152,   125,   154,     6,   187,   150,     1,   nil,    49,   nil,
    38,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    70,
    70,   100,   102,   103,   104,   104,   145,   146,    53,   nil,
   nil,    60,   nil,   119,   119,   127,   nil,   nil,    59,    59,
    59,    59,    59,    59,    59,    92,   135,   nil,   nil,    70,
    70,    70,    70,    70,    70,    70,    70,   nil,   nil,   119,
   119,   nil,   nil,   nil,   105,   105,   nil,   nil,   nil,   nil,
   nil,   nil,   149,   120,   122,    53,   nil,   nil,   128,   129,
   130,   131,   132,   133,   134,    55,   nil,   nil,   nil,   nil,
   nil,   170,    71,   109,   168,   198,   174,   173,   nil,   122,
   122,   114,   205,   nil,   nil,   nil,   nil,   nil,   nil,   179,
   nil,   180,   nil,   nil,   nil,   nil,    98,    99,   nil,   192,
   nil,   106,   106,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   121,   123,   nil,   nil,   nil,   104,   nil,   nil,   210,   nil,
   nil,   nil,   119,    55,   119,   nil,   136,   137,   138,   139,
   140,   141,   142,   143,   nil,   nil,   123,   123,   nil,   169,
   nil,   nil,   171,   172,   nil,   nil,   nil,   177,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   105,   nil,    59,   nil,   nil,
   104,   186,   122,   nil,   122,   nil,   nil,   nil,   191,   nil,
   nil,   nil,   nil,   nil,   nil,   196,   nil,   nil,   nil,   nil,
   202,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   206,   nil,   nil,
   208,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   106,   nil,   nil,   nil,   nil,   nil,   nil,   123,
   nil,   123,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   209 ]

racc_goto_check = [
     3,     4,    13,    13,     9,     3,    28,    28,     3,    22,
     6,     3,    23,    16,     7,     3,    15,    24,    23,    25,
    19,    14,    19,    29,     6,     8,     1,   nil,    29,   nil,
    17,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3,
     3,     3,     3,     3,     3,     3,    14,    14,     2,   nil,
   nil,     2,   nil,     3,     3,     3,   nil,   nil,     3,     3,
     3,     3,     3,     3,     3,    17,     3,   nil,   nil,     3,
     3,     3,     3,     3,     3,     3,     3,   nil,   nil,     3,
     3,   nil,   nil,   nil,     2,     2,   nil,   nil,   nil,   nil,
   nil,   nil,     3,     2,     2,     2,   nil,   nil,     2,     2,
     2,     2,     2,     2,     2,     5,   nil,   nil,   nil,   nil,
   nil,     4,     5,    13,     9,    19,    22,    28,   nil,     2,
     2,     7,    19,   nil,   nil,   nil,   nil,   nil,   nil,    14,
   nil,    14,   nil,   nil,   nil,   nil,     5,     5,   nil,     4,
   nil,     5,     5,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     5,     5,   nil,   nil,   nil,     3,   nil,   nil,    13,   nil,
   nil,   nil,     3,     5,     3,   nil,     5,     5,     5,     5,
     5,     5,     5,     5,   nil,   nil,     5,     5,   nil,    17,
   nil,   nil,    17,    17,   nil,   nil,   nil,    17,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     2,   nil,     3,   nil,   nil,
     3,    17,     2,   nil,     2,   nil,   nil,   nil,    17,   nil,
   nil,   nil,   nil,   nil,   nil,    17,   nil,   nil,   nil,   nil,
    17,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,
     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     5,   nil,   nil,   nil,   nil,   nil,   nil,     5,
   nil,     5,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     5 ]

racc_goto_pointer = [
   nil,    26,    37,    -3,   -44,    94,  -152,   -38,   -70,   -37,
   nil,   nil,   nil,   -45,   -36,   -41,    13,    26,   nil,   -77,
   nil,   nil,   -43,  -184,    17,  -173,   nil,   nil,   -41,    23 ]

racc_goto_default = [
   nil,   nil,    15,    12,    13,    19,    95,    96,    33,   nil,
    29,    30,    31,    32,   nil,   nil,   nil,    90,    34,    35,
    36,    37,   nil,   nil,   nil,   nil,   108,   110,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 74, :_reduce_1,
  1, 74, :_reduce_2,
  1, 74, :_reduce_3,
  2, 74, :_reduce_4,
  3, 74, :_reduce_5,
  3, 74, :_reduce_6,
  3, 74, :_reduce_7,
  3, 74, :_reduce_8,
  3, 74, :_reduce_9,
  3, 74, :_reduce_10,
  3, 74, :_reduce_11,
  3, 77, :_reduce_12,
  1, 77, :_reduce_13,
  1, 77, :_reduce_14,
  1, 77, :_reduce_15,
  2, 77, :_reduce_16,
  3, 77, :_reduce_17,
  3, 77, :_reduce_18,
  3, 77, :_reduce_19,
  3, 77, :_reduce_20,
  3, 77, :_reduce_21,
  3, 77, :_reduce_22,
  3, 77, :_reduce_23,
  3, 77, :_reduce_24,
  3, 75, :_reduce_25,
  1, 75, :_reduce_26,
  1, 78, :_reduce_27,
  1, 78, :_reduce_28,
  2, 79, :_reduce_29,
  2, 79, :_reduce_30,
  2, 81, :_reduce_31,
  3, 81, :_reduce_32,
  3, 80, :_reduce_33,
  3, 80, :_reduce_34,
  1, 82, :_reduce_35,
  1, 82, :_reduce_36,
  1, 82, :_reduce_37,
  1, 83, :_reduce_38,
  1, 83, :_reduce_39,
  1, 83, :_reduce_40,
  1, 83, :_reduce_41,
  1, 84, :_reduce_42,
  1, 84, :_reduce_43,
  3, 85, :_reduce_44,
  3, 85, :_reduce_45,
  4, 85, :_reduce_46,
  6, 85, :_reduce_47,
  4, 85, :_reduce_48,
  4, 85, :_reduce_49,
  0, 86, :_reduce_none,
  1, 86, :_reduce_51,
  1, 86, :_reduce_52,
  1, 87, :_reduce_53,
  3, 87, :_reduce_54,
  1, 88, :_reduce_55,
  2, 89, :_reduce_56,
  2, 89, :_reduce_57,
  2, 89, :_reduce_58,
  2, 89, :_reduce_59,
  2, 89, :_reduce_60,
  2, 89, :_reduce_61,
  2, 89, :_reduce_62,
  2, 89, :_reduce_63,
  2, 89, :_reduce_64,
  1, 94, :_reduce_65,
  3, 94, :_reduce_66,
  3, 95, :_reduce_67,
  3, 95, :_reduce_68,
  3, 95, :_reduce_69,
  9, 96, :_reduce_70,
  8, 96, :_reduce_71,
  12, 96, :_reduce_72,
  11, 96, :_reduce_73,
  3, 91, :_reduce_74,
  1, 76, :_reduce_75,
  3, 90, :_reduce_76,
  5, 90, :_reduce_77,
  7, 90, :_reduce_78,
  3, 90, :_reduce_79,
  7, 90, :_reduce_80,
  8, 90, :_reduce_81,
  5, 90, :_reduce_82,
  5, 90, :_reduce_83,
  2, 97, :_reduce_84,
  2, 92, :_reduce_85,
  1, 98, :_reduce_86,
  1, 99, :_reduce_87,
  1, 99, :_reduce_88,
  1, 99, :_reduce_89,
  1, 99, :_reduce_90,
  1, 100, :_reduce_91,
  3, 100, :_reduce_92,
  2, 93, :_reduce_93,
  2, 93, :_reduce_94,
  4, 101, :_reduce_95,
  0, 101, :_reduce_none,
  2, 73, :_reduce_97,
  1, 73, :_reduce_98,
  1, 73, :_reduce_99 ]

racc_reduce_n = 100

racc_shift_n = 218

racc_token_table = {
  false => 0,
  :error => 1,
  True => 2,
  False => 3,
  And => 4,
  Or => 5,
  Not => 6,
  Igual => 7,
  Distinto => 8,
  MayorIgual => 9,
  MenorIgual => 10,
  Mayor => 11,
  Menor => 12,
  Separador => 13,
  Asignacion => 14,
  BackSlash => 15,
  ParentesisA => 16,
  ParentesisC => 17,
  Flecha => 18,
  Coma => 19,
  Numero => 20,
  Strings => 21,
  Menos => 22,
  Por => 23,
  Entre => 24,
  Porcentaje => 25,
  Mod => 26,
  Div => 27,
  Program => 28,
  Read => 29,
  Write => 30,
  Writeln => 31,
  If => 32,
  Then => 33,
  End => 34,
  While => 35,
  Do => 36,
  Repeat => 37,
  Times => 38,
  Func => 39,
  Begin => 40,
  Return => 41,
  For => 42,
  From => 43,
  To => 44,
  By => 45,
  Is => 46,
  Home => 47,
  OpenEye => 48,
  CloseEye => 49,
  Forward => 50,
  Backward => 51,
  RotateL => 52,
  RotateR => 53,
  SetPosition => 54,
  Arc => 55,
  Boolean => 56,
  Number => 57,
  Variables => 58,
  With => 59,
  :UMENOS => 60,
  :UMINUS => 61,
  :Por => 62,
  :Entre => 63,
  :Porcentaje => 64,
  :Div => 65,
  :Mod => 66,
  :Coma => 67,
  :Mas => 68,
  :Menos => 69,
  Mas => 70,
  "else" => 71 }

racc_nt_base = 72

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"true\"",
  "\"false\"",
  "\"and\"",
  "\"or\"",
  "\"not\"",
  "\"==\"",
  "\"\\\\=\"",
  "\">=\"",
  "\"<=\"",
  "\">\"",
  "\"<\"",
  "\";\"",
  "\"=\"",
  "\"\\\\\"",
  "\"(\"",
  "\")\"",
  "\"->\"",
  "\",\"",
  "\"numero\"",
  "\"string\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"mod\"",
  "\"div\"",
  "\"program\"",
  "\"read\"",
  "\"write\"",
  "\"writeln\"",
  "\"if\"",
  "\"then\"",
  "\"end\"",
  "\"while\"",
  "\"do\"",
  "\"repeat\"",
  "\"times\"",
  "\"func\"",
  "\"begin\"",
  "\"return\"",
  "\"for\"",
  "\"from\"",
  "\"to\"",
  "\"by\"",
  "\"is\"",
  "\"home\"",
  "\"openeye\"",
  "\"closeeye\"",
  "\"forward\"",
  "\"backward\"",
  "\"rotatel\"",
  "\"rotater\"",
  "\"setposition\"",
  "\"arc\"",
  "\"boolean\"",
  "\"number\"",
  "\"variable\"",
  "\"with\"",
  "UMENOS",
  "UMINUS",
  "Por",
  "Entre",
  "Porcentaje",
  "Div",
  "Mod",
  "Coma",
  "Mas",
  "Menos",
  "\"+\"",
  "\"else\"",
  "$start",
  "Retina",
  "Aritmetica",
  "Variables",
  "Numero",
  "Logica",
  "TipoDeDato",
  "Declaracion",
  "Asignacion",
  "Declaraciones",
  "FuncionesSinArg",
  "FuncionesUnArg",
  "FuncionesDosArgs",
  "LLamadaFunciones",
  "Arg",
  "Args",
  "PalabraFunc",
  "Instrucciones",
  "BloqueW",
  "BloqueDo",
  "Entrada",
  "Salida",
  "Argumento",
  "Return",
  "DeclaracionFunciones",
  "Incremento",
  "CadenaCarac",
  "ElemSalida",
  "BloqSalida",
  "Program" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina.y', 77)
  def _reduce_1(val, _values, result)
    val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 78)
  def _reduce_2(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 79)
  def _reduce_3(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 80)
  def _reduce_4(val, _values, result)
    result = UnaryMenos.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 81)
  def _reduce_5(val, _values, result)
    result = OpSuma.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 82)
  def _reduce_6(val, _values, result)
    result = OpResta.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 83)
  def _reduce_7(val, _values, result)
    result = OpDivision.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 84)
  def _reduce_8(val, _values, result)
    result = OpMultiplication.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 85)
  def _reduce_9(val, _values, result)
    result = OpMod.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 86)
  def _reduce_10(val, _values, result)
    result = OpDiv.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 87)
  def _reduce_11(val, _values, result)
    result = OpModulo.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 90)
  def _reduce_12(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 91)
  def _reduce_13(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 92)
  def _reduce_14(val, _values, result)
    result = True_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 93)
  def _reduce_15(val, _values, result)
    result = False_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 94)
  def _reduce_16(val, _values, result)
    result = UnaryNot.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 95)
  def _reduce_17(val, _values, result)
    result = OpMayor.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 96)
  def _reduce_18(val, _values, result)
    result = OpMenor.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 97)
  def _reduce_19(val, _values, result)
    result = OpMayorIgual.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 98)
  def _reduce_20(val, _values, result)
    result = OpMenorIgual.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 99)
  def _reduce_21(val, _values, result)
    result = OpAnd.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 100)
  def _reduce_22(val, _values, result)
    result = OpOr.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 101)
  def _reduce_23(val, _values, result)
    result = OpIgual.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 102)
  def _reduce_24(val, _values, result)
    result = OpDistinto.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 105)
  def _reduce_25(val, _values, result)
     result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 106)
  def _reduce_26(val, _values, result)
    result = Identificado.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 110)
  def _reduce_27(val, _values, result)
    result = TipoDato_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 111)
  def _reduce_28(val, _values, result)
    result = TipoDato_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 114)
  def _reduce_29(val, _values, result)
    result = OpDeclaracion.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 115)
  def _reduce_30(val, _values, result)
    result = OpDeclaracion.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 118)
  def _reduce_31(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 119)
  def _reduce_32(val, _values, result)
    result = BinaryOP.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 122)
  def _reduce_33(val, _values, result)
    result = OpAsignacion.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 123)
  def _reduce_34(val, _values, result)
    result = OpAsignacion.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 126)
  def _reduce_35(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 127)
  def _reduce_36(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 128)
  def _reduce_37(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 131)
  def _reduce_38(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 132)
  def _reduce_39(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 133)
  def _reduce_40(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 134)
  def _reduce_41(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 137)
  def _reduce_42(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 138)
  def _reduce_43(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 141)
  def _reduce_44(val, _values, result)
    result = LlamadaFuncion.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 142)
  def _reduce_45(val, _values, result)
    result = Funciones_.new(val[0],nil,nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 143)
  def _reduce_46(val, _values, result)
    result = Funciones_.new(val[0],val[2],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 144)
  def _reduce_47(val, _values, result)
    result = Funciones_.new(val[0],val[2],val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 145)
  def _reduce_48(val, _values, result)
    result = FuncionArg.new(val[0],val[2],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 146)
  def _reduce_49(val, _values, result)
    result = FuncionArg.new(val[0],val[2],nil)
    result
  end
.,.,

# reduce 50 omitted

module_eval(<<'.,.,', 'retina.y', 150)
  def _reduce_51(val, _values, result)
    result = Argumento.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 151)
  def _reduce_52(val, _values, result)
    result = Argumento.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 154)
  def _reduce_53(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 155)
  def _reduce_54(val, _values, result)
    result = BinaryOP.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 158)
  def _reduce_55(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 160)
  def _reduce_56(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 161)
  def _reduce_57(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 162)
  def _reduce_58(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 163)
  def _reduce_59(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 164)
  def _reduce_60(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 165)
  def _reduce_61(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 166)
  def _reduce_62(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 167)
  def _reduce_63(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 168)
  def _reduce_64(val, _values, result)
    result = Instruccion_.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 171)
  def _reduce_65(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 172)
  def _reduce_66(val, _values, result)
    result = BinaryOP.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 175)
  def _reduce_67(val, _values, result)
    result = Return_.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 176)
  def _reduce_68(val, _values, result)
    result = Return_.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 177)
  def _reduce_69(val, _values, result)
    result = Return_.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 180)
  def _reduce_70(val, _values, result)
    result = Funcion_.new(val[0],val[1],val[3],val[6])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 181)
  def _reduce_71(val, _values, result)
    result = Funcion_.new(val[0,val[1],nil,val[5]])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 182)
  def _reduce_72(val, _values, result)
    result = Funcion_R.new(val[0],val[1],val[3],val[6],val[8],val[9])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 183)
  def _reduce_73(val, _values, result)
    result = Funcion_R.new(val[0],val[1],nil,val[5],val[7],val[8])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 186)
  def _reduce_74(val, _values, result)
    result = Bloque.new(val[1],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 189)
  def _reduce_75(val, _values, result)
    result = Num.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 192)
  def _reduce_76(val, _values, result)
    result = Bloque.new(val[1],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 193)
  def _reduce_77(val, _values, result)
    result = Condicional.new(val[1],val[3],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 194)
  def _reduce_78(val, _values, result)
    result = Bloque.new(val[1],val[3],val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 195)
  def _reduce_79(val, _values, result)
    result = Bloque.new(val[1],val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 196)
  def _reduce_80(val, _values, result)
    result = Iteracion.new(val[1],val[3],val[5],val[6])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 197)
  def _reduce_81(val, _values, result)
    result= IteracionBy.new(val[0],val[1],val[3],val[5],val[7])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 198)
  def _reduce_82(val, _values, result)
    result = Iteracion.new(val[1],val[3],nil,nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 199)
  def _reduce_83(val, _values, result)
    result = Iteracion.new(val[1],val[3],nil,nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 202)
  def _reduce_84(val, _values, result)
    result= Incremento.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 205)
  def _reduce_85(val, _values, result)
    result = Entrada.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 208)
  def _reduce_86(val, _values, result)
    result = String_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 211)
  def _reduce_87(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 212)
  def _reduce_88(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 213)
  def _reduce_89(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 214)
  def _reduce_90(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 217)
  def _reduce_91(val, _values, result)
    result = Salida_.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 218)
  def _reduce_92(val, _values, result)
    result = Salida_.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 221)
  def _reduce_93(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 222)
  def _reduce_94(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 225)
  def _reduce_95(val, _values, result)
    result = Programa.new(val[1])
    result
  end
.,.,

# reduce 96 omitted

module_eval(<<'.,.,', 'retina.y', 229)
  def _reduce_97(val, _values, result)
    result = FinalRetina.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 230)
  def _reduce_98(val, _values, result)
    result = FinalRetina.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 231)
  def _reduce_99(val, _values, result)
    result = FinalRetina.new(val[0],nil)
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
