#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require_relative "retina.rb"
require_relative "retina_ast.rb"

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        "Syntactic error on: #{@token}"
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina.y/module_eval...', 'retina.y', 215)
begin
def on_error(id, token, stack)
    #raise SyntacticError::new(token)
end

def next_token
		if !@tokens.empty?
	    token = @tokens[0]
			@tokens = @tokens[1..@tokens.length]
			#puts "#{token.class},#{token}"
			return [token.class,token]
		else
    	return [false,false]
		end
end

def parse(tokens)
    @yydebug = true
    #@lexer = lexer
    @tokens = tokens
		#puts " #{@tokens}..."
    ast = do_parse
		#puts "#{ast} astast"
    return ast
end
end
...end retina.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    30,    31,    30,    31,    32,    24,    32,    30,    31,    30,
    31,    32,    19,    32,    25,     2,    53,    64,    27,    65,
    28,    53,    21,    53,    30,    31,    30,    31,    32,    17,
    32,    30,    31,    30,    31,    32,    24,    32,    53,    22,
    53,    23,    20,    24,    37,    53,    66,    53,    30,    31,
    30,    31,    32,    67,    32,    68,     3,     3,     3,    65,
    91,   nil,    25,     3,    53,     3,    27,   nil,    28,   nil,
    30,    31,    30,    31,    32,   nil,    32,    30,    31,   nil,
     3,    32,     3,   nil,    25,   nil,    53,     3,    27,     3,
    28,    25,   nil,   nil,   nil,    27,   nil,    28,    30,    31,
   nil,   nil,    32,   nil,     3,   nil,     3,    30,    31,    30,
    31,    32,    25,    32,   nil,   nil,    27,   nil,    28,   nil,
   nil,    53,   nil,    25,    34,   nil,     3,    27,     3,    28,
    69,   nil,   nil,     3,   nil,    47,    49,    48,    52,    50,
    51,    24,   nil,   nil,   nil,   nil,    -2,    -2,    -2,    -2,
    -2,    -2,   nil,   nil,     3,    47,    49,    48,    52,    50,
    51,   nil,   nil,     3,   nil,     3,    47,    49,    48,    52,
    50,    51,    47,    49,    48,    52,    50,    51,   nil,   nil,
   nil,   nil,   nil,    46,    47,    49,    48,    52,    50,    51,
   nil,   nil,   nil,   nil,    -2,    47,    49,    48,    52,    50,
    51,   nil,   nil,    46,    47,    49,    48,    52,    50,    51,
   nil,    43,    43,   nil,    46,    27,    27,    28,    28,   nil,
    46,    47,    49,    48,    52,    50,    51,   nil,     2,   nil,
   nil,   nil,    46,    47,    49,    48,    52,    50,    51,   nil,
   nil,   nil,   nil,    46,    47,    49,    48,    52,    50,    51,
   nil,    43,    46,     3,     3,    27,   nil,    28,   nil,     4,
     5,     6,     7,     8,     9,    10,    11,    12,    43,    46,
     3,    43,    27,   nil,    28,    27,    43,    28,   nil,    43,
    27,    46,    28,    27,    43,    28,   nil,   nil,    27,   nil,
    28,    43,    46,     3,   nil,    27,   nil,    28,    60,    61,
   nil,    62,    63,    58,    59,    56,    57,   nil,   nil,   nil,
     3,    70,   nil,     3,   nil,   nil,   nil,   nil,     3,   nil,
   nil,     3,   nil,   nil,    60,    61,     3,    62,    63,    58,
    59,    56,    57,     3,    60,    61,   nil,    62,    63,    58,
    59,    56,    57,    60,    61,   nil,    62,    63,    58,    59,
    56,    57,    60,    61,   nil,    62,    63,    58,    59,    56,
    57,    60,    61,   nil,    62,    63,    58,    59,    56,    57,
    60,    61,   nil,    62,    63,    58,    59,    56,    57,    60,
    61,   nil,    62,    63,    58,    59,    56,    57,    60,    61,
   nil,    62,    63,    58,    59,    56,    57,    60,    61,   nil,
    62,    63,    58,    59,    56,    57,    60,    61,   nil,    62,
    63,    58,    59,    56,    57,   -13,   -13,   nil,   -13,   -13,
   -13,   -13,   -13,   -13 ]

racc_action_check = [
    25,    25,    53,    53,    25,    71,    53,    32,    32,    61,
    61,    32,    13,    61,    25,     2,    53,    35,    25,    35,
    25,    32,    15,    61,    56,    56,    57,    57,    56,     1,
    57,    58,    58,    59,    59,    58,    79,    59,    56,    16,
    57,    17,    14,    18,    20,    58,    36,    59,    68,    68,
    62,    62,    68,    38,    62,    39,    25,     2,    53,    88,
    90,   nil,    68,    32,    62,    61,    68,   nil,    68,   nil,
    65,    65,    60,    60,    65,   nil,    60,    21,    21,   nil,
    56,    21,    57,   nil,    65,   nil,    60,    58,    65,    59,
    65,    21,   nil,   nil,   nil,    21,   nil,    21,    22,    22,
   nil,   nil,    22,   nil,    68,   nil,    62,    63,    63,    19,
    19,    63,    22,    19,   nil,   nil,    22,   nil,    22,   nil,
   nil,    63,   nil,    19,    19,   nil,    65,    19,    60,    19,
    40,   nil,   nil,    21,   nil,    40,    40,    40,    40,    40,
    40,    41,   nil,   nil,   nil,   nil,    41,    41,    41,    41,
    41,    41,   nil,   nil,    22,    29,    29,    29,    29,    29,
    29,   nil,   nil,    63,   nil,    19,    72,    72,    72,    72,
    72,    72,    73,    73,    73,    73,    73,    73,   nil,   nil,
   nil,   nil,   nil,    40,    74,    74,    74,    74,    74,    74,
   nil,   nil,   nil,   nil,    41,    75,    75,    75,    75,    75,
    75,   nil,   nil,    29,    76,    76,    76,    76,    76,    76,
   nil,    46,    47,   nil,    72,    46,    47,    46,    47,   nil,
    73,    77,    77,    77,    77,    77,    77,   nil,     0,   nil,
   nil,   nil,    74,    78,    78,    78,    78,    78,    78,   nil,
   nil,   nil,   nil,    75,    45,    45,    45,    45,    45,    45,
   nil,    48,    76,    46,    47,    48,   nil,    48,   nil,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    49,    77,
     0,    50,    49,   nil,    49,    50,    51,    50,   nil,    52,
    51,    78,    51,    52,    28,    52,   nil,   nil,    28,   nil,
    28,    43,    45,    48,   nil,    43,   nil,    43,    42,    42,
   nil,    42,    42,    42,    42,    42,    42,   nil,   nil,   nil,
    49,    42,   nil,    50,   nil,   nil,   nil,   nil,    51,   nil,
   nil,    52,   nil,   nil,    86,    86,    28,    86,    86,    86,
    86,    86,    86,    43,    85,    85,   nil,    85,    85,    85,
    85,    85,    85,    33,    33,   nil,    33,    33,    33,    33,
    33,    33,    55,    55,   nil,    55,    55,    55,    55,    55,
    55,    87,    87,   nil,    87,    87,    87,    87,    87,    87,
    80,    80,   nil,    80,    80,    80,    80,    80,    80,    84,
    84,   nil,    84,    84,    84,    84,    84,    84,    83,    83,
   nil,    83,    83,    83,    83,    83,    83,    82,    82,   nil,
    82,    82,    82,    82,    82,    82,    81,    81,   nil,    81,
    81,    81,    81,    81,    81,    26,    26,   nil,    26,    26,
    26,    26,    26,    26 ]

racc_action_pointer = [
   212,    29,    -1,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    -4,    26,     6,    23,    41,    26,   107,
    27,    75,    96,   nil,   nil,    -2,   411,   nil,   268,   133,
   nil,   nil,     5,   339,   nil,     0,    29,   nil,    36,    36,
   113,   124,   294,   275,   nil,   222,   195,   196,   235,   252,
   255,   260,   263,     0,   nil,   348,    22,    24,    29,    31,
    70,     7,    48,   105,   nil,    68,   nil,   nil,    46,   nil,
   nil,   -12,   144,   150,   162,   173,   182,   199,   211,    19,
   366,   402,   393,   384,   375,   330,   320,   357,    40,   nil,
    43,   nil ]

racc_action_default = [
   -54,   -54,   -54,   -26,   -34,   -35,   -36,   -37,   -38,   -39,
   -40,   -41,   -42,   -54,   -54,   -54,   -54,   -54,   -54,   -54,
   -54,   -54,   -54,    92,   -25,   -54,    -2,    -3,   -54,   -51,
   -14,   -15,   -54,   -50,   -43,   -54,   -54,   -44,   -54,   -54,
   -54,   -13,   -54,   -54,    -2,    -4,   -54,   -54,   -54,   -54,
   -54,   -54,   -54,   -54,   -13,   -16,   -54,   -54,   -54,   -54,
   -54,   -54,   -54,   -54,   -47,   -54,   -48,   -45,   -54,    -1,
   -12,    -2,    -5,    -6,    -7,    -8,    -9,   -10,   -11,   -13,
   -17,   -18,   -19,   -20,   -21,   -22,   -23,   -24,   -52,   -53,
   -54,   -46 ]

racc_goto_table = [
    13,    14,    18,    16,    15,     1,   nil,   nil,    35,    36,
    38,    39,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    26,
   nil,    26,    26,   nil,   nil,    41,   nil,   nil,    44,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    42,   nil,
   nil,   nil,   nil,    71,   nil,    55,    44,    44,    44,    44,
    44,    44,    44,    79,    88,    89,   nil,    90,   nil,    40,
   nil,   nil,    45,   nil,   nil,    26,    42,   nil,    26,    80,
    81,    82,    83,    84,    85,    86,    87,    40,   nil,   nil,
    72,    73,    74,    75,    76,    77,    78 ]

racc_goto_check = [
     3,     9,     3,    11,    10,     1,   nil,   nil,    12,    13,
    12,    12,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3,
   nil,     3,     3,   nil,   nil,     3,   nil,   nil,     3,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,
   nil,   nil,   nil,     3,   nil,     4,     3,     3,     3,     3,
     3,     3,     3,     3,    12,    13,   nil,    12,   nil,     2,
   nil,   nil,     2,   nil,   nil,     3,     4,   nil,     3,     4,
     4,     4,     4,     4,     4,     4,     4,     2,   nil,   nil,
     2,     2,     2,     2,     2,     2,     2 ]

racc_goto_pointer = [
   nil,     5,    34,     0,    13,   nil,   nil,   nil,   nil,     1,
     4,     3,   -11,   -10 ]

racc_goto_default = [
   nil,   nil,    29,    54,    33,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 73, :_reduce_1,
  1, 73, :_reduce_2,
  1, 73, :_reduce_3,
  2, 73, :_reduce_4,
  3, 73, :_reduce_5,
  3, 73, :_reduce_6,
  3, 73, :_reduce_7,
  3, 73, :_reduce_8,
  3, 73, :_reduce_9,
  3, 73, :_reduce_10,
  3, 73, :_reduce_11,
  3, 75, :_reduce_12,
  1, 75, :_reduce_13,
  1, 75, :_reduce_14,
  1, 75, :_reduce_15,
  2, 75, :_reduce_16,
  3, 75, :_reduce_17,
  3, 75, :_reduce_18,
  3, 75, :_reduce_19,
  3, 75, :_reduce_20,
  3, 75, :_reduce_21,
  3, 75, :_reduce_22,
  3, 75, :_reduce_23,
  3, 75, :_reduce_24,
  3, 74, :_reduce_25,
  1, 74, :_reduce_26,
  1, 76, :_reduce_27,
  1, 76, :_reduce_28,
  2, 77, :_reduce_29,
  2, 77, :_reduce_30,
  3, 78, :_reduce_31,
  3, 78, :_reduce_32,
  1, 79, :_reduce_33,
  1, 80, :_reduce_34,
  1, 80, :_reduce_35,
  1, 80, :_reduce_36,
  1, 81, :_reduce_37,
  1, 81, :_reduce_38,
  1, 81, :_reduce_39,
  1, 81, :_reduce_40,
  1, 82, :_reduce_41,
  1, 82, :_reduce_42,
  3, 72, :_reduce_43,
  3, 72, :_reduce_44,
  4, 72, :_reduce_45,
  6, 72, :_reduce_46,
  4, 72, :_reduce_47,
  4, 72, :_reduce_48,
  1, 83, :_reduce_49,
  1, 83, :_reduce_50,
  1, 83, :_reduce_51,
  1, 84, :_reduce_52,
  3, 84, :_reduce_53 ]

racc_reduce_n = 54

racc_shift_n = 92

racc_token_table = {
  false => 0,
  :error => 1,
  True => 2,
  False => 3,
  And => 4,
  Or => 5,
  Not => 6,
  Igual => 7,
  Distinto => 8,
  MayorIgual => 9,
  MenorIgual => 10,
  Mayor => 11,
  Menor => 12,
  Separador => 13,
  Asignacion => 14,
  BackSlash => 15,
  ParentesisA => 16,
  ParentesisC => 17,
  Flecha => 18,
  Coma => 19,
  Numero => 20,
  "Strings" => 21,
  Menos => 22,
  Por => 23,
  Entre => 24,
  Porcentaje => 25,
  Mod => 26,
  Div => 27,
  Program => 28,
  Read => 29,
  Write => 30,
  Writeln => 31,
  If => 32,
  Then => 33,
  End => 34,
  While => 35,
  Do => 36,
  Repeat => 37,
  Times => 38,
  Func => 39,
  Begin => 40,
  Return => 41,
  For => 42,
  From => 43,
  To => 44,
  By => 45,
  Is => 46,
  Home => 47,
  OpenEye => 48,
  CloseEye => 49,
  Forward => 50,
  Backward => 51,
  RotateL => 52,
  RotateR => 53,
  SetPosition => 54,
  Arc => 55,
  Boolean => 56,
  Number => 57,
  Variables => 58,
  :UMENOS => 59,
  :UMINUS => 60,
  :Por => 61,
  :Entre => 62,
  :Porcentaje => 63,
  :Div => 64,
  :Mod => 65,
  :Coma => 66,
  :Mas => 67,
  :Menos => 68,
  Strings => 69,
  Mas => 70 }

racc_nt_base = 71

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"true\"",
  "\"false\"",
  "\"and\"",
  "\"or\"",
  "\"not\"",
  "\"==\"",
  "\"\\\\=\"",
  "\">=\"",
  "\"<=\"",
  "\">\"",
  "\"<\"",
  "\";\"",
  "\"=\"",
  "\"\\\\\"",
  "\"(\"",
  "\")\"",
  "\"->\"",
  "\",\"",
  "\"numero\"",
  "\"Strings\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"mod\"",
  "\"div\"",
  "\"program\"",
  "\"read\"",
  "\"write\"",
  "\"writeln\"",
  "\"if\"",
  "\"then\"",
  "\"end\"",
  "\"while\"",
  "\"do\"",
  "\"repeat\"",
  "\"times\"",
  "\"func\"",
  "\"begin\"",
  "\"return\"",
  "\"for\"",
  "\"from\"",
  "\"to\"",
  "\"by\"",
  "\"is\"",
  "\"home\"",
  "\"openeye\"",
  "\"closeeye\"",
  "\"forward\"",
  "\"backward\"",
  "\"rotatel\"",
  "\"rotater\"",
  "\"setposition\"",
  "\"arc\"",
  "\"boolean\"",
  "\"number\"",
  "\"variable\"",
  "UMENOS",
  "UMINUS",
  "Por",
  "Entre",
  "Porcentaje",
  "Div",
  "Mod",
  "Coma",
  "Mas",
  "Menos",
  "\"strings\"",
  "\"+\"",
  "$start",
  "LLamadaFunciones",
  "Aritmetica",
  "Variables",
  "Logica",
  "TipoDeDato",
  "Declaracion",
  "Asignacion",
  "PalabraFunc",
  "FuncionesSinArg",
  "FuncionesUnArg",
  "FuncionesDosArgs",
  "Arg",
  "Args" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina.y', 117)
  def _reduce_1(val, _values, result)
    val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 118)
  def _reduce_2(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 119)
  def _reduce_3(val, _values, result)
    result = Num.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 120)
  def _reduce_4(val, _values, result)
    result = UnaryMenos.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 121)
  def _reduce_5(val, _values, result)
    result = OpSuma.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 122)
  def _reduce_6(val, _values, result)
    result = OpResta.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 123)
  def _reduce_7(val, _values, result)
    result = OpDivision.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 124)
  def _reduce_8(val, _values, result)
    result = OpMultiplication.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 125)
  def _reduce_9(val, _values, result)
    result = OpMod.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 126)
  def _reduce_10(val, _values, result)
    result = OpDiv.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 127)
  def _reduce_11(val, _values, result)
    result = OpModulo.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 130)
  def _reduce_12(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 131)
  def _reduce_13(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 132)
  def _reduce_14(val, _values, result)
    result = True_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 133)
  def _reduce_15(val, _values, result)
    result = False_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 134)
  def _reduce_16(val, _values, result)
    result = UnaryNot.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 135)
  def _reduce_17(val, _values, result)
    result = OpMayor.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 136)
  def _reduce_18(val, _values, result)
    result = OpMenor.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 137)
  def _reduce_19(val, _values, result)
    result = OpMayorIgual.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 138)
  def _reduce_20(val, _values, result)
    result = OpMenorIgual.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 139)
  def _reduce_21(val, _values, result)
    result = OpAnd.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 140)
  def _reduce_22(val, _values, result)
    result = OpOr.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 141)
  def _reduce_23(val, _values, result)
    result = OpIgual.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 142)
  def _reduce_24(val, _values, result)
    result = OpDistinto.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 145)
  def _reduce_25(val, _values, result)
     result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 146)
  def _reduce_26(val, _values, result)
    result = Identificado.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 149)
  def _reduce_27(val, _values, result)
    result = TipoDato_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 150)
  def _reduce_28(val, _values, result)
    result = TipoDato_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 153)
  def _reduce_29(val, _values, result)
    result = OpDeclaracion.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 154)
  def _reduce_30(val, _values, result)
    result = OpDeclaracion.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 157)
  def _reduce_31(val, _values, result)
    result = OpAsignacion.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 158)
  def _reduce_32(val, _values, result)
    result = OpAsignacion.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 161)
  def _reduce_33(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 163)
  def _reduce_34(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 164)
  def _reduce_35(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 165)
  def _reduce_36(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 168)
  def _reduce_37(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 169)
  def _reduce_38(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 170)
  def _reduce_39(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 171)
  def _reduce_40(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 174)
  def _reduce_41(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 175)
  def _reduce_42(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 178)
  def _reduce_43(val, _values, result)
    result = LlamadaFuncion.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 179)
  def _reduce_44(val, _values, result)
    result = LlamadaFuncion.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 180)
  def _reduce_45(val, _values, result)
    result = FuncionArg.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 181)
  def _reduce_46(val, _values, result)
    result = ThreeOP.new(val[0],val[2],val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 182)
  def _reduce_47(val, _values, result)
    result = FuncionArg.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 183)
  def _reduce_48(val, _values, result)
    result = FuncionArg.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 186)
  def _reduce_49(val, _values, result)
    result = Argumento.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 187)
  def _reduce_50(val, _values, result)
    result = Argumento.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 188)
  def _reduce_51(val, _values, result)
    result = Argumento.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 190)
  def _reduce_52(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 191)
  def _reduce_53(val, _values, result)
    result = BinaryOP.new(val[0],val[2])
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
