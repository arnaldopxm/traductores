#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require_relative "retina.rb"
require_relative "retina_ast.rb"

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        "Syntactic error on: #{@token}"
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina.y/module_eval...', 'retina.y', 178)
begin
def on_error(id, token, stack)
    #raise SyntacticError::new(token)
end

def next_token
		if !@tokens.empty?
	    token = @tokens[0]
			@tokens = @tokens[1..@tokens.length]
			#puts "#{token.class},#{token}"
			return [token.class,token]
		else
    	return [false,false]
		end
end

def parse(tokens)
    @yydebug = true
    #@lexer = lexer
    @tokens = tokens
		#puts " #{@tokens}..."
    ast = do_parse
		#puts "#{ast} astast"
    return ast
end
end
...end retina.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     4,     5,     4,     5,     6,    30,     6,     4,     5,     4,
     5,     6,    20,     6,     2,   nil,     2,   nil,     4,     5,
   nil,     2,     6,     2,     4,     5,     4,     5,     6,   nil,
     6,   nil,     2,     4,     5,     4,     5,     6,     2,     6,
     2,     4,     5,   nil,   nil,     6,   nil,     2,   nil,     2,
     4,     5,   nil,   nil,     6,     2,     7,   nil,     7,   nil,
   nil,   nil,   nil,     7,     2,     7,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,   nil,
     7,   nil,     7,   nil,   nil,   nil,   nil,   nil,   nil,     7,
   nil,     7,   nil,   nil,   nil,    13,    14,     7,    15,    16,
    11,    12,     9,    10,   nil,     8,     7,   nil,    29,    13,
    14,   nil,    15,    16,    11,    12,     9,    10,    13,    14,
   nil,    15,    16,    11,    12,     9,    10,    13,    14,   nil,
    15,    16,    11,    12,     9,    10,    13,    14,   nil,    15,
    16,    11,    12,     9,    10,    13,    14,   nil,    15,    16,
    11,    12,     9,    10,    13,    14,   nil,    15,    16,    11,
    12,     9,    10,    13,    14,   nil,    15,    16,    11,    12,
     9,    10,    13,    14,   nil,    15,    16,    11,    12,     9,
    10,    13,    14,   nil,    15,    16,    11,    12,     9,    10,
    13,    14,   nil,    15,    16,    11,    12,     9,    10 ]

racc_action_check = [
     0,     0,    14,    14,     0,    18,    14,     2,     2,     6,
     6,     2,     8,     6,     0,   nil,    14,   nil,    15,    15,
   nil,     2,    15,     6,     9,     9,    10,    10,     9,   nil,
    10,   nil,    15,    11,    11,    12,    12,    11,     9,    12,
    10,    13,    13,   nil,   nil,    13,   nil,    11,   nil,    12,
    16,    16,   nil,   nil,    16,    13,     0,   nil,    14,   nil,
   nil,   nil,   nil,     2,    16,     6,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    15,   nil,   nil,   nil,   nil,   nil,
     9,   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,    11,
   nil,    12,   nil,   nil,   nil,    17,    17,    13,    17,    17,
    17,    17,    17,    17,   nil,     1,    16,   nil,    17,     1,
     1,   nil,     1,     1,     1,     1,     1,     1,    21,    21,
   nil,    21,    21,    21,    21,    21,    21,    27,    27,   nil,
    27,    27,    27,    27,    27,    27,    19,    19,   nil,    19,
    19,    19,    19,    19,    19,    28,    28,   nil,    28,    28,
    28,    28,    28,    28,    26,    26,   nil,    26,    26,    26,
    26,    26,    26,    23,    23,   nil,    23,    23,    23,    23,
    23,    23,    24,    24,   nil,    24,    24,    24,    24,    24,
    24,    25,    25,   nil,    25,    25,    25,    25,    25,    25,
    22,    22,   nil,    22,    22,    22,    22,    22,    22 ]

racc_action_pointer = [
    -2,   105,     5,   nil,   nil,   nil,     7,   nil,    12,    22,
    24,    31,    33,    39,     0,    16,    48,    91,   -12,   132,
   nil,   114,   186,   159,   168,   177,   150,   123,   141,   nil,
   nil ]

racc_action_default = [
   -29,   -29,   -29,   -13,   -14,   -15,   -29,   -26,   -29,   -29,
   -29,   -29,   -29,   -29,   -29,   -29,   -29,   -29,   -13,   -16,
    31,   -17,   -18,   -19,   -20,   -21,   -22,   -23,   -24,   -12,
   -25 ]

racc_goto_table = [
     1,    18,    17,   nil,   nil,   nil,    19,   nil,   nil,    21,
    22,    23,    24,    25,    26,    27,    28 ]

racc_goto_check = [
     1,     3,     1,   nil,   nil,   nil,     1,   nil,   nil,     1,
     1,     1,     1,     1,     1,     1,     1 ]

racc_goto_pointer = [
   nil,     0,   nil,    -1,   nil ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 73, :_reduce_1,
  1, 73, :_reduce_2,
  1, 73, :_reduce_3,
  2, 73, :_reduce_4,
  3, 73, :_reduce_5,
  3, 73, :_reduce_6,
  3, 73, :_reduce_7,
  3, 73, :_reduce_8,
  3, 73, :_reduce_9,
  3, 73, :_reduce_10,
  3, 73, :_reduce_11,
  3, 72, :_reduce_12,
  1, 72, :_reduce_13,
  1, 72, :_reduce_14,
  1, 72, :_reduce_15,
  2, 72, :_reduce_16,
  3, 72, :_reduce_17,
  3, 72, :_reduce_18,
  3, 72, :_reduce_19,
  3, 72, :_reduce_20,
  3, 72, :_reduce_21,
  3, 72, :_reduce_22,
  3, 72, :_reduce_23,
  3, 72, :_reduce_24,
  3, 74, :_reduce_25,
  1, 74, :_reduce_26,
  1, 75, :_reduce_27,
  1, 75, :_reduce_28 ]

racc_reduce_n = 29

racc_shift_n = 31

racc_token_table = {
  false => 0,
  :error => 1,
  True => 2,
  False => 3,
  And => 4,
  Or => 5,
  Not => 6,
  Igual => 7,
  Distinto => 8,
  MayorIgual => 9,
  MenorIgual => 10,
  Mayor => 11,
  Menor => 12,
  Separador => 13,
  Asignacion => 14,
  BackSlash => 15,
  ParentesisA => 16,
  ParentesisC => 17,
  Flecha => 18,
  Coma => 19,
  Numero => 20,
  "Strings" => 21,
  Menos => 22,
  Por => 23,
  Entre => 24,
  Porcentaje => 25,
  Mod => 26,
  Div => 27,
  Program => 28,
  Read => 29,
  Write => 30,
  Writeln => 31,
  If => 32,
  Then => 33,
  End => 34,
  While => 35,
  Do => 36,
  Repeat => 37,
  Times => 38,
  Func => 39,
  Begin => 40,
  Return => 41,
  For => 42,
  From => 43,
  To => 44,
  By => 45,
  Is => 46,
  Home => 47,
  "openeye" => 48,
  CloseEye => 49,
  Forward => 50,
  Backward => 51,
  RotateL => 52,
  RotateR => 53,
  SetPosition => 54,
  Arc => 55,
  Boolean => 56,
  Number => 57,
  Variables => 58,
  :UMENOS => 59,
  :UMINUS => 60,
  :Por => 61,
  :Entre => 62,
  :Porcentaje => 63,
  :Div => 64,
  :Mod => 65,
  :Mas => 66,
  :Menos => 67,
  Strings => 68,
  Mas => 69,
  OpenEye => 70 }

racc_nt_base = 71

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"true\"",
  "\"false\"",
  "\"and\"",
  "\"or\"",
  "\"not\"",
  "\"==\"",
  "\"\\\\=\"",
  "\">=\"",
  "\"<=\"",
  "\">\"",
  "\"<\"",
  "\";\"",
  "\"=\"",
  "\"\\\\\"",
  "\"(\"",
  "\")\"",
  "\"->\"",
  "\",\"",
  "\"numero\"",
  "\"Strings\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"mod\"",
  "\"div\"",
  "\"program\"",
  "\"read\"",
  "\"write\"",
  "\"writeln\"",
  "\"if\"",
  "\"then\"",
  "\"end\"",
  "\"while\"",
  "\"do\"",
  "\"repeat\"",
  "\"times\"",
  "\"func\"",
  "\"begin\"",
  "\"return\"",
  "\"for\"",
  "\"from\"",
  "\"to\"",
  "\"by\"",
  "\"is\"",
  "\"home\"",
  "\"openeye\"",
  "\"closeeye\"",
  "\"forward\"",
  "\"backward\"",
  "\"rotatel\"",
  "\"rotater\"",
  "\"setposition\"",
  "\"arc\"",
  "\"boolean\"",
  "\"number\"",
  "\"variable\"",
  "UMENOS",
  "UMINUS",
  "Por",
  "Entre",
  "Porcentaje",
  "Div",
  "Mod",
  "Mas",
  "Menos",
  "\"strings\"",
  "\"+\"",
  "\"openeeye\"",
  "$start",
  "Logica",
  "Aritmetica",
  "Variables",
  "TipoDeDato" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina.y', 120)
  def _reduce_1(val, _values, result)
    val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 121)
  def _reduce_2(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 122)
  def _reduce_3(val, _values, result)
    result = Num.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 123)
  def _reduce_4(val, _values, result)
    result = UnaryMenos.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 124)
  def _reduce_5(val, _values, result)
    result = OpSuma.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 125)
  def _reduce_6(val, _values, result)
    result = OpResta.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 126)
  def _reduce_7(val, _values, result)
    result = OpDivision.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 127)
  def _reduce_8(val, _values, result)
    result = OpMultiplication.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 128)
  def _reduce_9(val, _values, result)
    result = OpMod.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 129)
  def _reduce_10(val, _values, result)
    result = OpDiv.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 130)
  def _reduce_11(val, _values, result)
    result = OpModulo.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 133)
  def _reduce_12(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 134)
  def _reduce_13(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 135)
  def _reduce_14(val, _values, result)
    result = True_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 136)
  def _reduce_15(val, _values, result)
    result = False_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 137)
  def _reduce_16(val, _values, result)
    result = UnaryNot.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 138)
  def _reduce_17(val, _values, result)
    result = OpMayor.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 139)
  def _reduce_18(val, _values, result)
    result = OpMenor.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 140)
  def _reduce_19(val, _values, result)
    result = OpMayorIgual.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 141)
  def _reduce_20(val, _values, result)
    result = OpMenorIgual.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 142)
  def _reduce_21(val, _values, result)
    result = OpAnd.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 143)
  def _reduce_22(val, _values, result)
    result = OpOr.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 144)
  def _reduce_23(val, _values, result)
    result = OpIgual.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 145)
  def _reduce_24(val, _values, result)
    result = OpDistinto.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 148)
  def _reduce_25(val, _values, result)
     result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 149)
  def _reduce_26(val, _values, result)
    result = Identificado.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 152)
  def _reduce_27(val, _values, result)
    result = TipoDato_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 153)
  def _reduce_28(val, _values, result)
    result = TipoDato_.new(val[0])
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
