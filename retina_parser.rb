#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require_relative "retina.rb"
require_relative "retina_ast.rb"

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        "Syntactic error on: #{@token}"
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina.y/module_eval...', 'retina.y', 249)
begin
def on_error(id, token, stack)
    raise SyntacticError::new(token)
end

def next_token
		if !@tokens.empty?
	    token = @tokens[0]
			@tokens = @tokens[1..@tokens.length]
			#puts "#{token.class},#{token}"
			return [token.class,token]
		else
    	return [false,false]
		end
end

def parse(tokens)
    @yydebug = true
    #@lexer = lexer
    @tokens = tokens
		#puts " #{@tokens}..."
    ast = do_parse
		#puts "#{ast} astast"
    return ast
end
end
...end retina.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    16,    17,    16,    17,    18,   164,    18,   165,    94,    93,
     4,   -75,    86,    58,    11,   177,    69,    40,    40,    14,
    14,     2,    16,    17,    94,    93,    18,    46,    47,    48,
    42,     8,   183,    43,    39,    45,    69,   176,    58,   163,
    44,     8,    40,     8,    14,    20,    21,    22,    23,    24,
    25,    26,    27,    28,   211,     9,     9,    41,     9,     8,
     8,   162,   168,    62,    64,    63,    67,    65,    66,   184,
    16,    17,    56,     9,    18,    16,    17,   113,     9,    18,
     9,   -75,    68,     9,    11,     9,    94,    93,    40,    69,
    14,    62,    64,    63,    67,    65,    66,    46,    47,    48,
    42,     9,     9,    43,    39,    45,   116,    39,    58,    40,
    44,    61,    40,   152,    14,    20,    21,    22,    23,    24,
    25,    26,    27,    28,    16,    17,     9,    41,    18,    16,
    17,     9,   148,    18,   145,   -75,    94,    93,    11,    61,
    94,    93,    40,    11,    14,    94,    93,    40,   160,    14,
     9,    46,    47,    48,    42,   161,   113,    43,    39,    45,
   159,    58,   113,   158,    44,    40,    89,    14,   185,    20,
    21,    22,    23,    24,    25,    26,    27,    28,    16,    17,
     9,    41,    18,    16,    17,     9,    88,    18,    87,   -75,
   167,   157,    11,    85,   191,   165,    40,    69,    14,   192,
    16,    17,    84,     9,    18,    46,    47,    48,    42,    40,
    83,    43,    39,    45,    69,    58,   196,   197,    44,    40,
    82,    14,    81,    20,    21,    22,    23,    24,    25,    26,
    27,    28,    16,    17,     9,    41,    18,    16,    17,     9,
    39,    18,   201,   -75,   166,    52,    11,    50,     4,   209,
    40,    69,    14,   210,    16,    17,     9,     9,    18,    46,
    47,    48,    42,     7,   156,    43,    39,    45,    69,   213,
    58,   203,    44,   214,    40,   215,    14,    20,    21,    22,
    23,    24,    25,    26,    27,    28,    16,    17,     9,    41,
    18,    16,    17,     9,   nil,    18,   nil,   nil,   nil,   nil,
    11,   nil,   nil,   nil,    40,    11,    14,   nil,   nil,    40,
     9,    14,     9,    46,    47,    48,    42,   nil,   nil,    43,
    39,    45,   nil,    58,   nil,   nil,    44,    40,   nil,    14,
   nil,    20,    21,    22,    23,    24,    25,    26,    27,    28,
    16,    17,     9,    41,    18,    16,    17,     9,   nil,    18,
   nil,   -75,   nil,   nil,    11,   nil,   nil,   nil,    40,    69,
    14,   nil,    16,    17,   nil,     9,    18,    46,    47,    48,
    42,   nil,   nil,    43,    39,    45,    69,   nil,    58,   203,
    44,   nil,    40,   nil,    14,    20,    21,    22,    23,    24,
    25,    26,    27,    28,    16,    17,     9,    41,    18,    16,
    17,     9,   nil,    18,   nil,   -75,   nil,   nil,    11,   nil,
   nil,   nil,    40,    11,    14,   nil,   nil,    40,     9,    14,
     9,    46,    47,    48,    42,   nil,   nil,    43,    39,    45,
   nil,   nil,     8,   nil,    44,   nil,    40,   nil,   nil,    20,
    21,    22,    23,    24,    25,    26,    27,    28,    16,    17,
     9,    41,    18,    16,    17,     9,   nil,    18,   nil,   -75,
   nil,   nil,    11,   nil,   nil,   nil,    40,    11,    14,   nil,
   nil,    40,   nil,    14,     9,    46,    47,    48,    42,   nil,
   nil,    43,    39,    45,   nil,   nil,    58,   nil,    44,   nil,
    40,   nil,    14,    20,    21,    22,    23,    24,    25,    26,
    27,    28,    16,    17,     9,    41,    18,    16,    17,     9,
   nil,    18,   nil,   -75,   nil,   nil,    11,   nil,   nil,   nil,
    40,    11,    14,   nil,   nil,    40,   nil,    14,     9,    46,
    47,    48,    42,   nil,   nil,    43,    39,    45,   nil,   nil,
   nil,   nil,    44,   nil,   nil,   nil,   nil,    20,    21,    22,
    23,    24,    25,    26,    27,    28,    16,    17,     9,    41,
    18,    16,    17,     9,   nil,    18,   nil,   -75,   nil,   nil,
    11,   nil,   nil,   nil,    40,    69,    14,   nil,    16,    17,
   nil,   nil,    18,    46,    47,    48,    42,   nil,    91,    43,
    39,    45,    69,   nil,   nil,   nil,    44,   nil,   nil,   nil,
   nil,    20,    21,    22,    23,    24,    25,    26,    27,    28,
    16,    17,     9,    41,    18,    16,    17,     9,   nil,    18,
   nil,   -75,   nil,   nil,    11,   nil,   nil,   nil,    40,    11,
    14,   nil,   nil,    40,     9,    14,   nil,    46,    47,    48,
    42,   nil,   nil,    43,    39,    45,   nil,   nil,   nil,   nil,
    44,   nil,   nil,   nil,   nil,    20,    21,    22,    23,    24,
    25,    26,    27,    28,    16,    17,     9,    41,    18,    16,
    17,     9,   nil,    18,   nil,   -75,   nil,   nil,    11,   nil,
   113,   nil,    40,    69,    14,    -2,    -2,    -2,    -2,    -2,
    -2,    46,    47,    48,    42,   nil,   199,    43,    39,    45,
   nil,   nil,   nil,   nil,    44,   nil,   nil,   nil,   nil,    20,
    21,    22,    23,    24,    25,    26,    27,    28,    16,    17,
     9,    41,    18,   nil,   nil,     9,   nil,   nil,   nil,   -75,
   nil,   nil,    11,    -2,   117,   nil,    40,   nil,    14,    62,
    64,    63,    67,    65,    66,    46,    47,    48,    42,   nil,
   nil,    43,    39,    45,   nil,   nil,   nil,   nil,    44,   nil,
   nil,   nil,   nil,    20,    21,    22,    23,    24,    25,    26,
    27,    28,    16,    17,     9,    41,    18,   nil,   nil,   nil,
   nil,   nil,   nil,   -75,   nil,   nil,    11,    61,   nil,   nil,
    40,   nil,    14,    62,    64,    63,    67,    65,    66,    46,
    47,    48,    42,   nil,   195,    43,    39,    45,   nil,   nil,
   nil,   nil,    44,   nil,   nil,   nil,   nil,    20,    21,    22,
    23,    24,    25,    26,    27,    28,    16,    17,     9,    41,
    18,   nil,   nil,   nil,   nil,   nil,   nil,   -75,   nil,   nil,
    11,    61,   nil,   nil,    40,   nil,    14,    62,    64,    63,
    67,    65,    66,    46,    47,    48,    42,   nil,   nil,    43,
    39,    45,   nil,   nil,   nil,   nil,    44,   nil,   nil,   nil,
   nil,    20,    21,    22,    23,    24,    25,    26,    27,    28,
    16,    17,     9,    41,    18,   nil,   nil,   nil,   nil,   nil,
   nil,   -75,   nil,   nil,    11,    61,   nil,   nil,    40,   nil,
    14,    62,    64,    63,    67,    65,    66,    46,    47,    48,
    42,   nil,   190,    43,    39,    45,   nil,   nil,   nil,   nil,
    44,   nil,   nil,   nil,   nil,    20,    21,    22,    23,    24,
    25,    26,    27,    28,    16,    17,     9,    41,    18,   nil,
   nil,   nil,   nil,   nil,   nil,   -75,   nil,   nil,    11,    61,
   nil,   nil,    40,   nil,    14,    62,    64,    63,    67,    65,
    66,    46,    47,    48,    42,   nil,   nil,    43,    39,    45,
   nil,   nil,   nil,   nil,    44,   nil,   nil,   nil,   nil,    20,
    21,    22,    23,    24,    25,    26,    27,    28,    16,    17,
     9,    41,    18,   nil,   nil,   nil,   nil,   nil,   nil,   -75,
   nil,   nil,    11,    61,   nil,   nil,    40,   nil,    14,    62,
    64,    63,    67,    65,    66,    46,    47,    48,    42,   nil,
   187,    43,    39,    45,   nil,   nil,   nil,   nil,    44,   nil,
   nil,   nil,   nil,    20,    21,    22,    23,    24,    25,    26,
    27,    28,    16,    17,     9,    41,    18,   nil,   nil,   nil,
   nil,   nil,   nil,   -75,   nil,   nil,    11,    61,   nil,   nil,
    40,   nil,    14,    62,    64,    63,    67,    65,    66,    46,
    47,    48,    42,   nil,   186,    43,    39,    45,   nil,   nil,
   nil,   nil,    44,   nil,   nil,   nil,   nil,    20,    21,    22,
    23,    24,    25,    26,    27,    28,    16,    17,     9,    41,
    18,   nil,   nil,   nil,   nil,   nil,   nil,   -75,   nil,   nil,
    11,    61,   nil,   nil,    40,   nil,    14,    62,    64,    63,
    67,    65,    66,    46,    47,    48,    42,   nil,   149,    43,
    39,    45,   nil,   nil,   nil,   nil,    44,   nil,   nil,   nil,
   nil,    20,    21,    22,    23,    24,    25,    26,    27,    28,
    16,    17,     9,    41,    18,   nil,    62,    64,    63,    67,
    65,    66,    16,    17,    11,    61,    18,   nil,    40,   107,
    14,   nil,   nil,   nil,    16,    17,    11,   nil,    18,   nil,
    40,   107,    14,   nil,   nil,   nil,   nil,   nil,    11,   nil,
   nil,   nil,    40,   107,    14,    20,    21,    22,    23,    24,
    25,    26,    27,    28,    61,   nil,     9,    20,    21,    22,
    23,    24,    25,    26,    27,    28,   nil,   nil,     9,    20,
    21,    22,    23,    24,    25,    26,    27,    28,    16,    17,
     9,   nil,    18,    62,    64,    63,    67,    65,    66,   nil,
    16,    17,    11,   125,    18,   nil,    40,   nil,    14,   nil,
   nil,   nil,   nil,   nil,    11,   nil,   nil,   nil,    40,   nil,
    14,    62,    64,    63,    67,    65,    66,    62,    64,    63,
    67,    65,    66,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    61,   nil,   nil,     9,    20,    21,    22,    23,    24,
    25,    26,    27,    28,    76,    77,     9,    78,    79,    74,
    75,    72,    73,   nil,   nil,   nil,   nil,   nil,   nil,    61,
   nil,   nil,   nil,    76,    77,    61,    78,    79,    74,    75,
    72,    73,   nil,   nil,    76,    77,    39,    78,    79,    74,
    75,    72,    73,   nil,   nil,   nil,   nil,   118,   nil,   nil,
   -13,   -13,   154,   -13,   -13,   -13,   -13,   -13,   -13,   nil,
    56,   nil,    57,   -13,   -13,   nil,   -13,   -13,   -13,   -13,
   -13,   -13,   nil,    76,    77,    57,    78,    79,    74,    75,
    72,    73,   212,    76,    77,   nil,    78,    79,    74,    75,
    72,    73,    80,    76,    77,   nil,    78,    79,    74,    75,
    72,    73,   -13,   -13,   nil,   -13,   -13,   -13,   -13,   -13,
   -13,   -13,   -13,   nil,   -13,   -13,   -13,   -13,   -13,   -13,
    76,    77,   nil,    78,    79,    74,    75,    72,    73,    76,
    77,   nil,    78,    79,    74,    75,    72,    73,    76,    77,
   nil,    78,    79,    74,    75,    72,    73,    76,    77,   nil,
    78,    79,    74,    75,    72,    73,    76,    77,   nil,    78,
    79,    74,    75,    72,    73,    76,    77,   nil,    78,    79,
    74,    75,    72,    73,    76,    77,   nil,    78,    79,    74,
    75,    72,    73,    76,    77,   nil,    78,    79,    74,    75,
    72,    73,    76,    77,   nil,    78,    79,    74,    75,    72,
    73,    76,    77,   nil,    78,    79,    74,    75,    72,    73,
    76,    77,   nil,    78,    79,    74,    75,    72,    73 ]

racc_action_check = [
   170,   170,    18,    18,   170,   126,    18,   126,    41,    41,
     0,   170,    34,    58,   170,   161,    18,    58,   170,    58,
   170,     0,    74,    74,   177,   177,    74,   170,   170,   170,
   170,    95,   170,   170,   170,   170,    74,   161,    67,   116,
   170,     8,    67,    44,    67,   170,   170,   170,   170,   170,
   170,   170,   170,   170,   206,    58,   170,   170,    18,     3,
    46,   116,   147,   206,   206,   206,   206,   206,   206,   170,
   157,   157,   150,    95,   157,    42,    42,   136,    74,    42,
    67,   157,    15,     8,   157,    44,   152,   152,   157,    42,
   157,    15,    15,    15,    15,    15,    15,   157,   157,   157,
   157,     3,    46,   157,   157,   157,    52,    97,    66,   156,
   157,   206,    66,    96,    66,   157,   157,   157,   157,   157,
   157,   157,   157,   157,     4,     4,   157,   157,     4,   168,
   168,    42,    91,   168,    81,     4,   163,   163,     4,    15,
   160,   160,     4,   168,     4,    52,    52,   168,   114,   168,
    66,     4,     4,     4,     4,   115,   128,     4,     4,     4,
   110,    65,    51,   102,     4,    65,    37,    65,   171,     4,
     4,     4,     4,     4,     4,     4,     4,     4,   154,   154,
     4,     4,   154,    43,    43,   168,    36,    43,    35,   154,
   146,   101,   154,    33,   179,   180,   154,    43,   154,   182,
    73,    73,    32,    65,    73,   154,   154,   154,   154,   185,
    31,   154,   154,   154,    73,    64,   189,   190,   154,    64,
    30,    64,    29,   154,   154,   154,   154,   154,   154,   154,
   154,   154,   202,   202,   154,   154,   202,    75,    75,    43,
   194,    75,   195,   202,   127,    10,   202,     7,     5,   204,
   202,    75,   202,   205,    72,    72,    73,    64,    72,   202,
   202,   202,   202,     1,   100,   202,   202,   202,    72,   208,
    63,   202,   202,   209,    63,   210,    63,   202,   202,   202,
   202,   202,   202,   202,   202,   202,    90,    90,   202,   202,
    90,   165,   165,    75,   nil,   165,   nil,   nil,   nil,   nil,
    90,   nil,   nil,   nil,    90,   165,    90,   nil,   nil,   165,
    72,   165,    63,    90,    90,    90,    90,   nil,   nil,    90,
    90,    90,   nil,    62,   nil,   nil,    90,    62,   nil,    62,
   nil,    90,    90,    90,    90,    90,    90,    90,    90,    90,
   198,   198,    90,    90,   198,    69,    69,   165,   nil,    69,
   nil,   198,   nil,   nil,   198,   nil,   nil,   nil,   198,    69,
   198,   nil,    79,    79,   nil,    62,    79,   198,   198,   198,
   198,   nil,   nil,   198,   198,   198,    79,   nil,    61,   198,
   198,   nil,    61,   nil,    61,   198,   198,   198,   198,   198,
   198,   198,   198,   198,   162,   162,   198,   198,   162,    82,
    82,    69,   nil,    82,   nil,   162,   nil,   nil,   162,   nil,
   nil,   nil,   162,    82,   162,   nil,   nil,    82,    79,    82,
    61,   162,   162,   162,   162,   nil,   nil,   162,   162,   162,
   nil,   nil,    45,   nil,   162,   nil,    45,   nil,   nil,   162,
   162,   162,   162,   162,   162,   162,   162,   162,   158,   158,
   162,   162,   158,    11,    11,    82,   nil,    11,   nil,   158,
   nil,   nil,   158,   nil,   nil,   nil,   158,    11,   158,   nil,
   nil,    11,   nil,    11,    45,   158,   158,   158,   158,   nil,
   nil,   158,   158,   158,   nil,   nil,    14,   nil,   158,   nil,
    14,   nil,    14,   158,   158,   158,   158,   158,   158,   158,
   158,   158,    39,    39,   158,   158,    39,    56,    56,    11,
   nil,    56,   nil,    39,   nil,   nil,    39,   nil,   nil,   nil,
    39,    56,    39,   nil,   nil,    56,   nil,    56,    14,    39,
    39,    39,    39,   nil,   nil,    39,    39,    39,   nil,   nil,
   nil,   nil,    39,   nil,   nil,   nil,   nil,    39,    39,    39,
    39,    39,    39,    39,    39,    39,    38,    38,    39,    39,
    38,    76,    76,    56,   nil,    76,   nil,    38,   nil,   nil,
    38,   nil,   nil,   nil,    38,    76,    38,   nil,    77,    77,
   nil,   nil,    77,    38,    38,    38,    38,   nil,    38,    38,
    38,    38,    77,   nil,   nil,   nil,    38,   nil,   nil,   nil,
   nil,    38,    38,    38,    38,    38,    38,    38,    38,    38,
   196,   196,    38,    38,   196,    83,    83,    76,   nil,    83,
   nil,   196,   nil,   nil,   196,   nil,   nil,   nil,   196,    83,
   196,   nil,   nil,    83,    77,    83,   nil,   196,   196,   196,
   196,   nil,   nil,   196,   196,   196,   nil,   nil,   nil,   nil,
   196,   nil,   nil,   nil,   nil,   196,   196,   196,   196,   196,
   196,   196,   196,   196,   193,   193,   196,   196,   193,    78,
    78,    83,   nil,    78,   nil,   193,   nil,   nil,   193,   nil,
    54,   nil,   193,    78,   193,    54,    54,    54,    54,    54,
    54,   193,   193,   193,   193,   nil,   193,   193,   193,   193,
   nil,   nil,   nil,   nil,   193,   nil,   nil,   nil,   nil,   193,
   193,   193,   193,   193,   193,   193,   193,   193,   191,   191,
   193,   193,   191,   nil,   nil,    78,   nil,   nil,   nil,   191,
   nil,   nil,   191,    54,    53,   nil,   191,   nil,   191,    53,
    53,    53,    53,    53,    53,   191,   191,   191,   191,   nil,
   nil,   191,   191,   191,   nil,   nil,   nil,   nil,   191,   nil,
   nil,   nil,   nil,   191,   191,   191,   191,   191,   191,   191,
   191,   191,   188,   188,   191,   191,   188,   nil,   nil,   nil,
   nil,   nil,   nil,   188,   nil,   nil,   188,    53,   nil,   nil,
   188,   nil,   188,   132,   132,   132,   132,   132,   132,   188,
   188,   188,   188,   nil,   188,   188,   188,   188,   nil,   nil,
   nil,   nil,   188,   nil,   nil,   nil,   nil,   188,   188,   188,
   188,   188,   188,   188,   188,   188,   184,   184,   188,   188,
   184,   nil,   nil,   nil,   nil,   nil,   nil,   184,   nil,   nil,
   184,   132,   nil,   nil,   184,   nil,   184,   135,   135,   135,
   135,   135,   135,   184,   184,   184,   184,   nil,   nil,   184,
   184,   184,   nil,   nil,   nil,   nil,   184,   nil,   nil,   nil,
   nil,   184,   184,   184,   184,   184,   184,   184,   184,   184,
   178,   178,   184,   184,   178,   nil,   nil,   nil,   nil,   nil,
   nil,   178,   nil,   nil,   178,   135,   nil,   nil,   178,   nil,
   178,   134,   134,   134,   134,   134,   134,   178,   178,   178,
   178,   nil,   178,   178,   178,   178,   nil,   nil,   nil,   nil,
   178,   nil,   nil,   nil,   nil,   178,   178,   178,   178,   178,
   178,   178,   178,   178,   176,   176,   178,   178,   176,   nil,
   nil,   nil,   nil,   nil,   nil,   176,   nil,   nil,   176,   134,
   nil,   nil,   176,   nil,   176,   133,   133,   133,   133,   133,
   133,   176,   176,   176,   176,   nil,   nil,   176,   176,   176,
   nil,   nil,   nil,   nil,   176,   nil,   nil,   nil,   nil,   176,
   176,   176,   176,   176,   176,   176,   176,   176,   173,   173,
   176,   176,   173,   nil,   nil,   nil,   nil,   nil,   nil,   173,
   nil,   nil,   173,   133,   nil,   nil,   173,   nil,   173,    60,
    60,    60,    60,    60,    60,   173,   173,   173,   173,   nil,
   173,   173,   173,   173,   nil,   nil,   nil,   nil,   173,   nil,
   nil,   nil,   nil,   173,   173,   173,   173,   173,   173,   173,
   173,   173,   172,   172,   173,   173,   172,   nil,   nil,   nil,
   nil,   nil,   nil,   172,   nil,   nil,   172,    60,   nil,   nil,
   172,   nil,   172,   131,   131,   131,   131,   131,   131,   172,
   172,   172,   172,   nil,   172,   172,   172,   172,   nil,   nil,
   nil,   nil,   172,   nil,   nil,   nil,   nil,   172,   172,   172,
   172,   172,   172,   172,   172,   172,    92,    92,   172,   172,
    92,   nil,   nil,   nil,   nil,   nil,   nil,    92,   nil,   nil,
    92,   131,   nil,   nil,    92,   nil,    92,   130,   130,   130,
   130,   130,   130,    92,    92,    92,    92,   nil,    92,    92,
    92,    92,   nil,   nil,   nil,   nil,    92,   nil,   nil,   nil,
   nil,    92,    92,    92,    92,    92,    92,    92,    92,    92,
    47,    47,    92,    92,    47,   nil,   129,   129,   129,   129,
   129,   129,    48,    48,    47,   130,    48,   nil,    47,    47,
    47,   nil,   nil,   nil,   159,   159,    48,   nil,   159,   nil,
    48,    48,    48,   nil,   nil,   nil,   nil,   nil,   159,   nil,
   nil,   nil,   159,   159,   159,    47,    47,    47,    47,    47,
    47,    47,    47,    47,   129,   nil,    47,    48,    48,    48,
    48,    48,    48,    48,    48,    48,   nil,   nil,    48,   159,
   159,   159,   159,   159,   159,   159,   159,   159,    57,    57,
   159,   nil,    57,   123,   123,   123,   123,   123,   123,   nil,
   203,   203,    57,    57,   203,   nil,    57,   nil,    57,   nil,
   nil,   nil,   nil,   nil,   203,   nil,   nil,   nil,   203,   nil,
   203,   105,   105,   105,   105,   105,   105,   120,   120,   120,
   120,   120,   120,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   123,   nil,   nil,    57,   203,   203,   203,   203,   203,
   203,   203,   203,   203,    99,    99,   203,    99,    99,    99,
    99,    99,    99,   nil,   nil,   nil,   nil,   nil,   nil,   105,
   nil,   nil,   nil,    98,    98,   120,    98,    98,    98,    98,
    98,    98,   nil,   nil,    55,    55,    99,    55,    55,    55,
    55,    55,    55,   nil,   nil,   nil,   nil,    55,   nil,   nil,
    12,    12,    98,    12,    12,    12,    12,    12,    12,   nil,
    12,   nil,    12,   104,   104,   nil,   104,   104,   104,   104,
   104,   104,   nil,   207,   207,   104,   207,   207,   207,   207,
   207,   207,   207,    19,    19,   nil,    19,    19,    19,    19,
    19,    19,    19,   144,   144,   nil,   144,   144,   144,   144,
   144,   144,   122,   122,   nil,   122,   122,   122,   122,   122,
   122,   119,   119,   nil,   119,   119,   119,   119,   119,   119,
   121,   121,   nil,   121,   121,   121,   121,   121,   121,    71,
    71,   nil,    71,    71,    71,    71,    71,    71,   124,   124,
   nil,   124,   124,   124,   124,   124,   124,   143,   143,   nil,
   143,   143,   143,   143,   143,   143,   106,   106,   nil,   106,
   106,   106,   106,   106,   106,   142,   142,   nil,   142,   142,
   142,   142,   142,   142,   141,   141,   nil,   141,   141,   141,
   141,   141,   141,   140,   140,   nil,   140,   140,   140,   140,
   140,   140,   138,   138,   nil,   138,   138,   138,   138,   138,
   138,   137,   137,   nil,   137,   137,   137,   137,   137,   137,
   139,   139,   nil,   139,   139,   139,   139,   139,   139 ]

racc_action_pointer = [
   -18,   263,   nil,    43,   122,   220,   nil,   247,    25,   nil,
   229,   451,  1336,   nil,   470,    69,   nil,   nil,     0,  1369,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   206,
   204,   194,   189,   180,    -1,   175,   173,   153,   554,   500,
   nil,   -48,    73,   181,    27,   416,    44,  1148,  1160,   nil,
   nil,   145,    89,   717,   663,  1320,   505,  1226,    -3,   nil,
   987,   362,   307,   254,   199,   145,    92,    22,   nil,   343,
   nil,  1415,   252,   198,    20,   235,   559,   576,   667,   360,
   nil,   117,   397,   613,   nil,   nil,   nil,   nil,   nil,   nil,
   284,   119,  1094,   nil,   nil,    15,   100,    71,  1309,  1290,
   221,   153,   125,   nil,  1349,  1239,  1442,   nil,   nil,   nil,
   141,   nil,   nil,   nil,   129,   138,    21,   nil,   nil,  1397,
  1245,  1406,  1388,  1211,  1424,   nil,   -12,   227,   139,  1134,
  1095,  1041,   771,   933,   879,   825,    60,  1487,  1478,  1496,
  1469,  1460,  1451,  1433,  1379,   nil,   173,    43,   nil,   nil,
    58,   nil,    30,   nil,   176,   nil,    89,    68,   446,  1172,
    84,    -3,   392,    80,   nil,   289,   nil,   nil,   127,   nil,
    -2,   124,  1040,   986,   nil,   nil,   932,   -32,   878,   154,
   176,   nil,   182,   nil,   824,   189,   nil,   nil,   770,   176,
   204,   716,   nil,   662,   204,   229,   608,   nil,   338,   nil,
   nil,   nil,   230,  1238,   215,   219,    41,  1359,   256,   260,
   262,   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
   -98,  -102,   -55,  -102,   -77,   -98,  -101,  -102,  -102,   -26,
  -102,   -77,    -2,    -3,   -77,  -102,   -14,   -15,  -102,  -102,
   -35,   -36,   -37,   -38,   -39,   -40,   -41,   -42,   -43,  -102,
  -102,  -102,  -102,  -102,  -102,  -102,  -102,  -102,   -77,   -77,
   -76,  -102,  -102,  -102,  -102,   -77,  -102,   -77,   -77,   -99,
   216,  -102,  -102,  -102,   -13,  -102,   -77,   -77,   -77,    -2,
    -4,   -77,   -77,   -77,   -77,   -77,   -77,   -77,   -58,  -102,
   -13,   -16,  -102,  -102,  -102,  -102,  -102,  -102,  -102,  -102,
   -59,  -102,   -77,   -77,   -56,   -57,   -60,   -61,   -62,   -63,
   -64,  -102,   -77,   -27,   -28,  -102,  -102,   -75,  -102,   -75,
  -102,  -102,  -102,   -85,    -2,   -91,   -90,   -87,   -89,   -92,
   -93,   -95,   -96,   -25,   -65,  -102,  -102,    -1,   -12,    -2,
   -34,   -33,    -2,   -52,   -51,   -44,  -102,  -102,    -2,    -5,
    -6,    -7,    -8,    -9,   -10,   -11,   -13,   -17,   -18,   -19,
   -20,   -21,   -22,   -23,   -24,   -45,  -102,  -102,   -97,   -74,
   -29,   -30,   -31,   -78,   -77,   -81,   -77,   -77,   -77,   -77,
  -102,  -102,   -77,  -102,   -48,   -77,   -49,   -46,   -77,   -32,
   -77,  -102,   -77,   -77,   -94,   -66,   -77,  -102,   -77,  -102,
   -53,   -54,  -102,   -79,   -77,   -77,   -83,   -84,   -77,  -102,
  -102,   -77,   -47,   -77,   -75,  -102,   -77,   -71,   -77,   -80,
   -82,   -70,   -77,   -77,  -102,  -102,  -102,  -102,  -102,  -102,
  -102,   -67,   -69,   -68,   -73,   -72 ]

racc_goto_table = [
    10,    38,   109,   109,    97,    51,     5,     3,    54,   179,
   101,    59,   111,   112,   115,    70,   151,   127,   204,     6,
   114,   126,   205,   189,    49,     1,   153,   nil,   155,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    92,   nil,   nil,    70,
    70,   100,   102,   103,   104,   104,   146,   147,    53,   nil,
   nil,    60,   nil,   119,   122,   128,   nil,   nil,    59,    59,
    59,    59,    59,    59,    59,   nil,   136,   nil,   nil,    70,
    70,    70,    70,    70,    70,    70,    70,   nil,   nil,   122,
   122,    55,   nil,   nil,   105,   105,   nil,   nil,    71,   nil,
   nil,   nil,   150,   120,   123,    53,   nil,   nil,   129,   130,
   131,   132,   133,   134,   135,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    98,    99,   109,   169,   nil,   106,   106,   123,
   123,   171,   175,   200,   174,   181,   121,   124,   114,   180,
   nil,   nil,   182,   nil,   nil,   nil,   nil,   nil,   nil,    55,
   nil,   nil,   137,   138,   139,   140,   141,   142,   143,   144,
   194,   170,   124,   124,   172,   173,   104,   nil,   208,   178,
   nil,   nil,   122,   nil,   nil,   122,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   188,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   193,   nil,   nil,   nil,   nil,   nil,   nil,   198,   nil,
   nil,   nil,   nil,   202,   nil,   nil,   105,   nil,   nil,   nil,
   104,   nil,   123,   nil,   nil,   123,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   106,
   nil,   nil,   nil,   nil,   nil,   124,   nil,   nil,   124,   nil,
   206,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   207 ]

racc_goto_check = [
     3,    17,    13,    13,     9,     3,    24,    16,     3,     6,
     4,     3,    27,    27,    22,     3,     8,    15,    23,    28,
     7,    14,    23,     6,    28,     1,    19,   nil,    19,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    17,   nil,   nil,     3,
     3,     3,     3,     3,     3,     3,    14,    14,     2,   nil,
   nil,     2,   nil,     3,     3,     3,   nil,   nil,     3,     3,
     3,     3,     3,     3,     3,   nil,     3,   nil,   nil,     3,
     3,     3,     3,     3,     3,     3,     3,   nil,   nil,     3,
     3,     5,   nil,   nil,     2,     2,   nil,   nil,     5,   nil,
   nil,   nil,     3,     2,     2,     2,   nil,   nil,     2,     2,
     2,     2,     2,     2,     2,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     5,     5,    13,     9,   nil,     5,     5,     2,
     2,     4,    22,    19,    27,    15,     5,     5,     7,    14,
   nil,   nil,    14,   nil,   nil,   nil,   nil,   nil,   nil,     5,
   nil,   nil,     5,     5,     5,     5,     5,     5,     5,     5,
     4,    17,     5,     5,    17,    17,     3,   nil,    13,    17,
   nil,   nil,     3,   nil,   nil,     3,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    17,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    17,   nil,   nil,   nil,   nil,   nil,   nil,    17,   nil,
   nil,   nil,   nil,    17,   nil,   nil,     2,   nil,   nil,   nil,
     3,   nil,     2,   nil,   nil,     2,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     5,
   nil,   nil,   nil,   nil,   nil,     5,   nil,   nil,     5,   nil,
     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     5 ]

racc_goto_pointer = [
   nil,    25,    37,    -3,   -35,    70,  -154,   -32,   -79,   -37,
   nil,   nil,   nil,   -45,   -36,   -40,     7,    -3,   nil,   -71,
   nil,   nil,   -38,  -180,     6,   nil,   nil,   -35,    19 ]

racc_goto_default = [
   nil,   nil,    15,    12,    13,    19,    95,    96,    33,   nil,
    29,    30,    31,    32,   nil,   nil,   nil,    90,    34,    35,
    36,    37,   nil,   nil,   nil,   108,   110,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 74, :_reduce_1,
  1, 74, :_reduce_2,
  1, 74, :_reduce_3,
  2, 74, :_reduce_4,
  3, 74, :_reduce_5,
  3, 74, :_reduce_6,
  3, 74, :_reduce_7,
  3, 74, :_reduce_8,
  3, 74, :_reduce_9,
  3, 74, :_reduce_10,
  3, 74, :_reduce_11,
  3, 77, :_reduce_12,
  1, 77, :_reduce_13,
  1, 77, :_reduce_14,
  1, 77, :_reduce_15,
  2, 77, :_reduce_16,
  3, 77, :_reduce_17,
  3, 77, :_reduce_18,
  3, 77, :_reduce_19,
  3, 77, :_reduce_20,
  3, 77, :_reduce_21,
  3, 77, :_reduce_22,
  3, 77, :_reduce_23,
  3, 77, :_reduce_24,
  3, 75, :_reduce_25,
  1, 75, :_reduce_26,
  1, 78, :_reduce_27,
  1, 78, :_reduce_28,
  2, 79, :_reduce_29,
  2, 79, :_reduce_30,
  2, 81, :_reduce_31,
  3, 81, :_reduce_32,
  3, 80, :_reduce_33,
  3, 80, :_reduce_34,
  1, 82, :_reduce_35,
  1, 82, :_reduce_36,
  1, 82, :_reduce_37,
  1, 83, :_reduce_38,
  1, 83, :_reduce_39,
  1, 83, :_reduce_40,
  1, 83, :_reduce_41,
  1, 84, :_reduce_42,
  1, 84, :_reduce_43,
  3, 85, :_reduce_44,
  3, 85, :_reduce_45,
  4, 85, :_reduce_46,
  6, 85, :_reduce_47,
  4, 85, :_reduce_48,
  4, 85, :_reduce_49,
  1, 86, :_reduce_50,
  1, 86, :_reduce_51,
  1, 86, :_reduce_52,
  1, 87, :_reduce_53,
  3, 87, :_reduce_54,
  1, 88, :_reduce_55,
  2, 89, :_reduce_56,
  2, 89, :_reduce_57,
  2, 89, :_reduce_58,
  2, 89, :_reduce_59,
  2, 89, :_reduce_60,
  2, 89, :_reduce_61,
  2, 89, :_reduce_62,
  2, 89, :_reduce_63,
  2, 89, :_reduce_64,
  1, 94, :_reduce_65,
  3, 94, :_reduce_66,
  3, 95, :_reduce_67,
  3, 95, :_reduce_68,
  3, 95, :_reduce_69,
  9, 96, :_reduce_70,
  8, 96, :_reduce_71,
  12, 96, :_reduce_72,
  11, 96, :_reduce_73,
  3, 91, :_reduce_74,
  0, 91, :_reduce_none,
  1, 76, :_reduce_76,
  0, 76, :_reduce_none,
  3, 90, :_reduce_78,
  5, 90, :_reduce_79,
  7, 90, :_reduce_80,
  3, 90, :_reduce_81,
  7, 90, :_reduce_82,
  5, 90, :_reduce_83,
  5, 90, :_reduce_84,
  2, 92, :_reduce_85,
  0, 92, :_reduce_none,
  1, 97, :_reduce_87,
  0, 97, :_reduce_none,
  1, 98, :_reduce_89,
  1, 98, :_reduce_90,
  1, 98, :_reduce_91,
  1, 98, :_reduce_92,
  1, 99, :_reduce_93,
  3, 99, :_reduce_94,
  2, 93, :_reduce_95,
  2, 93, :_reduce_96,
  4, 100, :_reduce_97,
  0, 100, :_reduce_none,
  2, 73, :_reduce_99,
  1, 73, :_reduce_100,
  1, 73, :_reduce_101 ]

racc_reduce_n = 102

racc_shift_n = 216

racc_token_table = {
  false => 0,
  :error => 1,
  True => 2,
  False => 3,
  And => 4,
  Or => 5,
  Not => 6,
  Igual => 7,
  Distinto => 8,
  MayorIgual => 9,
  MenorIgual => 10,
  Mayor => 11,
  Menor => 12,
  Separador => 13,
  Asignacion => 14,
  BackSlash => 15,
  ParentesisA => 16,
  ParentesisC => 17,
  Flecha => 18,
  Coma => 19,
  Numero => 20,
  Strings => 21,
  Menos => 22,
  Por => 23,
  Entre => 24,
  Porcentaje => 25,
  Mod => 26,
  Div => 27,
  Program => 28,
  Read => 29,
  Write => 30,
  Writeln => 31,
  If => 32,
  Then => 33,
  End => 34,
  While => 35,
  Do => 36,
  Repeat => 37,
  Times => 38,
  Func => 39,
  Begin => 40,
  Return => 41,
  For => 42,
  From => 43,
  To => 44,
  By => 45,
  Is => 46,
  Home => 47,
  OpenEye => 48,
  CloseEye => 49,
  Forward => 50,
  Backward => 51,
  RotateL => 52,
  RotateR => 53,
  SetPosition => 54,
  Arc => 55,
  Boolean => 56,
  Number => 57,
  Variables => 58,
  With => 59,
  :UMENOS => 60,
  :UMINUS => 61,
  :Por => 62,
  :Entre => 63,
  :Porcentaje => 64,
  :Div => 65,
  :Mod => 66,
  :Coma => 67,
  :Mas => 68,
  :Menos => 69,
  Mas => 70,
  "else" => 71 }

racc_nt_base = 72

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"true\"",
  "\"false\"",
  "\"and\"",
  "\"or\"",
  "\"not\"",
  "\"==\"",
  "\"\\\\=\"",
  "\">=\"",
  "\"<=\"",
  "\">\"",
  "\"<\"",
  "\";\"",
  "\"=\"",
  "\"\\\\\"",
  "\"(\"",
  "\")\"",
  "\"->\"",
  "\",\"",
  "\"numero\"",
  "\"string\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"mod\"",
  "\"div\"",
  "\"program\"",
  "\"read\"",
  "\"write\"",
  "\"writeln\"",
  "\"if\"",
  "\"then\"",
  "\"end\"",
  "\"while\"",
  "\"do\"",
  "\"repeat\"",
  "\"times\"",
  "\"func\"",
  "\"begin\"",
  "\"return\"",
  "\"for\"",
  "\"from\"",
  "\"to\"",
  "\"by\"",
  "\"is\"",
  "\"home\"",
  "\"openeye\"",
  "\"closeeye\"",
  "\"forward\"",
  "\"backward\"",
  "\"rotatel\"",
  "\"rotater\"",
  "\"setposition\"",
  "\"arc\"",
  "\"boolean\"",
  "\"number\"",
  "\"variable\"",
  "\"with\"",
  "UMENOS",
  "UMINUS",
  "Por",
  "Entre",
  "Porcentaje",
  "Div",
  "Mod",
  "Coma",
  "Mas",
  "Menos",
  "\"+\"",
  "\"else\"",
  "$start",
  "Retina",
  "Aritmetica",
  "Variables",
  "Numero",
  "Logica",
  "TipoDeDato",
  "Declaracion",
  "Asignacion",
  "Declaraciones",
  "FuncionesSinArg",
  "FuncionesUnArg",
  "FuncionesDosArgs",
  "LLamadaFunciones",
  "Arg",
  "Args",
  "PalabraFunc",
  "Instrucciones",
  "BloqueW",
  "BloqueDo",
  "Entrada",
  "Salida",
  "Argumento",
  "Return",
  "DeclaracionFunciones",
  "CadenaCarac",
  "ElemSalida",
  "BloqSalida",
  "Program" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina.y', 77)
  def _reduce_1(val, _values, result)
    val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 78)
  def _reduce_2(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 79)
  def _reduce_3(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 80)
  def _reduce_4(val, _values, result)
    result = UnaryMenos.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 81)
  def _reduce_5(val, _values, result)
    result = OpSuma.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 82)
  def _reduce_6(val, _values, result)
    result = OpResta.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 83)
  def _reduce_7(val, _values, result)
    result = OpDivision.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 84)
  def _reduce_8(val, _values, result)
    result = OpMultiplication.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 85)
  def _reduce_9(val, _values, result)
    result = OpMod.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 86)
  def _reduce_10(val, _values, result)
    result = OpDiv.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 87)
  def _reduce_11(val, _values, result)
    result = OpModulo.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 90)
  def _reduce_12(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 91)
  def _reduce_13(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 92)
  def _reduce_14(val, _values, result)
    result = True_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 93)
  def _reduce_15(val, _values, result)
    result = False_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 94)
  def _reduce_16(val, _values, result)
    result = UnaryNot.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 95)
  def _reduce_17(val, _values, result)
    result = OpMayor.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 96)
  def _reduce_18(val, _values, result)
    result = OpMenor.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 97)
  def _reduce_19(val, _values, result)
    result = OpMayorIgual.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 98)
  def _reduce_20(val, _values, result)
    result = OpMenorIgual.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 99)
  def _reduce_21(val, _values, result)
    result = OpAnd.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 100)
  def _reduce_22(val, _values, result)
    result = OpOr.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 101)
  def _reduce_23(val, _values, result)
    result = OpIgual.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 102)
  def _reduce_24(val, _values, result)
    result = OpDistinto.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 105)
  def _reduce_25(val, _values, result)
     result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 106)
  def _reduce_26(val, _values, result)
    result = Identificado.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 110)
  def _reduce_27(val, _values, result)
    result = TipoDato_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 111)
  def _reduce_28(val, _values, result)
    result = TipoDato_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 114)
  def _reduce_29(val, _values, result)
    result = OpDeclaracion.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 115)
  def _reduce_30(val, _values, result)
    result = OpDeclaracion.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 118)
  def _reduce_31(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 119)
  def _reduce_32(val, _values, result)
    result = BinaryOP.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 122)
  def _reduce_33(val, _values, result)
    result = OpAsignacion.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 123)
  def _reduce_34(val, _values, result)
    result = OpAsignacion.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 126)
  def _reduce_35(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 127)
  def _reduce_36(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 128)
  def _reduce_37(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 131)
  def _reduce_38(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 132)
  def _reduce_39(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 133)
  def _reduce_40(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 134)
  def _reduce_41(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 137)
  def _reduce_42(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 138)
  def _reduce_43(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 141)
  def _reduce_44(val, _values, result)
    result = LlamadaFuncion.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 142)
  def _reduce_45(val, _values, result)
    result = LlamadaFuncion.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 143)
  def _reduce_46(val, _values, result)
    result = FuncionArg.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 144)
  def _reduce_47(val, _values, result)
    result = ThreeOP.new(val[0],val[2],val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 145)
  def _reduce_48(val, _values, result)
    result = FuncionArg.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 146)
  def _reduce_49(val, _values, result)
    result = FuncionArg.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 149)
  def _reduce_50(val, _values, result)
    result = Argumento.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 150)
  def _reduce_51(val, _values, result)
    result = Argumento.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 151)
  def _reduce_52(val, _values, result)
    result = Argumento.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 153)
  def _reduce_53(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 154)
  def _reduce_54(val, _values, result)
    result = BinaryOP.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 156)
  def _reduce_55(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 158)
  def _reduce_56(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 159)
  def _reduce_57(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 160)
  def _reduce_58(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 161)
  def _reduce_59(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 162)
  def _reduce_60(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 163)
  def _reduce_61(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 164)
  def _reduce_62(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 165)
  def _reduce_63(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 166)
  def _reduce_64(val, _values, result)
    result = Instruccion_.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 168)
  def _reduce_65(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 169)
  def _reduce_66(val, _values, result)
    result = BinaryOP.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 172)
  def _reduce_67(val, _values, result)
    result = Return_.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 173)
  def _reduce_68(val, _values, result)
    result = Return_.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 174)
  def _reduce_69(val, _values, result)
    result = Return_.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 177)
  def _reduce_70(val, _values, result)
    result = Funcion_.new(val[0],val[1],val[3],val[6])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 178)
  def _reduce_71(val, _values, result)
    result = Funcion_.new(val[0,val[1],nil,val[5]])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 179)
  def _reduce_72(val, _values, result)
    result = Funcion_R.new(val[0],val[1],val[3],val[6],val[8],val[9])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 180)
  def _reduce_73(val, _values, result)
    result = Funcion_R.new(val[0],val[1],nil,val[5],val[7],val[8])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 183)
  def _reduce_74(val, _values, result)
    result = Bloque.new(val[1],nil)
    result
  end
.,.,

# reduce 75 omitted

module_eval(<<'.,.,', 'retina.y', 187)
  def _reduce_76(val, _values, result)
    result = Num.new(val[0])
    result
  end
.,.,

# reduce 77 omitted

module_eval(<<'.,.,', 'retina.y', 191)
  def _reduce_78(val, _values, result)
    result = Bloque.new(val[1],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 192)
  def _reduce_79(val, _values, result)
    result = Condicional.new(val[1],val[3],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 193)
  def _reduce_80(val, _values, result)
    result = Bloque.new(val[1],val[3],val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 194)
  def _reduce_81(val, _values, result)
    result = Bloque.new(val[1],val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 195)
  def _reduce_82(val, _values, result)
    result = Iteracion.new(val[1],val[3],val[5],val[6])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 196)
  def _reduce_83(val, _values, result)
    result = Iteracion.new(val[1],val[3],nil,nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 197)
  def _reduce_84(val, _values, result)
    result = Iteracion.new(val[1],val[3],nil,nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 200)
  def _reduce_85(val, _values, result)
    result = Entrada.new(val[1])
    result
  end
.,.,

# reduce 86 omitted

module_eval(<<'.,.,', 'retina.y', 204)
  def _reduce_87(val, _values, result)
    result = String_.new(val[0])
    result
  end
.,.,

# reduce 88 omitted

module_eval(<<'.,.,', 'retina.y', 208)
  def _reduce_89(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 209)
  def _reduce_90(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 210)
  def _reduce_91(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 211)
  def _reduce_92(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 214)
  def _reduce_93(val, _values, result)
    result = Salida_.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 215)
  def _reduce_94(val, _values, result)
    result = Salida_.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 218)
  def _reduce_95(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 219)
  def _reduce_96(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 222)
  def _reduce_97(val, _values, result)
    result = Programa.new(val[1])
    result
  end
.,.,

# reduce 98 omitted

module_eval(<<'.,.,', 'retina.y', 226)
  def _reduce_99(val, _values, result)
    result = FinalRetina.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 227)
  def _reduce_100(val, _values, result)
    result = FinalRetina.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 228)
  def _reduce_101(val, _values, result)
    result = FinalRetina.new(val[0],nil)
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
