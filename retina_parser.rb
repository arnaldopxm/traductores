#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require_relative "retina.rb"
require_relative "retina_ast.rb"

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        "Syntactic error on: #{@token}"
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina.y/module_eval...', 'retina.y', 311)
begin
	def on_error(id, token, stack)
	    raise SyntacticError::new(token)
	end

	def next_token
			if !@tokens.empty?
		    token = @tokens[0]
				@tokens = @tokens[1..@tokens.length]
				#puts "#{token.class},#{token}"
				return [token.class,token]
			else
	    	return [false,false]
			end
	end

	def parse(tokens)
	    @yydebug = true
	    #@lexer = lexer
	    @tokens = tokens
			#puts " #{@tokens}..."
	    ast = do_parse
			#puts "#{ast} astast"
	    return ast
	end
end
...end retina.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    16,    17,    58,   130,    18,   229,    41,   230,    13,   266,
     4,   222,     8,    58,    11,   241,   228,    41,    41,    13,
    13,     2,   106,   105,   221,     8,     8,    47,    48,    49,
    43,     8,   246,    44,    40,    46,   224,   240,   227,    40,
    45,     8,   106,   105,     9,    20,    21,    22,    23,    24,
    25,    26,    27,    28,     9,     9,     9,    42,    85,    86,
   247,    87,    88,    83,    84,    81,    82,     9,     9,   217,
    90,    16,    17,     9,   213,    18,    75,    77,    76,    80,
    78,    79,   248,     9,    40,    11,   106,   105,    58,    41,
   212,    13,    41,   265,    13,   106,   105,   209,    47,    48,
    49,    43,   106,   105,    44,    40,    46,   106,   105,    94,
    95,    45,    96,    97,    41,    74,    20,    21,    22,    23,
    24,    25,    26,    27,    28,    16,    17,     9,    42,    18,
     9,    72,    73,    70,    71,    68,    69,     8,    58,    11,
   225,    41,    41,    41,    13,    13,    62,    64,    63,    67,
    65,    66,    47,    48,    49,    43,   127,    50,    44,    40,
    46,   254,   255,    94,    95,    45,    96,    97,   126,    41,
    20,    21,    22,    23,    24,    25,    26,    27,    28,     9,
     9,     9,    42,    85,    86,    61,    87,    88,    83,    84,
    81,    82,    89,   259,   260,    40,    16,    17,   101,   100,
    18,    75,    77,    76,    80,    78,    79,   232,     8,   223,
    11,    99,    41,    98,    41,    40,    13,   231,    94,    95,
    54,    96,    97,    47,    48,    49,    43,   281,    52,    44,
    40,    46,   278,    58,   279,     4,    45,    41,     7,    13,
    74,    20,    21,    22,    23,    24,    25,    26,    27,    28,
     9,    85,     9,    42,    87,    88,    83,    84,    81,    82,
   226,   282,   283,    94,    16,    17,    96,    97,    18,    75,
    77,    76,    80,    78,    79,     9,    94,    95,    11,    96,
    97,    58,    41,   284,    13,    41,    94,    13,   nil,    96,
    97,    47,    48,    49,    43,   nil,   nil,    44,    40,    46,
   nil,   nil,   nil,   268,    45,   219,   nil,   nil,    74,    20,
    21,    22,    23,    24,    25,    26,    27,    28,    16,    17,
     9,    42,    18,     9,    72,    73,    70,    71,    68,    69,
   280,    58,    11,   nil,   nil,    41,    41,    13,    13,    62,
    64,    63,    67,    65,    66,    47,    48,    49,    43,   nil,
   249,    44,    40,    46,   nil,   nil,    94,    95,    45,    96,
    97,   nil,   nil,    20,    21,    22,    23,    24,    25,    26,
    27,    28,   nil,     9,     9,    42,    85,    86,    61,    87,
    88,    83,    84,    81,    82,   nil,   nil,   nil,    90,    16,
    17,   nil,   nil,    18,    75,    77,    76,    80,    78,    79,
   nil,   nil,    58,    11,   nil,   131,    41,    41,    13,    13,
    62,    64,    63,    67,    65,    66,    47,    48,    49,    43,
   nil,    58,    44,    40,    46,    41,   nil,    13,   nil,    45,
   nil,   nil,   nil,    74,    20,    21,    22,    23,    24,    25,
    26,    27,    28,   nil,     9,     9,    42,    85,    86,    61,
    87,    88,    83,    84,    81,    82,   nil,    89,   nil,    90,
    16,    17,   nil,     9,    18,    75,    77,    76,    80,    78,
    79,   nil,    94,    95,    11,    96,    97,   nil,    41,    58,
    13,   nil,   nil,    41,   nil,    13,   nil,    47,    48,    49,
    43,   nil,   nil,    44,    40,    46,   nil,   nil,    94,    95,
    45,    96,    97,   nil,    74,    20,    21,    22,    23,    24,
    25,    26,    27,    28,    16,    17,     9,    42,    18,    16,
    17,     9,   nil,    18,   nil,   nil,   nil,   nil,    11,   nil,
   nil,   nil,    41,    11,    13,   nil,   nil,    41,   nil,    13,
   nil,    47,    48,    49,    43,   nil,   nil,    44,    40,    46,
   nil,   nil,    58,   nil,    45,   nil,    41,   nil,    13,    20,
    21,    22,    23,    24,    25,    26,    27,    28,    16,    17,
     9,    42,    18,    16,    17,     9,   nil,    18,   nil,   nil,
   nil,   nil,    11,   nil,   nil,   nil,    41,    11,    13,   nil,
   nil,    41,   nil,    13,     9,    47,    48,    49,    43,   nil,
   nil,    44,    40,    46,   nil,   nil,    58,   268,    45,   nil,
    41,   nil,    13,    20,    21,    22,    23,    24,    25,    26,
    27,    28,    16,    17,     9,    42,    18,    16,    17,     9,
   nil,    18,   nil,   nil,   nil,   nil,    11,   nil,   nil,   nil,
    41,    11,    13,   nil,   nil,    41,   nil,    13,     9,    47,
    48,    49,    43,   nil,   nil,    44,    40,    46,   nil,   nil,
    58,   nil,    45,   nil,    41,   nil,    13,    20,    21,    22,
    23,    24,    25,    26,    27,    28,    16,    17,     9,    42,
    18,    16,    17,     9,   nil,    18,   nil,   nil,   nil,   nil,
    11,   nil,   nil,   nil,    41,    11,    13,   nil,   nil,    41,
   nil,    13,     9,    47,    48,    49,    43,   nil,   262,    44,
    40,    46,   nil,   nil,    58,   nil,    45,   nil,    41,   nil,
    13,    20,    21,    22,    23,    24,    25,    26,    27,    28,
    16,    17,     9,    42,    18,    16,    17,     9,   nil,    18,
   nil,   nil,   nil,   nil,    11,   nil,   nil,   nil,    41,    11,
    13,   nil,   nil,    41,   nil,    13,     9,    47,    48,    49,
    43,   nil,   nil,    44,    40,    46,   nil,   nil,    58,   nil,
    45,   nil,    41,   nil,    13,    20,    21,    22,    23,    24,
    25,    26,    27,    28,    16,    17,     9,    42,    18,    16,
    17,     9,   nil,    18,   nil,   nil,   nil,   nil,    11,   nil,
   nil,   nil,    41,    11,    13,   nil,   nil,    41,   nil,    13,
     9,    47,    48,    49,    43,   nil,   103,    44,    40,    46,
   nil,   nil,    58,   nil,    45,   nil,    41,   nil,    13,    20,
    21,    22,    23,    24,    25,    26,    27,    28,    16,    17,
     9,    42,    18,    16,    17,     9,   nil,    18,   nil,   nil,
   nil,   nil,    11,   nil,   nil,   nil,    41,    11,    13,   nil,
   nil,    41,   nil,    13,     9,    47,    48,    49,    43,   nil,
   nil,    44,    40,    46,   nil,    58,    58,   nil,    45,    41,
    41,    13,    13,    20,    21,    22,    23,    24,    25,    26,
    27,    28,    16,    17,     9,    42,    18,   nil,   nil,     9,
    94,    95,   nil,    96,    97,   nil,    11,   nil,   nil,   nil,
    41,   nil,    13,   132,   nil,   nil,   nil,     9,     9,    47,
    48,    49,    43,   nil,   258,    44,    40,    46,   nil,    58,
    58,   nil,    45,    41,    41,    13,    13,    20,    21,    22,
    23,    24,    25,    26,    27,    28,   nil,    85,     9,    42,
    87,    88,    83,    84,    81,    82,   nil,   nil,   nil,   nil,
    16,    17,   nil,   nil,    18,    75,    77,    76,    80,    78,
    79,     9,     9,    58,    11,   nil,   127,    41,    41,    13,
    13,    75,    77,    76,    80,    78,    79,    47,    48,    49,
    43,   nil,   250,    44,    40,    46,   nil,   nil,   nil,   nil,
    45,   nil,   nil,   nil,    74,    20,    21,    22,    23,    24,
    25,    26,    27,    28,   nil,     9,     9,    42,    85,    86,
    74,    87,    88,    83,    84,    81,    82,   nil,    16,    17,
   nil,   127,    18,   nil,   nil,   nil,    75,    77,    76,    80,
    78,    79,    11,    16,    17,   nil,    41,    18,    13,    72,
    73,    70,    71,    68,    69,   nil,    58,    11,   nil,   nil,
    41,    41,    13,    13,    62,    64,    63,    67,    65,    66,
    47,    48,    49,    43,   nil,    74,    44,    40,    46,   nil,
   nil,   nil,   nil,    45,     9,   nil,   nil,   nil,    20,    21,
    22,    23,    24,    25,    26,    27,    28,   nil,     9,     9,
    42,    85,    86,    61,    87,    88,    83,    84,    81,    82,
   nil,   nil,   nil,   nil,    16,    17,   nil,   nil,    18,    75,
    77,    76,    80,    78,    79,   nil,   nil,   nil,    11,   nil,
   nil,   nil,    41,    58,    13,   nil,   nil,    41,   nil,    13,
   nil,    47,    48,    49,    43,   nil,   253,    44,    40,    46,
   nil,   nil,   nil,   nil,    45,   nil,   nil,   nil,    74,    20,
    21,    22,    23,    24,    25,    26,    27,    28,    16,    17,
     9,    42,    18,    16,    17,     9,   nil,    18,   nil,   nil,
   nil,   nil,    11,   nil,   nil,   nil,    41,    11,    13,   nil,
   nil,    41,   nil,    13,   nil,    47,    48,    49,    43,   nil,
   214,    44,    40,    46,   nil,   nil,   nil,   nil,    45,   nil,
   nil,   nil,   nil,    20,    21,    22,    23,    24,    25,    26,
    27,    28,    16,    17,     9,    42,    18,   nil,   nil,     9,
   nil,   nil,   nil,   nil,    16,    17,    11,   nil,    18,   nil,
    41,   120,    13,    16,    17,   nil,   nil,    18,    11,   nil,
   nil,   nil,    41,   120,    13,   nil,    58,    11,   nil,   nil,
    41,    41,    13,    13,   nil,   nil,   nil,    20,    21,    22,
    23,    24,    25,    26,    27,    28,   nil,   nil,     9,    20,
    21,    22,    23,    24,    25,    26,    27,    28,    16,    17,
     9,   nil,    18,    16,    17,   nil,   nil,    18,     9,     9,
   nil,   nil,    11,   nil,   nil,   nil,    41,    11,    13,   nil,
   nil,    41,   nil,    13,    16,    17,   nil,   nil,    18,   nil,
   nil,    16,    17,   nil,   nil,    18,   nil,   nil,    11,   nil,
   nil,   nil,    41,   120,    13,    11,    16,    17,   nil,    41,
    18,    13,   nil,   nil,     9,   nil,   nil,   nil,   nil,     9,
    11,    58,   nil,   nil,    41,    41,    13,    13,   nil,    20,
    21,    22,    23,    24,    25,    26,    27,    28,   nil,    58,
     9,   nil,   nil,    41,   nil,    13,   nil,     9,   nil,   nil,
   nil,    20,    21,    22,    23,    24,    25,    26,    27,    28,
    16,    17,     9,     9,    18,    16,    17,   nil,   nil,    18,
   nil,   nil,    16,    17,    11,   nil,    18,   nil,    41,    11,
    13,     9,   nil,    41,   nil,    13,    11,    16,    17,   nil,
    41,    18,    13,   nil,    16,    17,   nil,   nil,    18,   nil,
   nil,    11,   nil,   nil,   nil,    41,   nil,    13,    11,   198,
   nil,   nil,    41,   nil,    13,   nil,     9,   nil,   nil,   nil,
   nil,     9,    72,    73,    70,    71,    68,    69,     9,    72,
    73,    70,    71,    68,    69,   nil,   nil,    62,    64,    63,
    67,    65,    66,     9,    62,    64,    63,    67,    65,    66,
     9,    72,    73,    70,    71,    68,    69,    64,    63,    67,
    65,    66,   nil,   nil,   nil,   nil,    62,    64,    63,    67,
    65,    66,   nil,   nil,   nil,   nil,    61,    72,    73,    70,
    71,    68,    69,    61,   nil,   nil,   nil,   131,   nil,   nil,
   nil,   nil,    62,    64,    63,    67,    65,    66,    83,    84,
    81,    82,   nil,   nil,   nil,    61,    83,    84,    81,    82,
   nil,    75,    77,    76,    80,    78,    79,   nil,   nil,    75,
    77,    76,    80,    78,    79,    70,    71,    68,    69,   nil,
   nil,    61,    77,    76,    80,    78,    79,   nil,    62,    64,
    63,    67,    65,    66,   nil,   nil,    83,    84,    81,    82,
    74,   nil,    83,    84,    81,    82,   nil,   nil,    74,    75,
    77,    76,    80,    78,    79,    75,    77,    76,    80,    78,
    79,    83,    84,    81,    82,   nil,   nil,    61,    83,    84,
    81,    82,   nil,   nil,    75,    77,    76,    80,    78,    79,
   nil,    75,    77,    76,    80,    78,    79,   nil,    74,    83,
    84,    81,    82,   nil,    74,    62,    64,    63,    67,    65,
    66,   nil,    75,    77,    76,    80,    78,    79,    70,    71,
    68,    69,   nil,    74,    62,    64,    63,    67,    65,    66,
    74,    62,    64,    63,    67,    65,    66,    75,    77,    76,
    80,    78,    79,   nil,    61,    62,    64,    63,    67,    65,
    66,    74,    75,    77,    76,    80,    78,    79,    77,    76,
    80,    78,    79,    61,    62,    64,    63,    67,    65,    66,
    61,    64,    63,    67,    65,    66,    74,    75,    77,    76,
    80,    78,    79,   nil,    61,    62,    64,    63,    67,    65,
    66,    74,    75,    77,    76,    80,    78,    79,    77,    76,
    80,    78,    79,    61,    75,    77,    76,    80,    78,    79,
    75,    77,    76,    80,    78,    79,    74,    62,    64,    63,
    67,    65,    66,   nil,    61,    75,    77,    76,    80,    78,
    79,    74,    62,    64,    63,    67,    65,    66,    64,    63,
    67,    65,    66,    74,    77,    76,    80,    78,    79,    74,
    75,    77,    76,    80,    78,    79,    61,    62,    64,    63,
    67,    65,    66,   nil,    74,    75,    77,    76,    80,    78,
    79,    61,    62,    64,    63,    67,    65,    66,    75,    77,
    76,    80,    78,    79,    64,    63,    67,    65,    66,    74,
    62,    64,    63,    67,    65,    66,    61,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    74,   nil,   nil,   nil,   nil,   nil,
   nil,    61,   nil,   nil,   nil,   nil,   nil,    74,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    61 ]

racc_action_check = [
   234,   234,    69,    54,   234,   199,    69,   199,    69,   258,
     0,   114,   107,    81,   234,   226,   130,    81,   234,    81,
   234,     0,   228,   228,   113,     3,     8,   234,   234,   234,
   234,    45,   234,   234,   234,   234,   123,   226,   130,   109,
   234,    47,    54,    54,    69,   234,   234,   234,   234,   234,
   234,   234,   234,   234,   107,    81,   234,   234,   275,   275,
   234,   275,   275,   275,   275,   275,   275,     3,     8,   108,
   275,   240,   240,    45,   103,   240,   275,   275,   275,   275,
   275,   275,   235,    47,   257,   240,    42,    42,    80,   240,
   102,   240,    80,   257,    80,   241,   241,    98,   240,   240,
   240,   240,   217,   217,   240,   240,   240,   225,   225,   119,
   119,   240,   119,   119,   221,   275,   240,   240,   240,   240,
   240,   240,   240,   240,   240,     4,     4,   240,   240,     4,
    80,   117,   117,   117,   117,   117,   117,   265,    79,     4,
   128,   265,    79,     4,    79,     4,   117,   117,   117,   117,
   117,   117,     4,     4,     4,     4,    53,     4,     4,     4,
     4,   243,   245,   112,   112,     4,   112,   112,    50,   248,
     4,     4,     4,     4,     4,     4,     4,     4,     4,   265,
    79,     4,     4,   110,   110,   117,   110,   110,   110,   110,
   110,   110,   215,   252,   253,   112,   227,   227,    38,    31,
   227,   110,   110,   110,   110,   110,   110,   211,    46,   115,
   227,    30,    46,    29,   227,   264,   227,   210,   276,   276,
    10,   276,   276,   227,   227,   227,   227,   276,     7,   227,
   227,   227,   269,    78,   273,     5,   227,    78,     1,    78,
   110,   227,   227,   227,   227,   227,   227,   227,   227,   227,
    46,   185,   227,   227,   185,   185,   185,   185,   185,   185,
   129,   277,   278,   204,   267,   267,   204,   204,   267,   185,
   185,   185,   185,   185,   185,    78,   111,   111,   267,   111,
   111,    77,   267,   279,   267,    77,   186,    77,   nil,   186,
   186,   267,   267,   267,   267,   nil,   nil,   267,   267,   267,
   nil,   nil,   nil,   267,   267,   111,   nil,   nil,   185,   267,
   267,   267,   267,   267,   267,   267,   267,   267,   236,   236,
   267,   267,   236,    77,   274,   274,   274,   274,   274,   274,
   274,    76,   236,   nil,   nil,    76,   236,    76,   236,   274,
   274,   274,   274,   274,   274,   236,   236,   236,   236,   nil,
   236,   236,   236,   236,   nil,   nil,   194,   194,   236,   194,
   194,   nil,   nil,   236,   236,   236,   236,   236,   236,   236,
   236,   236,   nil,    76,   236,   236,   118,   118,   274,   118,
   118,   118,   118,   118,   118,   nil,   nil,   nil,   118,   223,
   223,   nil,   nil,   223,   118,   118,   118,   118,   118,   118,
   nil,   nil,    75,   223,   nil,   133,    75,   223,    75,   223,
   133,   133,   133,   133,   133,   133,   223,   223,   223,   223,
   nil,    74,   223,   223,   223,    74,   nil,    74,   nil,   223,
   nil,   nil,   nil,   118,   223,   223,   223,   223,   223,   223,
   223,   223,   223,   nil,    75,   223,   223,    15,    15,   133,
    15,    15,    15,    15,    15,    15,   nil,    15,   nil,    15,
   222,   222,   nil,    74,   222,    15,    15,    15,    15,    15,
    15,   nil,   197,   197,   222,   197,   197,   nil,   222,    72,
   222,   nil,   nil,    72,   nil,    72,   nil,   222,   222,   222,
   222,   nil,   nil,   222,   222,   222,   nil,   nil,    19,    19,
   222,    19,    19,   nil,    15,   222,   222,   222,   222,   222,
   222,   222,   222,   222,   219,   219,   222,   222,   219,    96,
    96,    72,   nil,    96,   nil,   nil,   nil,   nil,   219,   nil,
   nil,   nil,   219,    96,   219,   nil,   nil,    96,   nil,    96,
   nil,   219,   219,   219,   219,   nil,   nil,   219,   219,   219,
   nil,   nil,    71,   nil,   219,   nil,    71,   nil,    71,   219,
   219,   219,   219,   219,   219,   219,   219,   219,   261,   261,
   219,   219,   261,    97,    97,    96,   nil,    97,   nil,   nil,
   nil,   nil,   261,   nil,   nil,   nil,   261,    97,   261,   nil,
   nil,    97,   nil,    97,    71,   261,   261,   261,   261,   nil,
   nil,   261,   261,   261,   nil,   nil,    70,   261,   261,   nil,
    70,   nil,    70,   261,   261,   261,   261,   261,   261,   261,
   261,   261,   259,   259,   261,   261,   259,    94,    94,    97,
   nil,    94,   nil,   nil,   nil,   nil,   259,   nil,   nil,   nil,
   259,    94,   259,   nil,   nil,    94,   nil,    94,    70,   259,
   259,   259,   259,   nil,   nil,   259,   259,   259,   nil,   nil,
    73,   nil,   259,   nil,    73,   nil,    73,   259,   259,   259,
   259,   259,   259,   259,   259,   259,   256,   256,   259,   259,
   256,    44,    44,    94,   nil,    44,   nil,   nil,   nil,   nil,
   256,   nil,   nil,   nil,   256,    44,   256,   nil,   nil,    44,
   nil,    44,    73,   256,   256,   256,   256,   nil,   256,   256,
   256,   256,   nil,   nil,    82,   nil,   256,   nil,    82,   nil,
    82,   256,   256,   256,   256,   256,   256,   256,   256,   256,
   254,   254,   256,   256,   254,    43,    43,    44,   nil,    43,
   nil,   nil,   nil,   nil,   254,   nil,   nil,   nil,   254,    43,
   254,   nil,   nil,    43,   nil,    43,    82,   254,   254,   254,
   254,   nil,   nil,   254,   254,   254,   nil,   nil,    68,   nil,
   254,   nil,    68,   nil,    68,   254,   254,   254,   254,   254,
   254,   254,   254,   254,    39,    39,   254,   254,    39,    99,
    99,    43,   nil,    99,   nil,   nil,   nil,   nil,    39,   nil,
   nil,   nil,    39,    99,    39,   nil,   nil,    99,   nil,    99,
    68,    39,    39,    39,    39,   nil,    39,    39,    39,    39,
   nil,   nil,    67,   nil,    39,   nil,    67,   nil,    67,    39,
    39,    39,    39,    39,    39,    39,    39,    39,    40,    40,
    39,    39,    40,   100,   100,    99,   nil,   100,   nil,   nil,
   nil,   nil,    40,   nil,   nil,   nil,    40,   100,    40,   nil,
   nil,   100,   nil,   100,    67,    40,    40,    40,    40,   nil,
   nil,    40,    40,    40,   nil,    66,    65,   nil,    40,    66,
    65,    66,    65,    40,    40,    40,    40,    40,    40,    40,
    40,    40,   251,   251,    40,    40,   251,   nil,   nil,   100,
    57,    57,   nil,    57,    57,   nil,   251,   nil,   nil,   nil,
   251,   nil,   251,    57,   nil,   nil,   nil,    66,    65,   251,
   251,   251,   251,   nil,   251,   251,   251,   251,   nil,    64,
    63,   nil,   251,    64,    63,    64,    63,   251,   251,   251,
   251,   251,   251,   251,   251,   251,   nil,   203,   251,   251,
   203,   203,   203,   203,   203,   203,   nil,   nil,   nil,   nil,
   237,   237,   nil,   nil,   237,   203,   203,   203,   203,   203,
   203,    64,    63,    62,   237,   nil,   134,    62,   237,    62,
   237,   134,   134,   134,   134,   134,   134,   237,   237,   237,
   237,   nil,   237,   237,   237,   237,   nil,   nil,   nil,   nil,
   237,   nil,   nil,   nil,   203,   237,   237,   237,   237,   237,
   237,   237,   237,   237,   nil,    62,   237,   237,    56,    56,
   134,    56,    56,    56,    56,    56,    56,   nil,    85,    85,
   nil,    56,    85,   nil,   nil,   nil,    56,    56,    56,    56,
    56,    56,    85,   247,   247,   nil,    85,   247,    85,    14,
    14,    14,    14,    14,    14,   nil,    13,   247,   nil,   nil,
    13,   247,    13,   247,    14,    14,    14,    14,    14,    14,
   247,   247,   247,   247,   nil,    56,   247,   247,   247,   nil,
   nil,   nil,   nil,   247,    85,   nil,   nil,   nil,   247,   247,
   247,   247,   247,   247,   247,   247,   247,   nil,    13,   247,
   247,   196,   196,    14,   196,   196,   196,   196,   196,   196,
   nil,   nil,   nil,   nil,   242,   242,   nil,   nil,   242,   196,
   196,   196,   196,   196,   196,   nil,   nil,   nil,   242,   nil,
   nil,   nil,   242,    84,   242,   nil,   nil,    84,   nil,    84,
   nil,   242,   242,   242,   242,   nil,   242,   242,   242,   242,
   nil,   nil,   nil,   nil,   242,   nil,   nil,   nil,   196,   242,
   242,   242,   242,   242,   242,   242,   242,   242,   104,   104,
   242,   242,   104,    18,    18,    84,   nil,    18,   nil,   nil,
   nil,   nil,   104,   nil,   nil,   nil,   104,    18,   104,   nil,
   nil,    18,   nil,    18,   nil,   104,   104,   104,   104,   nil,
   104,   104,   104,   104,   nil,   nil,   nil,   nil,   104,   nil,
   nil,   nil,   nil,   104,   104,   104,   104,   104,   104,   104,
   104,   104,    49,    49,   104,   104,    49,   nil,   nil,    18,
   nil,   nil,   nil,   nil,    48,    48,    49,   nil,    48,   nil,
    49,    49,    49,    86,    86,   nil,   nil,    86,    48,   nil,
   nil,   nil,    48,    48,    48,   nil,    83,    86,   nil,   nil,
    83,    86,    83,    86,   nil,   nil,   nil,    49,    49,    49,
    49,    49,    49,    49,    49,    49,   nil,   nil,    49,    48,
    48,    48,    48,    48,    48,    48,    48,    48,    87,    87,
    48,   nil,    87,    11,    11,   nil,   nil,    11,    83,    86,
   nil,   nil,    87,   nil,   nil,   nil,    87,    11,    87,   nil,
   nil,    11,   nil,    11,   224,   224,   nil,   nil,   224,   nil,
   nil,    88,    88,   nil,   nil,    88,   nil,   nil,   224,   nil,
   nil,   nil,   224,   224,   224,    88,   268,   268,   nil,    88,
   268,    88,   nil,   nil,    87,   nil,   nil,   nil,   nil,    11,
   268,    61,   nil,   nil,   268,    61,   268,    61,   nil,   224,
   224,   224,   224,   224,   224,   224,   224,   224,   nil,    58,
   224,   nil,   nil,    58,   nil,    58,   nil,    88,   nil,   nil,
   nil,   268,   268,   268,   268,   268,   268,   268,   268,   268,
   230,   230,   268,    61,   230,   232,   232,   nil,   nil,   232,
   nil,   nil,    89,    89,   230,   nil,    89,   nil,   230,   232,
   230,    58,   nil,   232,   nil,   232,    89,    95,    95,   nil,
    89,    95,    89,   nil,    90,    90,   nil,   nil,    90,   nil,
   nil,    95,   nil,   nil,   nil,    95,   nil,    95,    90,    90,
   nil,   nil,    90,   nil,    90,   nil,   230,   nil,   nil,   nil,
   nil,   232,   193,   193,   193,   193,   193,   193,    89,    91,
    91,    91,    91,    91,    91,   nil,   nil,   193,   193,   193,
   193,   193,   193,    95,    91,    91,    91,    91,    91,    91,
    90,   195,   195,   195,   195,   195,   195,   161,   161,   161,
   161,   161,   nil,   nil,   nil,   nil,   195,   195,   195,   195,
   195,   195,   nil,   nil,   nil,   nil,   193,    55,    55,    55,
    55,    55,    55,    91,   nil,   nil,   nil,    55,   nil,   nil,
   nil,   nil,    55,    55,    55,    55,    55,    55,   201,   201,
   201,   201,   nil,   nil,   nil,   195,    92,    92,    92,    92,
   nil,   201,   201,   201,   201,   201,   201,   nil,   nil,    92,
    92,    92,    92,    92,    92,   190,   190,   190,   190,   nil,
   nil,    55,   138,   138,   138,   138,   138,   nil,   190,   190,
   190,   190,   190,   190,   nil,   nil,   205,   205,   205,   205,
   201,   nil,   183,   183,   183,   183,   nil,   nil,    92,   205,
   205,   205,   205,   205,   205,   183,   183,   183,   183,   183,
   183,   207,   207,   207,   207,   nil,   nil,   190,   188,   188,
   188,   188,   nil,   nil,   207,   207,   207,   207,   207,   207,
   nil,   188,   188,   188,   188,   188,   188,   nil,   205,   191,
   191,   191,   191,   nil,   183,   149,   149,   149,   149,   149,
   149,   nil,   191,   191,   191,   191,   191,   191,   187,   187,
   187,   187,   nil,   207,   153,   153,   153,   153,   153,   153,
   188,   187,   187,   187,   187,   187,   187,   154,   154,   154,
   154,   154,   154,   nil,   149,   155,   155,   155,   155,   155,
   155,   191,   156,   156,   156,   156,   156,   156,   162,   162,
   162,   162,   162,   153,   157,   157,   157,   157,   157,   157,
   187,   137,   137,   137,   137,   137,   154,   158,   158,   158,
   158,   158,   158,   nil,   155,   159,   159,   159,   159,   159,
   159,   156,   160,   160,   160,   160,   160,   160,   136,   136,
   136,   136,   136,   157,   150,   150,   150,   150,   150,   150,
   152,   152,   152,   152,   152,   152,   158,   181,   181,   181,
   181,   181,   181,   nil,   159,   182,   182,   182,   182,   182,
   182,   160,   175,   175,   175,   175,   175,   175,   163,   163,
   163,   163,   163,   150,   164,   164,   164,   164,   164,   152,
   176,   176,   176,   176,   176,   176,   181,   177,   177,   177,
   177,   177,   177,   nil,   182,   178,   178,   178,   178,   178,
   178,   175,   179,   179,   179,   179,   179,   179,   180,   180,
   180,   180,   180,   180,   135,   135,   135,   135,   135,   176,
   151,   151,   151,   151,   151,   151,   177,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   178,   nil,   nil,   nil,   nil,   nil,
   nil,   179,   nil,   nil,   nil,   nil,   nil,   180,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   151 ]

racc_action_pointer = [
   -18,   238,   nil,     9,   123,   207,   nil,   228,    10,   nil,
   204,  1291,   nil,  1040,  1042,   443,   nil,   nil,  1171,   494,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   197,
   195,   183,   nil,   nil,   nil,   nil,   nil,   nil,   185,   782,
   836,   nil,    30,   733,   679,    15,   192,    25,  1232,  1220,
   155,   nil,   nil,   139,   -14,  1500,  1014,   896,  1353,   nil,
   nil,  1335,   957,   914,   913,   860,   859,   806,   752,   -14,
   590,   536,   463,   644,   405,   386,   315,   265,   217,   122,
    72,    -3,   698,  1240,  1117,  1026,  1241,  1286,  1319,  1400,
  1422,  1452,  1527,   nil,   625,  1415,   517,   571,    80,   787,
   841,   nil,    77,    61,  1166,   nil,   nil,    -4,    56,     3,
   179,   272,   159,   -19,   -27,   171,   nil,   124,   372,   105,
   nil,   nil,   nil,    17,   nil,   nil,   nil,   nil,   121,   243,
    -2,   nil,   nil,   388,   959,  1791,  1705,  1678,  1539,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  1613,
  1712,  1798,  1718,  1632,  1645,  1653,  1660,  1672,  1685,  1693,
  1700,  1464,  1665,  1745,  1751,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,  1740,  1758,  1765,  1773,  1780,
  1786,  1725,  1733,  1573,   nil,   247,   282,  1639,  1599,   nil,
  1546,  1620,   nil,  1445,   352,  1474,  1097,   468,   nil,   -12,
   nil,  1519,   nil,   943,   259,  1567,   nil,  1592,   nil,   nil,
   200,   188,   nil,   nil,   nil,   178,   nil,    46,   nil,   512,
   nil,    94,   458,   387,  1312,    51,    -3,   194,   -34,   nil,
  1388,   nil,  1393,   nil,    -2,    38,   316,   958,   nil,   nil,
    69,    39,  1112,   121,   nil,   145,   nil,  1041,   149,   nil,
   nil,   890,   153,   181,   728,   nil,   674,    48,    -4,   620,
   nil,   566,   nil,   nil,   179,   121,   nil,   262,  1334,   198,
   nil,   nil,   nil,   200,   317,    54,   214,   248,   249,   270,
   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
  -153,  -153,  -105,  -153,  -153,  -151,  -152,  -153,  -153,   -77,
  -153,  -153,    -2,  -153,  -108,  -153,   -34,   -35,  -153,  -109,
   -86,   -87,   -88,   -89,   -90,   -91,   -92,   -93,   -94,  -153,
  -153,  -153,  -106,  -107,  -110,  -111,  -112,  -113,  -153,  -153,
  -153,  -126,  -153,  -153,  -153,  -153,  -153,  -153,  -153,  -153,
  -153,  -150,   285,  -153,  -153,  -153,  -153,  -153,  -153,    -3,
   -11,  -153,  -153,  -153,  -153,  -153,  -153,  -153,  -153,  -153,
  -153,  -153,  -153,  -153,  -153,  -153,  -153,  -153,  -153,  -153,
  -153,  -153,  -153,  -153,  -153,  -153,  -153,  -153,  -153,  -153,
  -153,  -153,   -57,   -36,  -153,  -153,  -153,  -153,  -153,  -153,
  -153,  -114,  -153,  -153,  -153,   -78,   -79,  -153,  -153,  -153,
  -153,  -153,  -153,  -153,  -153,  -153,  -137,  -141,  -143,  -140,
  -138,  -139,  -142,  -144,  -146,  -147,  -149,   -76,  -116,  -153,
  -153,    -1,   -33,  -153,  -153,    -4,   -12,    -5,   -13,    -6,
   -14,    -7,   -15,    -8,   -16,    -9,   -17,   -10,   -18,   -37,
   -45,   -38,   -46,   -39,   -47,   -40,   -48,   -74,   -70,   -75,
   -73,   -19,   -26,   -20,   -27,   -21,   -28,   -22,   -29,   -23,
   -30,   -24,   -31,   -25,   -32,   -41,   -49,   -42,   -50,   -43,
   -51,   -44,   -52,   -66,   -58,   -67,   -59,   -72,   -68,   -60,
   -71,   -69,   -61,   -85,   -84,  -101,  -102,  -100,   -95,  -153,
  -103,   -62,   -53,   -63,   -54,   -64,   -55,   -65,   -56,   -96,
  -153,  -153,  -115,  -148,  -125,   -80,   -81,   -82,  -127,  -153,
  -130,  -153,  -153,  -153,  -153,  -153,  -153,  -153,  -153,   -99,
  -153,   -97,  -153,   -83,  -153,  -153,  -153,  -153,  -145,  -117,
  -153,  -153,  -153,  -153,  -104,  -153,  -128,  -153,  -153,  -133,
  -134,  -153,  -153,  -153,  -153,   -98,  -153,  -153,  -153,  -153,
  -122,  -153,  -129,  -131,  -153,  -153,  -121,  -153,  -153,  -153,
  -132,  -135,  -136,  -153,  -153,  -153,  -153,  -153,  -153,  -153,
  -118,  -120,  -119,  -124,  -123 ]

racc_goto_table = [
    10,   243,   122,   122,   109,    53,   114,   199,    56,   128,
    60,   124,   125,   129,   252,    92,   269,     3,     6,     5,
   264,   216,   273,    51,     1,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   218,   nil,   nil,   220,   102,   nil,
   110,   110,   113,   115,   116,   118,   118,   nil,   nil,   nil,
   nil,   nil,   nil,    39,   nil,   134,   nil,   nil,   136,   138,
   140,   142,   144,   146,   148,   150,   152,   154,   156,   158,
   160,   162,   164,   166,   168,   170,   172,   174,   176,   178,
   180,   182,   183,   185,   188,   191,   110,   196,    55,   104,
    59,   201,   203,   205,   207,    91,   196,   196,   200,   nil,
   nil,   nil,   nil,   102,   215,   nil,   nil,   210,   211,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    91,    91,   nil,   nil,   nil,   117,   117,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   133,   nil,   nil,   135,   137,
   139,   141,   143,   145,   147,   149,   151,   153,   155,   157,
   159,   161,   163,   165,   167,   169,   171,   173,   175,   177,
   179,   181,    91,    91,   187,   190,   193,   195,    57,   nil,
   nil,    91,    91,    91,    91,    93,   195,   195,   122,   233,
   128,   235,   263,   nil,   239,   nil,   nil,   238,   nil,   270,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   111,   112,   nil,   nil,   nil,   119,   119,   nil,   257,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   118,   277,   nil,   nil,   271,   nil,   196,   nil,   196,
   nil,   nil,   nil,   102,   nil,   102,   102,   nil,   244,   nil,
   245,   102,   184,   186,   189,   192,   194,   197,   nil,   nil,
   102,   202,   204,   206,   208,   102,   197,   197,   nil,   nil,
   102,   nil,   272,   nil,   nil,   275,   102,   nil,   234,   nil,
   nil,   236,   237,   nil,   nil,   nil,   242,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   251,
   nil,   nil,   nil,   nil,   nil,   nil,   256,   nil,   nil,   nil,
   nil,   117,   nil,   261,   nil,   nil,   nil,   195,   267,   195,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   274,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   119,   nil,   nil,   nil,   nil,   nil,   197,   nil,   197,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   276 ]

racc_goto_check = [
     4,     6,    13,    13,     9,     4,     3,    15,     4,     7,
     4,    29,    29,    23,     6,     4,    24,    16,    30,    25,
    26,     8,    24,    30,     1,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    19,   nil,   nil,    19,    17,   nil,
     4,     4,     4,     4,     4,     4,     4,   nil,   nil,   nil,
   nil,   nil,   nil,    22,   nil,     4,   nil,   nil,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,     2,    22,
     2,     4,     4,     4,     4,     2,     4,     4,    14,   nil,
   nil,   nil,   nil,    17,     4,   nil,   nil,    14,    14,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     2,     2,   nil,   nil,   nil,     2,     2,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     5,   nil,
   nil,     2,     2,     2,     2,     5,     2,     2,    13,     9,
     7,     3,    19,   nil,    23,   nil,   nil,    29,   nil,    19,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     5,     5,   nil,   nil,   nil,     5,     5,   nil,     3,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     4,    13,   nil,   nil,     3,   nil,     4,   nil,     4,
   nil,   nil,   nil,    17,   nil,    17,    17,   nil,    14,   nil,
    14,    17,     5,     5,     5,     5,     5,     5,   nil,   nil,
    17,     5,     5,     5,     5,    17,     5,     5,   nil,   nil,
    17,   nil,     4,   nil,   nil,     4,    17,   nil,    22,   nil,
   nil,    22,    22,   nil,   nil,   nil,    22,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    22,
   nil,   nil,   nil,   nil,   nil,   nil,    22,   nil,   nil,   nil,
   nil,     2,   nil,    22,   nil,   nil,   nil,     2,    22,     2,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     5,   nil,   nil,   nil,   nil,   nil,     5,   nil,     5,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     5 ]

racc_goto_pointer = [
   nil,    24,    77,   -40,    -3,   157,  -227,   -45,   -86,   -38,
   nil,   nil,   nil,   -46,     8,   -83,    17,    -1,   nil,   -75,
   nil,   nil,    49,   -41,  -245,    19,  -237,   nil,   nil,   -37,
    18 ]

racc_goto_default = [
   nil,   nil,    14,    12,    15,    19,   107,   108,    33,   nil,
    29,    30,    31,    32,   nil,   nil,   nil,    38,    34,    35,
    36,    37,   nil,   nil,   nil,   nil,   nil,   121,   123,   nil,
   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 65, :_reduce_1,
  1, 65, :_reduce_2,
  2, 65, :_reduce_3,
  3, 65, :_reduce_4,
  3, 65, :_reduce_5,
  3, 65, :_reduce_6,
  3, 65, :_reduce_7,
  3, 65, :_reduce_8,
  3, 65, :_reduce_9,
  3, 65, :_reduce_10,
  2, 65, :_reduce_11,
  3, 65, :_reduce_12,
  3, 65, :_reduce_13,
  3, 65, :_reduce_14,
  3, 65, :_reduce_15,
  3, 65, :_reduce_16,
  3, 65, :_reduce_17,
  3, 65, :_reduce_18,
  3, 65, :_reduce_19,
  3, 65, :_reduce_20,
  3, 65, :_reduce_21,
  3, 65, :_reduce_22,
  3, 65, :_reduce_23,
  3, 65, :_reduce_24,
  3, 65, :_reduce_25,
  3, 65, :_reduce_26,
  3, 65, :_reduce_27,
  3, 65, :_reduce_28,
  3, 65, :_reduce_29,
  3, 65, :_reduce_30,
  3, 65, :_reduce_31,
  3, 65, :_reduce_32,
  3, 68, :_reduce_33,
  1, 68, :_reduce_34,
  1, 68, :_reduce_35,
  2, 68, :_reduce_36,
  3, 68, :_reduce_37,
  3, 68, :_reduce_38,
  3, 68, :_reduce_39,
  3, 68, :_reduce_40,
  3, 68, :_reduce_41,
  3, 68, :_reduce_42,
  3, 68, :_reduce_43,
  3, 68, :_reduce_44,
  3, 68, :_reduce_45,
  3, 68, :_reduce_46,
  3, 68, :_reduce_47,
  3, 68, :_reduce_48,
  3, 68, :_reduce_49,
  3, 68, :_reduce_50,
  3, 68, :_reduce_51,
  3, 68, :_reduce_52,
  3, 68, :_reduce_53,
  3, 68, :_reduce_54,
  3, 68, :_reduce_55,
  3, 68, :_reduce_56,
  2, 68, :_reduce_57,
  3, 68, :_reduce_58,
  3, 68, :_reduce_59,
  3, 68, :_reduce_60,
  3, 68, :_reduce_61,
  3, 68, :_reduce_62,
  3, 68, :_reduce_63,
  3, 68, :_reduce_64,
  3, 68, :_reduce_65,
  3, 68, :_reduce_66,
  3, 68, :_reduce_67,
  3, 68, :_reduce_68,
  3, 68, :_reduce_69,
  3, 68, :_reduce_70,
  3, 68, :_reduce_71,
  3, 68, :_reduce_72,
  3, 68, :_reduce_73,
  3, 68, :_reduce_74,
  3, 68, :_reduce_75,
  3, 67, :_reduce_76,
  1, 67, :_reduce_77,
  1, 69, :_reduce_78,
  1, 69, :_reduce_79,
  2, 70, :_reduce_80,
  2, 70, :_reduce_81,
  2, 72, :_reduce_82,
  3, 72, :_reduce_83,
  3, 71, :_reduce_84,
  3, 71, :_reduce_85,
  1, 73, :_reduce_86,
  1, 73, :_reduce_87,
  1, 73, :_reduce_88,
  1, 74, :_reduce_89,
  1, 74, :_reduce_90,
  1, 74, :_reduce_91,
  1, 74, :_reduce_92,
  1, 75, :_reduce_93,
  1, 75, :_reduce_94,
  3, 76, :_reduce_95,
  3, 76, :_reduce_96,
  4, 76, :_reduce_97,
  6, 76, :_reduce_98,
  4, 76, :_reduce_99,
  1, 77, :_reduce_100,
  1, 77, :_reduce_101,
  1, 77, :_reduce_102,
  1, 78, :_reduce_103,
  3, 78, :_reduce_104,
  1, 79, :_reduce_105,
  1, 80, :_reduce_106,
  1, 80, :_reduce_107,
  1, 80, :_reduce_108,
  1, 80, :_reduce_109,
  1, 80, :_reduce_110,
  1, 80, :_reduce_111,
  1, 80, :_reduce_112,
  1, 80, :_reduce_113,
  2, 85, :_reduce_114,
  3, 85, :_reduce_115,
  1, 86, :_reduce_116,
  3, 86, :_reduce_117,
  3, 87, :_reduce_118,
  3, 87, :_reduce_119,
  3, 87, :_reduce_120,
  9, 88, :_reduce_121,
  8, 88, :_reduce_122,
  12, 88, :_reduce_123,
  11, 88, :_reduce_124,
  3, 82, :_reduce_125,
  1, 66, :_reduce_126,
  3, 81, :_reduce_127,
  5, 81, :_reduce_128,
  7, 81, :_reduce_129,
  3, 81, :_reduce_130,
  7, 81, :_reduce_131,
  8, 81, :_reduce_132,
  5, 81, :_reduce_133,
  5, 81, :_reduce_134,
  2, 89, :_reduce_135,
  2, 89, :_reduce_136,
  2, 83, :_reduce_137,
  1, 90, :_reduce_138,
  1, 91, :_reduce_139,
  1, 91, :_reduce_140,
  1, 91, :_reduce_141,
  1, 91, :_reduce_142,
  1, 91, :_reduce_143,
  1, 92, :_reduce_144,
  3, 92, :_reduce_145,
  2, 84, :_reduce_146,
  2, 84, :_reduce_147,
  4, 93, :_reduce_148,
  3, 93, :_reduce_149,
  2, 64, :_reduce_150,
  1, 64, :_reduce_151,
  1, 64, :_reduce_152 ]

racc_reduce_n = 153

racc_shift_n = 285

racc_token_table = {
  false => 0,
  :error => 1,
  True => 2,
  False => 3,
  And => 4,
  Or => 5,
  Not => 6,
  Igual => 7,
  Distinto => 8,
  MayorIgual => 9,
  MenorIgual => 10,
  Mayor => 11,
  Menor => 12,
  Separador => 13,
  Asignacion => 14,
  BackSlash => 15,
  ParentesisA => 16,
  ParentesisC => 17,
  Flecha => 18,
  Coma => 19,
  Numero => 20,
  Strings => 21,
  Menos => 22,
  Por => 23,
  Entre => 24,
  Porcentaje => 25,
  Mod => 26,
  Div => 27,
  Program => 28,
  Read => 29,
  Write => 30,
  Writeln => 31,
  If => 32,
  Then => 33,
  End => 34,
  While => 35,
  Do => 36,
  Repeat => 37,
  Times => 38,
  Func => 39,
  Begin => 40,
  Return => 41,
  For => 42,
  From => 43,
  To => 44,
  By => 45,
  Is => 46,
  Home => 47,
  OpenEye => 48,
  CloseEye => 49,
  Forward => 50,
  Backward => 51,
  RotateL => 52,
  RotateR => 53,
  SetPosition => 54,
  Arc => 55,
  Boolean => 56,
  Number => 57,
  Variables => 58,
  With => 59,
  :UMENOS => 60,
  Mas => 61,
  Else => 62 }

racc_nt_base = 63

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"true\"",
  "\"false\"",
  "\"and\"",
  "\"or\"",
  "\"not\"",
  "\"==\"",
  "\"\\\\=\"",
  "\">=\"",
  "\"<=\"",
  "\">\"",
  "\"<\"",
  "\";\"",
  "\"=\"",
  "\"\\\\\"",
  "\"(\"",
  "\")\"",
  "\"->\"",
  "\",\"",
  "\"numero\"",
  "\"string\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"mod\"",
  "\"div\"",
  "\"program\"",
  "\"read\"",
  "\"write\"",
  "\"writeln\"",
  "\"if\"",
  "\"then\"",
  "\"end\"",
  "\"while\"",
  "\"do\"",
  "\"repeat\"",
  "\"times\"",
  "\"func\"",
  "\"begin\"",
  "\"return\"",
  "\"for\"",
  "\"from\"",
  "\"to\"",
  "\"by\"",
  "\"is\"",
  "\"home\"",
  "\"openeye\"",
  "\"closeeye\"",
  "\"forward\"",
  "\"backward\"",
  "\"rotatel\"",
  "\"rotater\"",
  "\"setposition\"",
  "\"arc\"",
  "\"boolean\"",
  "\"number\"",
  "\"variable\"",
  "\"with\"",
  "UMENOS",
  "\"+\"",
  "\"else\"",
  "$start",
  "Retina",
  "Aritmetica",
  "Numero",
  "Variables",
  "Logica",
  "TipoDeDato",
  "Declaracion",
  "Asignacion",
  "Declaraciones",
  "FuncionesSinArg",
  "FuncionesUnArg",
  "FuncionesDosArgs",
  "LLamadaFunciones",
  "Arg",
  "Args",
  "PalabraFunc",
  "Instruccion",
  "BloqueW",
  "BloqueDo",
  "Entrada",
  "Salida",
  "Instrucciones",
  "Argumento",
  "Return",
  "DeclaracionFunciones",
  "Incremento",
  "CadenaCarac",
  "ElemSalida",
  "BloqSalida",
  "Program" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina.y', 78)
  def _reduce_1(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 79)
  def _reduce_2(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 80)
  def _reduce_3(val, _values, result)
    result = UnaryMenos.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 81)
  def _reduce_4(val, _values, result)
    result = OpSuma.new(val[0],val[2],'Suma:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 82)
  def _reduce_5(val, _values, result)
    result = OpResta.new(val[0],val[2],'Resta:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 83)
  def _reduce_6(val, _values, result)
    result = OpDivision.new(val[0],val[2],'Division:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 84)
  def _reduce_7(val, _values, result)
    result = OpMultiplication.new(val[0],val[2],'Multiplicacion:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 85)
  def _reduce_8(val, _values, result)
    result = OpMod.new(val[0],val[2],'Modulo:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 86)
  def _reduce_9(val, _values, result)
    result = OpDiv.new(val[0],val[2],'Division:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 87)
  def _reduce_10(val, _values, result)
    result = OpModulo.new(val[0],val[2],'Modulo:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 88)
  def _reduce_11(val, _values, result)
    result = UnaryMenos.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 89)
  def _reduce_12(val, _values, result)
    result = OpSuma.new(val[0],val[2],'Suma:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 90)
  def _reduce_13(val, _values, result)
    result = OpResta.new(val[0],val[2],'Resta:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 91)
  def _reduce_14(val, _values, result)
    result = OpDivision.new(val[0],val[2],'Division:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 92)
  def _reduce_15(val, _values, result)
    result = OpMultiplication.new(val[0],val[2],'Multiplicaion:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 93)
  def _reduce_16(val, _values, result)
    result = OpMod.new(val[0],val[2],'Modulo:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 94)
  def _reduce_17(val, _values, result)
    result = OpDiv.new(val[0],val[2],'Division:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 95)
  def _reduce_18(val, _values, result)
    result = OpModulo.new(val[0],val[2],'Modulo:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 96)
  def _reduce_19(val, _values, result)
    result = OpSuma.new(val[0],val[2],'Suma:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 97)
  def _reduce_20(val, _values, result)
    result = OpResta.new(val[0],val[2],'Resta:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 98)
  def _reduce_21(val, _values, result)
    result = OpDivision.new(val[0],val[2],'Division:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 99)
  def _reduce_22(val, _values, result)
    result = OpMultiplication.new(val[0],val[2],'Multiplicacion:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 100)
  def _reduce_23(val, _values, result)
    result = OpMod.new(val[0],val[2],'Modulo:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 101)
  def _reduce_24(val, _values, result)
    result = OpDiv.new(val[0],val[2],'Division:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 102)
  def _reduce_25(val, _values, result)
    result = OpModulo.new(val[0],val[2],'Modulo:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 103)
  def _reduce_26(val, _values, result)
    result = OpSuma.new(val[0],val[2],'Suma:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 104)
  def _reduce_27(val, _values, result)
    result = OpResta.new(val[0],val[2],'Resta:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 105)
  def _reduce_28(val, _values, result)
    result = OpDivision.new(val[0],val[2],'Division:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 106)
  def _reduce_29(val, _values, result)
    result = OpMultiplication.new(val[0],val[2],'Multiplicacion:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 107)
  def _reduce_30(val, _values, result)
    result = OpMod.new(val[0],val[2],'Modulo:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 108)
  def _reduce_31(val, _values, result)
    result = OpDiv.new(val[0],val[2],'Division:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 109)
  def _reduce_32(val, _values, result)
    result = OpModulo.new(val[0],val[2],'Modulo:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 113)
  def _reduce_33(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 114)
  def _reduce_34(val, _values, result)
    result = True_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 115)
  def _reduce_35(val, _values, result)
    result = False_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 116)
  def _reduce_36(val, _values, result)
    result = UnaryNot.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 117)
  def _reduce_37(val, _values, result)
    result = OpMayor.new(val[0],val[2],'Mayor Estricto:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 118)
  def _reduce_38(val, _values, result)
    result = OpMenor.new(val[0],val[2],'Menor Estricto:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 119)
  def _reduce_39(val, _values, result)
    result = OpMayorIgual.new(val[0],val[2],'Mayor Igual:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 120)
  def _reduce_40(val, _values, result)
    result = OpMenorIgual.new(val[0],val[2],'Menor Igual')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 121)
  def _reduce_41(val, _values, result)
    result = OpMayor.new(val[0],val[2],'Mayor Estricto:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 122)
  def _reduce_42(val, _values, result)
    result = OpMenor.new(val[0],val[2],'Menor Estricto:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 123)
  def _reduce_43(val, _values, result)
    result = OpMayorIgual.new(val[0],val[2],'Mayor Igual:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 124)
  def _reduce_44(val, _values, result)
    result = OpMenorIgual.new(val[0],val[2],'Menor Igual')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 125)
  def _reduce_45(val, _values, result)
    result = OpMayor.new(val[0],val[2],'Mayor Estricto:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 126)
  def _reduce_46(val, _values, result)
    result = OpMenor.new(val[0],val[2],'Menor Estricto:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 127)
  def _reduce_47(val, _values, result)
    result = OpMayorIgual.new(val[0],val[2],'Mayor Igual:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 128)
  def _reduce_48(val, _values, result)
    result = OpMenorIgual.new(val[0],val[2],'Menor Igual')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 129)
  def _reduce_49(val, _values, result)
    result = OpMayor.new(val[0],val[2],'Mayor Estricto:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 130)
  def _reduce_50(val, _values, result)
    result = OpMenor.new(val[0],val[2],'Menor Estricto:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 131)
  def _reduce_51(val, _values, result)
    result = OpMayorIgual.new(val[0],val[2],'Mayor Igual:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 132)
  def _reduce_52(val, _values, result)
    result = OpMenorIgual.new(val[0],val[2],'Menor Igual')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 133)
  def _reduce_53(val, _values, result)
    result = OpAnd.new(val[0],val[2],'And:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 134)
  def _reduce_54(val, _values, result)
    result = OpOr.new(val[0],val[2],'Or:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 135)
  def _reduce_55(val, _values, result)
    result = OpIgual.new(val[0],val[2],'Equivalente:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 136)
  def _reduce_56(val, _values, result)
    result = OpDistinto.new(val[0],val[2],'Distinto:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 137)
  def _reduce_57(val, _values, result)
    result = UnaryNot.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 138)
  def _reduce_58(val, _values, result)
    result = OpAnd.new(val[0],val[2],'And:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 139)
  def _reduce_59(val, _values, result)
    result = OpOr.new(val[0],val[2],'Or:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 140)
  def _reduce_60(val, _values, result)
    result = OpIgual.new(val[0],val[2],'Equivalente:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 141)
  def _reduce_61(val, _values, result)
    result = OpDistinto.new(val[0],val[2],'Distinto:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 142)
  def _reduce_62(val, _values, result)
    result = OpAnd.new(val[0],val[2],'And:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 143)
  def _reduce_63(val, _values, result)
    result = OpOr.new(val[0],val[2],'Or:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 144)
  def _reduce_64(val, _values, result)
    result = OpIgual.new(val[0],val[2],'Equivalente:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 145)
  def _reduce_65(val, _values, result)
    result = OpDistinto.new(val[0],val[2],'Distinto')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 146)
  def _reduce_66(val, _values, result)
    result = OpAnd.new(val[0],val[2],'And:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 147)
  def _reduce_67(val, _values, result)
    result = OpOr.new(val[0],val[2],'Or:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 148)
  def _reduce_68(val, _values, result)
    result = OpIgual.new(val[0],val[2],'Equivalente:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 149)
  def _reduce_69(val, _values, result)
    result = OpDistinto.new(val[0],val[2],'Distinto:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 150)
  def _reduce_70(val, _values, result)
    result = OpIgual.new(val[0],val[2],'Equivalente:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 151)
  def _reduce_71(val, _values, result)
    result = OpDistinto.new(val[0],val[2],'Distinto:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 152)
  def _reduce_72(val, _values, result)
    result = OpIgual.new(val[0],val[2],'Equivalente:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 153)
  def _reduce_73(val, _values, result)
    result = OpDistinto.new(val[0],val[2],'Distinto:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 154)
  def _reduce_74(val, _values, result)
    result = OpIgual.new(val[0],val[2],'Equivalente:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 155)
  def _reduce_75(val, _values, result)
    result = OpDistinto.new(val[0],val[2],'Distinto:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 158)
  def _reduce_76(val, _values, result)
     result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 159)
  def _reduce_77(val, _values, result)
    result = Identificado.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 162)
  def _reduce_78(val, _values, result)
    result = TipoDato_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 163)
  def _reduce_79(val, _values, result)
    result = TipoDato_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 166)
  def _reduce_80(val, _values, result)
    result = OpDeclaracion.new(val[0],val[1],'')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 167)
  def _reduce_81(val, _values, result)
    result = OpDeclaracion.new(val[0],val[1],'')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 170)
  def _reduce_82(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 171)
  def _reduce_83(val, _values, result)
    result = EnSerie.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 174)
  def _reduce_84(val, _values, result)
    result = OpAsignacion.new(val[0],val[2],'Asignacion:')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 175)
  def _reduce_85(val, _values, result)
    result = OpAsignacion.new(val[0],val[2],'Asignacion')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 178)
  def _reduce_86(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 179)
  def _reduce_87(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 180)
  def _reduce_88(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 183)
  def _reduce_89(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 184)
  def _reduce_90(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 185)
  def _reduce_91(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 186)
  def _reduce_92(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 189)
  def _reduce_93(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 190)
  def _reduce_94(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 193)
  def _reduce_95(val, _values, result)
    result = Funciones_.new(val[0],nil,nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 194)
  def _reduce_96(val, _values, result)
    result = Funciones_.new(val[0],nil,nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 195)
  def _reduce_97(val, _values, result)
    result = Funciones_.new(val[0],val[2],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 196)
  def _reduce_98(val, _values, result)
    result = Funciones_.new(val[0],val[2],val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 197)
  def _reduce_99(val, _values, result)
    result = Funciones_.new(val[0],val[2],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 200)
  def _reduce_100(val, _values, result)
    result = Argumento.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 201)
  def _reduce_101(val, _values, result)
    result = Argumento.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 202)
  def _reduce_102(val, _values, result)
    result = Argumento.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 205)
  def _reduce_103(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 206)
  def _reduce_104(val, _values, result)
    result = EnSerie.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 209)
  def _reduce_105(val, _values, result)
    result = Palabra.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 211)
  def _reduce_106(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 212)
  def _reduce_107(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 213)
  def _reduce_108(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 214)
  def _reduce_109(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 215)
  def _reduce_110(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 216)
  def _reduce_111(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 217)
  def _reduce_112(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 218)
  def _reduce_113(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 220)
  def _reduce_114(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 221)
  def _reduce_115(val, _values, result)
    result = EnSerie.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 224)
  def _reduce_116(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 225)
  def _reduce_117(val, _values, result)
    result = EnSerie.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 229)
  def _reduce_118(val, _values, result)
    result = Return_.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 230)
  def _reduce_119(val, _values, result)
    result = Return_.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 231)
  def _reduce_120(val, _values, result)
    result = Return_.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 235)
  def _reduce_121(val, _values, result)
    result = Funcion_.new(val[0],val[1],val[3],val[6])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 236)
  def _reduce_122(val, _values, result)
    result = Funcion_.new(val[0,val[1],nil,val[5]])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 237)
  def _reduce_123(val, _values, result)
    result = Funcion_R.new(val[0],val[1],val[3],val[6],val[8],val[9])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 238)
  def _reduce_124(val, _values, result)
    result = Funcion_R.new(val[0],val[1],nil,val[5],val[7],val[8])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 241)
  def _reduce_125(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 244)
  def _reduce_126(val, _values, result)
    result = Num.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 247)
  def _reduce_127(val, _values, result)
    result = Bloque.new(val[1],val[2],'aa')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 248)
  def _reduce_128(val, _values, result)
    result = Condicional.new(val[1],nil,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 249)
  def _reduce_129(val, _values, result)
    result = Condicional.new(val[1],val[3],val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 250)
  def _reduce_130(val, _values, result)
    result = IteracionIndeterminada.new(val[1],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 251)
  def _reduce_131(val, _values, result)
    result = IteracionDeterminada.new(val[1],val[3],val[5],nil,val[6])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 252)
  def _reduce_132(val, _values, result)
    result= IteracionDeterminada.new(val[1],val[3],val[5],val[6],val[7])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 253)
  def _reduce_133(val, _values, result)
    result = IteracionDeterminadaRepeat.new(nil,nil,val[1],nil,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 254)
  def _reduce_134(val, _values, result)
    result = IteracionDeterminadaRepeat.new(nil,nil,val[1],nil,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 257)
  def _reduce_135(val, _values, result)
    result= val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 258)
  def _reduce_136(val, _values, result)
    result= val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 261)
  def _reduce_137(val, _values, result)
    result = Entrada.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 264)
  def _reduce_138(val, _values, result)
    result = String_.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 267)
  def _reduce_139(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 268)
  def _reduce_140(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 269)
  def _reduce_141(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 270)
  def _reduce_142(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 271)
  def _reduce_143(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 274)
  def _reduce_144(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 275)
  def _reduce_145(val, _values, result)
    result = EnSerie.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 278)
  def _reduce_146(val, _values, result)
    result = Salida_.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 279)
  def _reduce_147(val, _values, result)
    result = Salida_S.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 283)
  def _reduce_148(val, _values, result)
    result = Programa.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 284)
  def _reduce_149(val, _values, result)
    result = Programa.new(nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 288)
  def _reduce_150(val, _values, result)
    result = FinalRetina.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 289)
  def _reduce_151(val, _values, result)
    result = FinalRetina.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina.y', 290)
  def _reduce_152(val, _values, result)
    result = FinalRetina.new(val[0],nil,'')
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
